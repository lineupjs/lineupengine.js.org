{"version":3,"sources":["webpack://lineupengine/webpack/universalModuleDefinition","webpack://lineupengine/webpack/bootstrap","webpack://lineupengine/webpack/runtime/define property getters","webpack://lineupengine/webpack/runtime/hasOwnProperty shorthand","webpack://lineupengine/webpack/runtime/make namespace object","webpack://lineupengine/./src/abortAble.ts","webpack://lineupengine/./.yarn/cache/tslib-npm-2.1.0-81c9ac9b82-d8f5bdd067.zip/node_modules/tslib/tslib.es6.js","webpack://lineupengine/./src/animation/KeyFinder.ts","webpack://lineupengine/./src/animation/index.ts","webpack://lineupengine/./src/internal/index.ts","webpack://lineupengine/./src/internal/scroll.ts","webpack://lineupengine/./src/logic.ts","webpack://lineupengine/./src/mixin/IMixin.ts","webpack://lineupengine/./src/styles/index.ts","webpack://lineupengine/./src/ARowRenderer.ts","webpack://lineupengine/./src/style/StyleManager.ts","webpack://lineupengine/./src/style/GridStyleManager.ts","webpack://lineupengine/./src/table/internal/ACellAdapter.ts","webpack://lineupengine/./src/ACellRenderer.ts","webpack://lineupengine/./src/mixin/PrefetchMixin.ts","webpack://lineupengine/./src/table/ACellTableSection.ts","webpack://lineupengine/./src/table/MultiTableRowRenderer.ts","webpack://lineupengine/./src/bundle.ts"],"names":["root","factory","exports","module","define","amd","globalThis","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","isPromiseLike","p","then","ABORTED","thenFactory","loader","isAborted","abort","onfulfilled","_onrejected","loaded","loadedOrAborted","res","r","abortAble","aborted","aborter","Promise","resolve","race","abortAbleFetch","input","init","controller","AbortController","reject","fetch","assign","signal","catch","error","DOMException","bind","abortAbleAll","values","all","v","isAbortAble","isAsyncUpdate","update","ready","abortAbleResolveNow","extendStatics","d","b","setPrototypeOf","__proto__","Array","__extends","TypeError","String","__","this","constructor","create","context","cache","lastFilled","key2index","Map","exceptions","forEach","e","index","y","set","findValidStart","before","i","undefined","posByKey","has","pos","fillCacheTillKey","length","defaultRowHeight","cached","start","fillCache","heightOf","first","last","offset","callback","lookup","exceptionsLookup","exceptionHeightOf","returnDefault","padding","target","numberOfRows","c","positions","EAnimationMode","noAnimationChange","previousHeight","currentHeight","previous","mode","nodeY","current","prev","height","curr","UPDATE","Math","abs","defaultPhases","delay","apply","node","dataset","animation","toLowerCase","style","transform","SHOW","opacity","HIDE","UPDATE_REMOVE","clear","lastChild","removeChild","defaultMode","sync","handler","timer","numbers","handleAnimationImpl","handle","addEventListener","handleAnimation","handleTimeouts","passive","asInfo","info","left","top","s","requestAnimationFrame","size","n","self","setTimeout","scrollLeft","scrollTop","width","clientWidth","clientHeight","push","remove","concat","from","some","indexOf","splice","isWaiting","addScroll","scrollElement","__le_scroller__","ScrollHandler","isScrollEventWaiting","scroller","EScrollResult","uniformContext","rowHeight","rowPadding","keys","totalHeight","nonUniformContext","rowHeights","isNaN","sorted","sort","a","mostFrequent","mostFrequentValue","acc","between","RowHeightException","randomContext","minRowHeight","maxRowHeight","ratio","seed","Date","now","actSeed","random","x","sin","floor","round","range","heightExceptions","firstRowPos","endPos","y2","offset2","indexShift","min","max","calc","offsetShift","isGuess","shifted2","console","assert","lastPos","rest","visible","closest","item","firstException","lastException","ceil","frozenDelta","currentLength","targetLength","added","removed","common","slice","updateFrozen","old","columns","oldLast","pop","frozen","cssClass","suffix","PREFIX","CSS_CLASS_LOADING","CSS_CLASS_FROZEN","CSS_CLASS_HIDDEN","CSS_CLASS_MULTI","CSS_CLASS_EVEN","CSS_CLASS_SHIFTED","CSS_CLASS_SCROLLBAR_TESTER","CSS_CLASS_HEADER","CSS_CLASS_BODY","CSS_CLASS_FOOTER","CSS_CLASS_THEAD","CSS_CLASS_TBODY","CSS_CLASS_TR","CSS_CLASS_TH","CSS_CLASS_TD","CSS_CLASS_SCROLLING","CSS_CLASS_ROW_ANIMATION","isLoadingCell","classList","contains","body","options","pool","loadingPool","loading","WeakMap","forcedFirst","forcedLast","visibleFirstRowPos","scrollListener","lastScrollInfo","abortAnimation","async","minScrollDelta","mixins","scrollingHint","batchSize","striped","viewportOversize","adapter","createAdapter","map","mixinClass","fragment","ownerDocument","createDocumentFragment","addMixin","addAtBeginning","addAtBottom","removeFromBeginning","removeFromBottom","updateOffset","bodyScroller","defineProperties","scrollOffset","scrollTotal","parentElement","parent","sizer","children","find","tagName","createElement","add","idPrefix","insertBefore","firstChild","act","isGoingDown","onScrolledVertically","recreate","destroy","cleanUp","select","result","updateRow","createRow","toggle","selectProxy","proxy","recycle","ARowRenderer","real","replaceChild","delete","ex","removeAll","perform","toRecycle","lastElementChild","items","appendChild","forEachRow","inplace","rows","row","to","fromBeginning","nextSibling","previousSibling","updateSizer","setTransform","toFixed","bodySizer","ctx","recreateAnimated","recreatePure","clearPool","previousKey","cur","currentKey","next","UPDATE_CREATE","nodeYCurrentHeight","nextPos","prevHeight","animate","phases","previousFinder","currentFinder","currentTimer","actPhase","executePhase","phase","anim","run","offsetTop","startsWith","endsWith","dummyAnimation","filter","Set","split","clearTimeout","revalidate","shift","shiftTop","scrollResult","onScrolledImpl","onScrolled","shiftLast","currentDelta","total","shiftFirst","currentFirstRow","NONE","torecycle","toAdd","SOME","toAddBottom","ALL","SOME_TOP","SOME_BOTTOM","manipulate","bottom","elem","text","anyelem","__transform__","assignStyles","source","plain","hyphen","replace","setProperty","rules","testVerifyTimeout","createTextNode","verifySheet","sheet","cssRules","every","selectorText","selector","warn","l","deleteRule","rule","insertRule","cssRule","getSheetRule","addRule","id","updateRule","findIndex","stored","setTemplate","innerHTML","tableIds","tableId","thead","tbody","tr","th","td","tableCSSClasses","ids","cssClasses","headerScroller","getElementsByTagName","insertAdjacentHTML","offsetWidth","offsetHeight","measureScrollbar","borderRight","newValue","frozenShift","unit","selectors","reduce","updateColumns","prefix","ruleNames","cssSelectors","thStyles","tdStyles","header","mixinClasses","cellPool","visibleColumns","visibleFirstColumnPos","horizontallyShifted","columnAdapter","createColumnAdapter","columnMixins","columnFragment","leftShift","column","addColumnMixin","addColumnAtStart","addColumnAtEnd","removeColumnFromStart","removeColumnFromEnd","updateColumnOffset","syncFrozen","onScrolledHorizontally","isGoingRight","onScrolledHorizontallyImpl","removeCellFromStart","firstElementChild","recycleCell","removeCellFromEnd","removeFrozenCells","columnIndices","columnIndex","removeFrozenColumns","removeAllColumns","includingFrozen","removeAllCells","arr","selectProxyCell","columnObj","pooled","updateCell","createCell","updateShiftedState","handleCellReady","selectCell","col","rowIndex","addCellAtStart","cell","insertFrozenCells","insertFrozenColumns","addCellAtEnd","verifyRows","cols","colObjs","Boolean","verifyRow","updateHeaders","base","updateHeader","existing","createHeader","firstColumnPos","changed","childElementCount","mergeColumns","updateImpl","byId","updateShiftedStates","shifted","clazz","headers","querySelectorAll","bodies","shiftingChanged","htmlId","querySelector","that","document","LocalCell","updateColumnWidths","totalWidth","updateShifts","oldLeft","prefetchTimeout","cleanupTimeout","prefetchRows","cleanUpRows","prefetchDown","nextLast","prefetchUp","triggerPrefetch","prefetchDownPossible","prefetchUpPossible","isLast","isFirst","op","cleanUpTop","newFirst","cleanUpBottom","newLast","triggerCleanUp","hidden","onVisibilityChanged","_left","_visible","hide","show","wasHidden","sections","columnPadding","main","scrollEnd","end","headerFooter","bodyFooter","maxHeight","pushTable","doc","table","extras","pushSeparator","separator","section","widthChanged","version","buildId"],"mappings":"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","file":"lineupengine.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"lineupengine\"] = factory();\n\telse\n\t\troot[\"lineupengine\"] = factory();\n})(globalThis, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export function isPromiseLike(p: PromiseLike<any> | any): p is PromiseLike<any> {\n  return p != null && p && typeof p.then === 'function';\n}\n\n/**\n * a promise like object that has an abort method\n */\nexport interface IAbortAblePromiseBase<T> extends PromiseLike<T> {\n  then<TResult1 = T, TResult2 = never>(\n    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null\n  ): IAbortAblePromiseBase<TResult1 | TResult2>;\n  /**\n   * abort the promise when possible\n   */\n  abort(): void;\n  /**\n   * whether this promise was aborted\n   */\n  isAborted(): boolean;\n}\n\n/**\n * a promise like object that has an abort method and return the ABORTED symbol in case it was\n */\nexport declare type IAbortAblePromise<T> = IAbortAblePromiseBase<T | symbol>;\nexport declare type IAAP<T> = IAbortAblePromise<T>;\n\n/**\n * an update result with an item and a promise when the update has been done\n */\nexport interface IAsyncUpdate<T> {\n  item: T;\n  ready: IAbortAblePromise<void>;\n}\n\n/**\n * the symbol returned when the promise was aborted\n */\nexport const ABORTED = Symbol('aborted');\n\nfunction thenFactory<T>(loader: PromiseLike<T | symbol>, isAborted: () => boolean, abort: () => void) {\n  function then<TResult1 = T | symbol, TResult2 = never>(\n    onfulfilled?: ((value: T | symbol) => TResult1 | PromiseLike<TResult1>) | undefined | null,\n    _onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null\n  ): IAbortAblePromiseBase<TResult1 | TResult2> {\n    const fullfiller = loader.then((loaded) => {\n      const loadedOrAborted = isAborted() ? ABORTED : loaded;\n      const res = onfulfilled ? onfulfilled(loadedOrAborted) : (loadedOrAborted as any);\n\n      if (isPromiseLike(res)) {\n        return res.then((r) => {\n          return isAborted() ? ABORTED : r;\n        });\n      }\n      return isAborted() ? ABORTED : res;\n    });\n    return {\n      then: thenFactory(fullfiller, isAborted, abort),\n      abort,\n      isAborted,\n    };\n  }\n  return then;\n}\n\n/**\n * abort able Promise wrapper, returns a promise which can be aborted, and trying to avoid executing therefore the wrapped promise\n * @param {Promise<T>} loader\n * @returns {any}\n */\nexport default function abortAble<T>(loader: PromiseLike<T>): IAAP<T> {\n  let aborted: ((v: symbol) => void) | null = null;\n  const isAborted = () => aborted === null;\n  const aborter = new Promise<symbol>((resolve) => (aborted = resolve));\n  const abort = () => {\n    if (aborted == null) {\n      return;\n    }\n    aborted(ABORTED);\n    aborted = null;\n  };\n\n  const race = Promise.race<T | symbol>([aborter, loader]);\n\n  return {\n    then: thenFactory(race, isAborted, abort),\n    abort,\n    isAborted,\n  };\n}\n\nexport function abortAbleFetch(input: RequestInfo, init?: RequestInit): IAAP<Response> {\n  const controller = new AbortController();\n\n  const race = new Promise<Response | symbol>((resolve, reject) => {\n    const r = fetch(input, Object.assign({ signal: controller.signal }, init || {}));\n    r.then(resolve);\n    r.catch((error) => {\n      if (error instanceof DOMException) {\n        resolve(ABORTED);\n      } else {\n        reject(error);\n      }\n    });\n  });\n\n  const abort = controller.abort.bind(controller);\n  const isAborted = () => controller.signal.aborted;\n\n  return {\n    then: thenFactory(race, isAborted, abort),\n    abort,\n    isAborted,\n  };\n}\n\nexport function abortAbleAll<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(\n  values: [\n    T1 | IAAP<T1>,\n    T2 | IAAP<T2>,\n    T3 | IAAP<T3>,\n    T4 | IAAP<T4>,\n    T5 | IAAP<T5>,\n    T6 | IAAP<T6>,\n    T7 | IAAP<T7>,\n    T8 | IAAP<T8>,\n    T9 | IAAP<T9>,\n    T10 | IAAP<T10>\n  ]\n): IAAP<[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10]>;\nexport function abortAbleAll<T1, T2, T3, T4, T5, T6, T7, T8, T9>(\n  values: [\n    T1 | IAAP<T1>,\n    T2 | IAAP<T2>,\n    T3 | IAAP<T3>,\n    T4 | IAAP<T4>,\n    T5 | IAAP<T5>,\n    T6 | IAAP<T6>,\n    T7 | IAAP<T7>,\n    T8 | IAAP<T8>,\n    T9 | IAAP<T9>\n  ]\n): IAAP<[T1, T2, T3, T4, T5, T6, T7, T8, T9]>;\nexport function abortAbleAll<T1, T2, T3, T4, T5, T6, T7, T8>(\n  values: [\n    T1 | IAAP<T1>,\n    T2 | IAAP<T2>,\n    T3 | IAAP<T3>,\n    T4 | IAAP<T4>,\n    T5 | IAAP<T5>,\n    T6 | IAAP<T6>,\n    T7 | IAAP<T7>,\n    T8 | IAAP<T8>\n  ]\n): IAAP<[T1, T2, T3, T4, T5, T6, T7, T8]>;\nexport function abortAbleAll<T1, T2, T3, T4, T5, T6, T7>(\n  values: [T1 | IAAP<T1>, T2 | IAAP<T2>, T3 | IAAP<T3>, T4 | IAAP<T4>, T5 | IAAP<T5>, T6 | IAAP<T6>, T7 | IAAP<T7>]\n): IAAP<[T1, T2, T3, T4, T5, T6, T7]>;\nexport function abortAbleAll<T1, T2, T3, T4, T5, T6>(\n  values: [T1 | IAAP<T1>, T2 | IAAP<T2>, T3 | IAAP<T3>, T4 | IAAP<T4>, T5 | IAAP<T5>, T6 | IAAP<T6>]\n): IAAP<[T1, T2, T3, T4, T5, T6]>;\nexport function abortAbleAll<T1, T2, T3, T4, T5>(\n  values: [T1 | IAAP<T1>, T2 | IAAP<T2>, T3 | IAAP<T3>, T4 | IAAP<T4>, T5 | IAAP<T5>]\n): IAAP<[T1, T2, T3, T4, T5]>;\nexport function abortAbleAll<T1, T2, T3, T4>(\n  values: [T1 | IAAP<T1>, T2 | IAAP<T2>, T3 | IAAP<T3>, T4 | IAAP<T4>]\n): IAAP<[T1, T2, T3, T4]>;\nexport function abortAbleAll<T1, T2, T3>(values: [T1 | IAAP<T1>, T2 | IAAP<T2>, T3 | IAAP<T3>]): IAAP<[T1, T2, T3]>;\nexport function abortAbleAll<T1, T2>(values: [T1 | IAAP<T1>, T2 | IAAP<T2>]): IAAP<[T1, T2]>;\nexport function abortAbleAll<T>(values: (T | IAAP<T>)[]): IAAP<T[]>;\n\n/**\n * similar to Promise.all but for abortAble\n */\nexport function abortAbleAll(values: any[]): IAAP<any[]> {\n  const loader = Promise.all(values);\n  let aborted: ((v: symbol) => void) | null = null;\n  const isAborted = () => aborted === null;\n  const aborter = new Promise<symbol>((resolve) => (aborted = resolve));\n  const abort = () => {\n    if (aborted == null) {\n      return;\n    }\n    aborted(ABORTED);\n    for (const v of values) {\n      if (isAbortAble(v)) {\n        v.abort();\n      }\n    }\n    aborted = null;\n  };\n  const race = Promise.race<any | symbol>([aborter, loader]);\n\n  return {\n    then: thenFactory(race, isAborted, abort),\n    abort,\n    isAborted,\n  };\n}\n\n/**\n * checked whether the given argument is an abortable Promise\n * @param {IAbortAblePromise<any> | any} abortAble\n * @returns {boolean}\n */\nexport function isAbortAble(abortAble: IAbortAblePromise<any> | any): abortAble is IAbortAblePromise<any> {\n  return (\n    abortAble != null && abortAble && typeof abortAble.then === 'function' && typeof abortAble.abort === 'function'\n  );\n}\n\nexport function isAsyncUpdate<T>(update: T | void | undefined | null | IAsyncUpdate<T>): update is IAsyncUpdate<T> {\n  return update !== undefined && update !== null && update && isAbortAble((update as IAsyncUpdate<T>).ready);\n}\n\n/**\n * similar to Promise.resolve\n */\nexport function abortAbleResolveNow<T>(value: T) {\n  function then<TResult1 = T | symbol, TResult2 = never>(\n    onfulfilled?: ((value: T | symbol) => TResult1 | PromiseLike<TResult1>) | undefined | null,\n    _onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null\n  ): IAbortAblePromiseBase<TResult1 | TResult2> {\n    const res = onfulfilled ? onfulfilled(value) : (value as any);\n    if (isAbortAble(res)) {\n      return res;\n    }\n    if (isPromiseLike(res)) {\n      return abortAble(res);\n    }\n    return {\n      then: abortAbleResolveNow(res as TResult1) as any,\n      abort: () => undefined,\n      isAborted: () => false,\n    };\n  }\n  return {\n    then,\n    abort: () => undefined,\n    isAborted: () => false,\n  };\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { IExceptionContext } from '../logic';\n\n/**\n * utility class for optimized row context access\n */\nexport default class KeyFinder {\n  private readonly cache: number[] = [];\n  private lastFilled = 0;\n  private readonly key2index = new Map<string, number>();\n\n  /**\n   * constructor for fast key based row access\n   * @param {IExceptionContext} context context to use\n   * @param {(rowIndex: number) => string} key key function\n   */\n  constructor(public readonly context: IExceptionContext, public readonly key: (rowIndex: number) => string) {\n    this.context.exceptions.forEach((e) => {\n      this.cache[e.index] = e.y;\n      this.key2index.set(key(e.index), e.index);\n    });\n  }\n\n  private findValidStart(before: number) {\n    for (let i = before - 1; i >= 0; --i) {\n      if (this.cache[i] !== undefined) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * returns the position of the given given or -1 if not found\n   * @param {string} key\n   * @return {number} -1 if not found\n   */\n  posByKey(key: string) {\n    if (this.key2index.has(key)) {\n      const index = this.key2index.get(key)!;\n      return { index, pos: this.pos(index) };\n    }\n    return this.fillCacheTillKey(key);\n  }\n\n  /**\n   * returns the position of the given index\n   * @param {number} index index to look for\n   * @returns {number}\n   */\n  pos(index: number) {\n    if (this.context.exceptions.length === 0) {\n      // fast pass\n      return index * this.context.defaultRowHeight;\n    }\n    const cached = this.cache[index];\n    if (cached !== undefined) {\n      return cached;\n    }\n    //need to compute it\n    // find the starting point where to start counting\n    const start = this.findValidStart(index);\n    if (start < 0) {\n      this.fillCache(0, index, 0);\n    } else {\n      this.fillCache(start + 1, index, this.cache[start] + this.heightOf(start));\n    }\n    return this.cache[index]!;\n  }\n\n  private fillCache(\n    first: number,\n    last: number,\n    offset: number,\n    callback?: (index: number, key: string, pos: number) => void\n  ) {\n    if (last <= this.lastFilled) {\n      //everything already there\n      if (!callback) {\n        return;\n      }\n      for (let i = first; i <= last; ++i) {\n        callback(i, this.key(i), this.cache[i]);\n      }\n      return;\n    }\n    let pos = offset;\n    for (let i = first; i <= last; ++i) {\n      this.cache[i] = pos;\n      const key = this.key(i);\n      this.key2index.set(key, i);\n      if (callback) {\n        callback(i, key, pos);\n      }\n      pos += this.heightOf(i);\n    }\n  }\n\n  /**\n   * returns the height of the row identified by index\n   * @param {number} index\n   * @returns {number}\n   */\n  heightOf(index: number) {\n    const lookup = this.context.exceptionsLookup;\n    return lookup.has(index) ? lookup.get(index)! : this.context.defaultRowHeight;\n  }\n\n  /**\n   * see heightOf but ignores padding and optional null in case of default height\n   * @param {number} index row index\n   * @param {boolean} returnDefault return null if default height\n   * @returns {number}\n   */\n  exceptionHeightOf(index: number, returnDefault = false) {\n    const padding = this.context.padding(index);\n    const lookup = this.context.exceptionsLookup;\n    if (lookup.has(index)) {\n      return lookup.get(index)! - padding;\n    }\n    return returnDefault ? this.context.defaultRowHeight - padding : null;\n  }\n\n  /**\n   * padding of the given index\n   * @param {number} index\n   * @returns {number}\n   */\n  padding(index: number) {\n    return this.context.padding(index);\n  }\n\n  private fillCacheTillKey(target: string) {\n    let pos = 0;\n    for (let i = this.lastFilled; i < this.context.numberOfRows; ++i, ++this.lastFilled) {\n      const c = this.cache[i];\n      if (c !== undefined) {\n        pos = c + this.heightOf(i);\n        continue;\n      }\n      // new one fill up\n      const key = this.key(i);\n      this.cache[i] = pos;\n      this.key2index.set(key, i);\n      if (key === target) {\n        return { index: i, pos };\n      }\n      pos += this.heightOf(i);\n    }\n    return { index: -1, pos: -1 };\n  }\n\n  /**\n   * computes the positions and keys for a range of given indices\n   * @param {number} first first row index\n   * @param {number} last last row index\n   * @param {number} offset pos offset for the first row index\n   * @param {(index: number, key: string, pos: number) => void} callback callback for each identified index\n   */\n  positions(first: number, last: number, offset: number, callback?: (index: number, key: string, pos: number) => void) {\n    this.fillCache(first, last, offset, callback);\n  }\n}\n","import { IExceptionContext } from '../logic';\nimport KeyFinder from './KeyFinder';\n\nexport { default as KeyFinder } from './KeyFinder';\n\n/**\n * different row animation modes\n */\nexport enum EAnimationMode {\n  /**\n   * plain update existed both before and after\n   */\n  UPDATE,\n  /**\n   * exists both before and after but wasn't visible yet thus was created\n   */\n  UPDATE_CREATE,\n  /**\n   * exists both before and after is visible but not needed anymore and thus removed\n   */\n  UPDATE_REMOVE,\n  /**\n   * row appears\n   */\n  SHOW,\n  /**\n   * row disappears\n   */\n  HIDE,\n}\n\n/**\n * animated row item\n */\nexport interface IAnimationItem {\n  mode: EAnimationMode;\n  node: HTMLElement;\n  key: string;\n\n  /**\n   * previous context information\n   */\n  previous: {\n    index: number | -1;\n    y: number;\n    height: number | null;\n  };\n\n  /**\n   * position of the added node considering the previous height\n   */\n  nodeY: number;\n  /**\n   * position of the added node considering the current height\n   */\n  nodeYCurrentHeight: number;\n\n  /**\n   * current position\n   */\n  current: {\n    index: number | -1;\n    y: number;\n    height: number | null;\n  };\n}\n\nconst NO_CHANGE_DELTA = 1;\n\nexport function noAnimationChange(\n  { previous, mode, nodeY, current }: IAnimationItem,\n  previousHeight: number,\n  currentHeight: number\n) {\n  // sounds like the same\n  const prev = previous.height == null ? previousHeight : previous.height;\n  const curr = current.height == null ? currentHeight : current.height;\n  return (\n    mode === EAnimationMode.UPDATE &&\n    Math.abs(previous.y - nodeY) <= NO_CHANGE_DELTA &&\n    Math.abs(prev - curr) <= NO_CHANGE_DELTA\n  );\n}\n\nexport interface IPhase {\n  readonly delay: number;\n\n  apply(item: Readonly<IAnimationItem>, previousFinder: KeyFinder, currentFinder: KeyFinder): void;\n}\n\nexport interface IAnimationContext {\n  readonly previous: IExceptionContext;\n\n  previousKey(previousRowIndex: number): string;\n\n  currentKey(currentRowIndex: number): string;\n\n  phases?: IPhase[];\n}\n\n/**\n * maximal duration of all animations + extra waiting before e.g. rows are really removed\n * @type {number}\n */\nconst MAX_ANIMATION_TIME = 1100;\n\nexport const defaultPhases = [\n  {\n    delay: 0, // before\n    apply({ mode, previous, nodeY, current, node }: Readonly<IAnimationItem>) {\n      node.dataset.animation = EAnimationMode[mode].toLowerCase();\n      node.style.transform = `translate(0, ${previous.y - nodeY}px)`;\n      if (mode === EAnimationMode.SHOW) {\n        // already target height\n        node.style.height = current.height !== null ? `${current.height}px` : null;\n      } else {\n        // always set previous height for default height changes\n        node.style.height = `${previous.height}px`;\n      }\n      node.style.opacity = mode === EAnimationMode.SHOW ? '0' : mode === EAnimationMode.HIDE ? '1' : null;\n    },\n  },\n  {\n    delay: 10, // after some delay for the before phase have been applied visually\n    apply({ mode, current, nodeY, node }: Readonly<IAnimationItem>) {\n      // null for added/update since already at the right position\n      node.style.transform =\n        mode === EAnimationMode.HIDE || mode === EAnimationMode.UPDATE_REMOVE\n          ? `translate(0, ${current.y - nodeY}px)`\n          : '';\n      if (mode !== EAnimationMode.HIDE) {\n        // keep height for removal\n        node.style.height = current.height !== null ? `${current.height}px` : null;\n      }\n      node.style.opacity = mode === EAnimationMode.SHOW ? '1' : mode === EAnimationMode.HIDE ? '0' : null;\n    },\n  },\n  {\n    delay: MAX_ANIMATION_TIME, // cleanup\n    apply({ node }: Readonly<IAnimationItem>) {\n      delete node.dataset.animation;\n      node.style.opacity = null;\n      node.style.transform = '';\n    },\n  },\n];\n","export * from './scroll';\n\n/**\n * clear node clearing\n * @param node\n * @internal\n */\nexport function clear<T extends Node>(node: T) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n  return node;\n}\n","export declare type IDelayedMode = number | 'animation' | 'sync';\n\nexport const defaultMode: IDelayedMode = 'animation'; // Boolean((<any>window).chrome) ? 'animation' : 0, // animation frame on chrome;\n\nexport interface IScrollInfo {\n  left: number;\n  top: number;\n  width: number;\n  height: number;\n}\n\ninterface IScrollHandler {\n  timer: number;\n  prev: IScrollInfo | null;\n  handler: ((act: IScrollInfo) => void)[];\n}\n\nfunction dummy(): IScrollHandler {\n  return {\n    handler: [],\n    prev: null,\n    timer: -1,\n  };\n}\n\nclass ScrollHandler {\n  private readonly sync = dummy();\n  private readonly animation = dummy();\n  private readonly numbers = new Map<number, IScrollHandler>();\n\n  // current: IScrollInfo;\n  // private prev: IScrollInfo | null = null;\n\n  get current() {\n    return this.asInfo();\n  }\n\n  constructor(private readonly node: HTMLElement) {\n    // this.current = this.asInfo();\n\n    node.addEventListener(\n      'scroll',\n      () => {\n        // this.current = this.asInfo();\n\n        // if (this.prev && (Math.abs(this.current.left - this.prev.left) + Math.abs(this.current.top - this.prev.top)) < 4) {\n        //   return;\n        // }\n        // this.prev = this.current;\n\n        if (this.sync.handler.length > 0) {\n          this.handle(this.sync);\n        }\n        this.handleAnimation();\n        this.handleTimeouts();\n      },\n      {\n        passive: true,\n      }\n    );\n  }\n\n  private handle(handler: IScrollHandler) {\n    const info = this.current;\n    if (handler.prev && Math.abs(info.left - handler.prev.left) + Math.abs(info.top - handler.prev.top) < 4) {\n      return;\n    }\n    handler.prev = info;\n    for (const s of handler.handler) {\n      s(info);\n    }\n  }\n\n  private handleAnimation() {\n    if (this.animation.timer !== -1 || this.animation.handler.length === 0) {\n      return;\n    }\n    this.animation.timer = 1;\n    requestAnimationFrame(this.handleAnimationImpl);\n  }\n\n  private readonly handleAnimationImpl = () => {\n    if (this.animation.timer !== 1) {\n      return;\n    }\n    this.handle(this.animation);\n    this.animation.timer = -1;\n  };\n\n  private handleTimeouts() {\n    if (this.numbers.size === 0) {\n      return;\n    }\n\n    this.numbers.forEach((handler, n) => {\n      if (handler.handler.length === 0) {\n        return;\n      }\n      // eslint-disable-next-line no-restricted-globals\n      handler.timer = self.setTimeout(() => {\n        this.handle(handler);\n        handler.timer = -1;\n      }, n);\n    });\n  }\n\n  asInfo(): IScrollInfo {\n    return {\n      left: this.node.scrollLeft,\n      top: this.node.scrollTop,\n      width: this.node.clientWidth,\n      height: this.node.clientHeight,\n    };\n  }\n\n  push(mode: IDelayedMode, handler: (act: IScrollInfo) => void) {\n    if (typeof mode === 'number') {\n      if (!this.numbers.has(mode)) {\n        this.numbers.set(mode, dummy());\n      }\n      this.numbers.get(mode)!.handler.push(handler);\n    }\n\n    switch (mode) {\n      case 'sync':\n        this.sync.handler.push(handler);\n        break;\n      case 'animation':\n        this.animation.handler.push(handler);\n        break;\n    }\n  }\n\n  remove(handler: (act: IScrollInfo) => void) {\n    const test = [this.sync, this.animation].concat(Array.from(this.numbers.values()));\n\n    return test.some((d) => {\n      const index = d.handler.indexOf(handler);\n      if (index >= 0) {\n        d.handler.splice(index, 1);\n      }\n      return index >= 0;\n    });\n  }\n\n  isWaiting(mode: IDelayedMode) {\n    switch (mode) {\n      case 'animation':\n        return this.animation.timer >= 0;\n      case 'sync':\n        return false;\n      default:\n        return this.numbers.has(mode) && this.numbers.get(mode)!.timer >= 0;\n    }\n  }\n}\n\n/**\n * @internal\n */\nexport function addScroll(scrollElement: HTMLElement, mode: IDelayedMode, handler: (act: IScrollInfo) => void) {\n  // hide in element to have just one real listener\n  const c = scrollElement as HTMLElement & { __le_scroller__?: ScrollHandler };\n  if (!c.__le_scroller__) {\n    c.__le_scroller__ = new ScrollHandler(scrollElement);\n  }\n  const s: ScrollHandler = c.__le_scroller__;\n  s.push(mode, handler);\n  return s.asInfo();\n}\n\n/**\n * @internal\n */\nexport function isScrollEventWaiting(scroller: HTMLElement, mode: IDelayedMode) {\n  const c = scroller as HTMLElement & { __le_scroller__?: ScrollHandler };\n  if (!c.__le_scroller__) {\n    return false;\n  }\n  const s: ScrollHandler = c.__le_scroller__;\n  return s.isWaiting(mode);\n}\n\n/**\n * @internal\n */\nexport function removeScroll(scroller: HTMLElement, handler: (act: IScrollInfo) => void) {\n  const c = scroller as HTMLElement & { __le_scroller__?: ScrollHandler };\n  if (c.__le_scroller__) {\n    c.__le_scroller__.remove(handler);\n  }\n}\n","/**\n * generic exception of a uniform space\n */\nexport interface IRowHeightException {\n  /**\n   * reference index\n   */\n  readonly index: number;\n  /**\n   * height of the element\n   */\n  readonly height: number;\n  /**\n   * starting y\n   */\n  readonly y: number;\n  /**\n   * ending y\n   */\n  readonly y2: number;\n}\n\nclass RowHeightException implements IRowHeightException {\n  constructor(public readonly index: number, public readonly y: number, public readonly height: number) {}\n\n  get y2() {\n    return this.y + this.height;\n  }\n}\n\n/**\n * similar to a map\n */\nexport interface IRowHeightExceptionLookup {\n  keys(): IterableIterator<number>;\n\n  get(index: number): number | undefined;\n\n  has(index: number): boolean;\n\n  readonly size: number;\n}\n\n/**\n * exception context for optimized non uniform height exceptions\n */\nexport interface IExceptionContext {\n  /**\n   * height exceptions as a list\n   */\n  readonly exceptions: IRowHeightException[];\n  /**\n   * lookup for the height of a given index, if not part of this map it has the default height\n   */\n  readonly exceptionsLookup: IRowHeightExceptionLookup;\n  /**\n   * number of rows\n   */\n  readonly numberOfRows: number;\n  /**\n   * default height of rows\n   */\n  readonly defaultRowHeight: number;\n  /**\n   * total height\n   */\n  readonly totalHeight: number;\n\n  /**\n   * padding between rows, however already included in all heights to have the precise numbers\n   */\n  readonly padding: (index: number) => number;\n}\n\n/**\n * creates a uniform exception context, i.e no exceptions all rows are of the same height\n * @param {number} numberOfRows\n * @param {number} rowHeight\n * @param {number} rowPadding padding between rows\n * @return {IExceptionContext}\n */\nexport function uniformContext(numberOfRows: number, rowHeight: number, rowPadding = 0): IExceptionContext {\n  rowHeight += rowPadding;\n  const exceptionsLookup = {\n    keys: () => [].values(),\n    get: () => rowHeight,\n    has: () => false,\n    size: 0,\n  };\n  return {\n    exceptions: [],\n    exceptionsLookup,\n    totalHeight: numberOfRows * rowHeight,\n    numberOfRows,\n    defaultRowHeight: rowHeight,\n    padding: () => rowPadding,\n  };\n}\n\n/**\n * computes the most frequent value in a given array like\n * @param {} values\n * @return {number}\n */\nfunction mostFrequentValue(values: { forEach: (callback: (height: number, index: number) => any) => any }): number {\n  const lookup = new Map<number, number>();\n  values.forEach((value) => {\n    lookup.set(value, (lookup.get(value) || 0) + 1);\n  });\n  if (lookup.size === 0) {\n    return 20; // default value since it doesn't matter\n  }\n  // sort desc take first key and asc by the second in case of tie, it is optimized to have exceptions for higher rows less for big rows\n  const sorted = Array.from(lookup).sort((a, b) => {\n    if (a[1] !== b[1]) {\n      return b[1] - a[1];\n    }\n    return a[0] - b[0];\n  });\n  const mostFrequent = sorted[0][0];\n  if (mostFrequent === 0) {\n    // corner case\n    return sorted.length > 1 ? sorted[1][0] : 20; // all empty\n  }\n  return mostFrequent;\n}\n\n/**\n * creates a non uniform context based on the given array like heights\n * @param rowHeights array like to get the heights\n * @param {number} defaultRowHeight if not given the most frequent value will be used\n * @param {number} rowPadding padding between rows\n * @return {IExceptionContext}\n */\nexport function nonUniformContext(\n  rowHeights: {\n    forEach: (callback: (height: number, index: number) => any) => any;\n  },\n  defaultRowHeight = NaN,\n  rowPadding: number | ((index: number) => number) = 0\n): IExceptionContext {\n  const exceptionsLookup = new Map<number, number>();\n  const exceptions: IRowHeightException[] = [];\n\n  const padding = typeof rowPadding === 'function' ? rowPadding : () => rowPadding as number;\n\n  if (isNaN(defaultRowHeight)) {\n    defaultRowHeight = mostFrequentValue(rowHeights);\n  }\n\n  defaultRowHeight += padding(-1);\n\n  let prev = -1,\n    acc = 0,\n    totalHeight = 0,\n    numberOfRows = 0;\n  rowHeights.forEach((height, index) => {\n    height += padding(index);\n    totalHeight += height;\n    numberOfRows++;\n    if (height === defaultRowHeight) {\n      //regular\n      return;\n    }\n    exceptionsLookup.set(index, height);\n    const between = (index - prev - 1) * defaultRowHeight;\n    prev = index;\n    const y = acc + between;\n    acc = y + height;\n    exceptions.push(new RowHeightException(index, y, height));\n  });\n  return {\n    exceptionsLookup,\n    exceptions,\n    totalHeight,\n    defaultRowHeight,\n    numberOfRows,\n    padding,\n  };\n}\n\n/**\n * creates a random context with the given constraints\n * @param {number} numberOfRows\n * @param {number} defaultRowHeight\n * @param {number} minRowHeight\n * @param {number} maxRowHeight\n * @param {number} ratio around ratio percent will get a non uniform height\n * @param {number} seed random seed\n * @return {IExceptionContext}\n */\nexport function randomContext(\n  numberOfRows: number,\n  defaultRowHeight: number,\n  minRowHeight = 2,\n  maxRowHeight = defaultRowHeight * 10,\n  ratio = 0.2,\n  seed = Date.now()\n) {\n  let actSeed = seed;\n  const random = () => {\n    const x = Math.sin(actSeed++) * 10000;\n    return x - Math.floor(x);\n  };\n\n  const getter = () => {\n    const coin = random();\n    if (coin < ratio) {\n      //non uniform\n      return minRowHeight + Math.round(random() * (maxRowHeight - minRowHeight));\n    }\n    return defaultRowHeight;\n  };\n  const forEach = (callback: (height: number, index: number) => any) => {\n    for (let index = 0; index < numberOfRows; ++index) {\n      callback(getter(), index);\n    }\n  };\n  return nonUniformContext({ forEach }, defaultRowHeight);\n}\n\nexport interface IVisibleRange {\n  /**\n   * first visible index\n   */\n  readonly first: number;\n  /**\n   * last visible index\n   */\n  readonly last: number;\n  /**\n   * position of the first visible row in pixel\n   */\n  readonly firstRowPos: number;\n  /**\n   * position of the last visible row including its size\n   */\n  readonly endPos: number;\n}\n\n/**\n * computes the visible range\n * @param {number} scrollTop top scrolling\n * @param {number} clientHeight visible height\n * @param {number} rowHeight height of a row by default\n * @param {IRowHeightException[]} heightExceptions exceptions of this default height\n * @param {number} numberOfRows the number of rows\n * @return {IVisibleRange} the computed visible range\n */\nexport function range(\n  scrollTop: number,\n  clientHeight: number,\n  rowHeight: number,\n  heightExceptions: IRowHeightException[],\n  numberOfRows: number\n): IVisibleRange {\n  if (numberOfRows === 0) {\n    return { first: 0, last: -1, firstRowPos: 0, endPos: 0 };\n  }\n  if (numberOfRows === 1) {\n    return {\n      first: 0,\n      last: 0,\n      firstRowPos: 0,\n      endPos: heightExceptions.length === 0 ? rowHeight : heightExceptions[0].y2,\n    };\n  }\n  const offset = scrollTop;\n  const offset2 = offset + clientHeight;\n\n  function indexOf(pos: number, indexShift: number) {\n    return Math.min(numberOfRows - 1, indexShift + Math.max(0, Math.floor(pos / rowHeight)));\n  }\n\n  function calc(offsetShift: number, indexShift: number, isGuess = false) {\n    const shifted = offset - offsetShift;\n    const shifted2 = offset2 - offsetShift;\n\n    const first = indexOf(shifted, indexShift);\n    const last = indexOf(shifted2, indexShift);\n\n    const firstRowPos = offsetShift + (first - indexShift) * rowHeight;\n    const endPos = offsetShift + (last + 1 - indexShift) * rowHeight;\n\n    //if (!isGuess) {\n    //  console.log(first, '@', firstRowPos, last, '#', end, offset, offset2, firstRowPos <= offset, offset2 <= end);\n    //}\n    console.assert(\n      !isGuess || !(firstRowPos > offset || (endPos < offset2 && last < numberOfRows - 1)),\n      'error',\n      isGuess,\n      firstRowPos,\n      endPos,\n      offset,\n      offset2,\n      indexShift,\n      offsetShift\n    );\n    return { first, last, firstRowPos, endPos };\n  }\n\n  const r = calc(0, 0, true);\n  if (heightExceptions.length === 0) {\n    //uniform\n    return r;\n  }\n  if (r.last < heightExceptions[0].index) {\n    //console.log('before the first exception = uniform with no shift');\n    //console.log(r.first, '@', r.firstRowPos, r.last, '#', r.end, offset, offset2, r.firstRowPos <= offset, offset2 <= r.end);\n    return r;\n  }\n  if (r.last === heightExceptions[0].index && heightExceptions[0].height > rowHeight) {\n    return Object.assign(r, { endPos: heightExceptions[0].y2 });\n  }\n\n  //the position where the exceptions ends\n  const lastPos = heightExceptions[heightExceptions.length - 1];\n  if (offset >= lastPos.y) {\n    const rest = calc(lastPos.y2, lastPos.index + 1);\n    if (offset < lastPos.y2) {\n      // include me\n      return Object.assign(rest, {\n        first: lastPos.index,\n        firstRowPos: lastPos.y,\n      });\n    }\n    return rest;\n  }\n  //we have some exceptions\n  const visible: IRowHeightException[] = [];\n  let closest = heightExceptions[0]; //closest before not in range\n  for (const item of heightExceptions) {\n    const { y, y2 } = item;\n    if (y >= offset2) {\n      break;\n    }\n    if (y2 <= offset) {\n      closest = item;\n      continue;\n    }\n    visible.push(item);\n  }\n\n  if (visible.length === 0) {\n    //console.log('we are in the between some exceptions and none are visible');\n    return calc(closest.y2, closest.index + 1); //skip myself\n  }\n\n  {\n    //console.log('we show at least one exception');\n    const firstException = visible[0];\n    const lastException = visible[visible.length - 1];\n\n    const first = Math.max(0, firstException.index - Math.max(0, Math.ceil((firstException.y - offset) / rowHeight)));\n    let last = lastException.index;\n    if (offset2 >= lastException.y2) {\n      last = indexOf(offset2 - lastException.y2, lastException.index + 1);\n    }\n    const firstRowPos = firstException.y - (firstException.index - first) * rowHeight;\n    const endPos = lastException.y2 + (last - lastException.index) * rowHeight;\n\n    //console.log(first, '@', firstRowPos, last, '#', end, offset, offset2, firstRowPos <= offset, offset2 <= end);\n\n    console.assert(\n      firstRowPos <= offset && (endPos >= offset2 || last === numberOfRows - 1),\n      'error',\n      firstRowPos,\n      endPos,\n      offset,\n      offset2,\n      firstException,\n      lastException\n    );\n    return { first, last, firstRowPos, endPos };\n  }\n}\n\nexport function frozenDelta(\n  current: number[],\n  target: number[]\n): { added: number[]; removed: number[]; common: number } {\n  const currentLength = current.length;\n  const targetLength = target.length;\n  if (currentLength === 0) {\n    return { added: target, removed: [], common: 0 };\n  }\n  if (targetLength === 0) {\n    return { added: [], removed: current, common: 0 };\n  }\n  if (currentLength === targetLength) {\n    //since sorted and left increasing true\n    return { added: [], removed: [], common: currentLength };\n  }\n  const removed = current.slice(Math.min(targetLength, currentLength));\n  const added = target.slice(Math.min(targetLength, currentLength));\n  return { added, removed, common: currentLength - removed.length };\n}\n\nexport function updateFrozen(\n  old: number[],\n  columns: { frozen: boolean }[],\n  first: number\n): { target: number[]; added: number[]; removed: number[] } {\n  const oldLast = old.length === 0 ? 0 : old[old.length - 1] + 1;\n  const added: number[] = [];\n  const removed: number[] = [];\n\n  for (let i = old.length - 1; i >= 0; --i) {\n    const index = old[i];\n    if (index >= first) {\n      removed.push(old.pop()!);\n    } else {\n      // can stop since sorted and it will never happen again\n      break;\n    }\n  }\n  //added\n  for (let i = oldLast; i < first; ++i) {\n    if (columns[i].frozen) {\n      added.push(i);\n      old.push(i);\n    }\n  }\n  return { target: old, added, removed };\n}\n","import { IExceptionContext } from '../logic';\n\n/**\n * scrolling result\n */\nexport enum EScrollResult {\n  /**\n   * nothing has changed\n   */\n  NONE,\n  /**\n   * all rows needed to be recreated\n   */\n  ALL,\n  /**\n   * unknown\n   */\n  SOME,\n  /**\n   * some rows are added at the bottom\n   */\n  SOME_BOTTOM,\n  /**\n   * some rows are added at the top\n   */\n  SOME_TOP,\n}\n\n/**\n * adapter context for mixins to avoid public fields\n */\nexport interface IMixinAdapter {\n  readonly visible: {\n    //writable\n    first: number;\n    last: number;\n    forcedFirst: number;\n    forcedLast: number;\n  };\n  readonly visibleFirstRowPos: number;\n\n  readonly context: IExceptionContext;\n  readonly scrollOffset: number;\n  readonly scrollTotal: number;\n\n  addAtBeginning(from: number, to: number, frozenShift: number): void;\n\n  addAtBottom(from: number, to: number): void;\n\n  removeFromBeginning(from: number, to: number, frozenShift: number): void;\n\n  removeFromBottom(from: number, to: number): void;\n\n  updateOffset(firstRowPos: number): void;\n\n  /**\n   * triggers to sync frozen items\n   * @param {number} first\n   * @return {number} frozenShift\n   */\n  syncFrozen?(first: number): number;\n\n  isScrollEventWaiting(): boolean;\n}\n\nexport interface IMixin {\n  onScrolled(isGoingDown: boolean, scrollResult: EScrollResult): void;\n}\n\nexport interface IMixinClass {\n  new (adapter: IMixinAdapter, options?: any): IMixin;\n}\n","const PREFIX = 'le';\n\n/**\n * @internal\n * @param suffix suffix to suffix\n */\nexport function cssClass(suffix?: string) {\n  if (!suffix) {\n    return PREFIX;\n  }\n  return `${PREFIX}-${suffix}`;\n}\n\nexport const CSS_CLASS_LOADING = cssClass('loading');\nexport const CSS_CLASS_FROZEN = cssClass('frozen');\nexport const CSS_CLASS_HIDDEN = cssClass('hidden');\nexport const CSS_CLASS_MULTI = cssClass('multi');\nexport const CSS_CLASS_EVEN = cssClass('even');\nexport const CSS_CLASS_SHIFTED = cssClass('shifted');\nexport const CSS_CLASS_SCROLLBAR_TESTER = cssClass('scrollbar-tester');\n\nexport const CSS_CLASS_HEADER = cssClass('header');\nexport const CSS_CLASS_BODY = cssClass('body');\nexport const CSS_CLASS_FOOTER = cssClass('footer');\n\nexport const CSS_CLASS_THEAD = cssClass('thead');\nexport const CSS_CLASS_TBODY = cssClass('tbody');\n\nexport const CSS_CLASS_TR = cssClass('tr');\nexport const CSS_CLASS_TH = cssClass('th');\nexport const CSS_CLASS_TD = cssClass('td');\n\nexport const CSS_CLASS_SCROLLING = cssClass('scrolling');\nexport const CSS_CLASS_ROW_ANIMATION = cssClass('row-animation');\n","import { ABORTED, IAbortAblePromise, isAbortAble } from './abortAble';\nimport {\n  defaultPhases,\n  EAnimationMode,\n  IAnimationContext,\n  IAnimationItem,\n  IPhase,\n  noAnimationChange,\n} from './animation';\nimport KeyFinder from './animation/KeyFinder';\nimport { addScroll, clear, defaultMode, IDelayedMode, IScrollInfo, removeScroll } from './internal';\nimport { isScrollEventWaiting } from './internal/scroll';\nimport { IExceptionContext, range } from './logic';\nimport { EScrollResult, IMixin, IMixinAdapter, IMixinClass } from './mixin';\nimport {\n  cssClass,\n  CSS_CLASS_EVEN,\n  CSS_CLASS_FOOTER,\n  CSS_CLASS_LOADING,\n  CSS_CLASS_ROW_ANIMATION,\n  CSS_CLASS_SCROLLING,\n  CSS_CLASS_TR,\n} from './styles';\n\nexport declare type IRowRenderContext = IExceptionContext;\n\nexport function isLoadingCell(node: HTMLElement) {\n  return node.classList.contains(CSS_CLASS_LOADING);\n}\n\nexport interface IRowRendererOptions {\n  /**\n   * async update on scrolling\n   * animation -> use requestAnimationFrame\n   * sync -> execute within scroll listener\n   * {number} -> execute within this delay using setTimeout\n   * @default is chrome ? animation else 0\n   */\n  async: IDelayedMode;\n\n  /**\n   * minimal number of pixel the scrollbars has to move\n   * @default 10\n   */\n  minScrollDelta: number;\n\n  /**\n   * min number of rows that should be added or removed\n   * @default 10\n   */\n  batchSize: number;\n\n  /**\n   * number of pixels the viewport is virtually larger\n   * @default 200\n   */\n  viewportOversize: number;\n\n  /**\n   * class of mixins to use for optimized rendering\n   */\n  mixins: IMixinClass[];\n\n  /**\n   * add the scrolling hint class while scrolling to give a user feedback\n   */\n  scrollingHint: boolean;\n\n  /**\n   * whether background striping should be enabled\n   */\n  striped: boolean;\n}\n\n/**\n * base class for creating a scalable table renderer based on rows\n */\nexport abstract class ARowRenderer {\n  private readonly pool: HTMLElement[] = [];\n  private readonly loadingPool: HTMLElement[] = [];\n  private readonly loading = new WeakMap<HTMLElement, IAbortAblePromise<void>>();\n\n  private readonly fragment: DocumentFragment;\n\n  /**\n   * currently visible slice\n   */\n  protected readonly visible = {\n    first: 0,\n    forcedFirst: 0,\n    last: -1,\n    forcedLast: -1,\n  };\n  /**\n   * position of the first visible row in pixel\n   * @type {number}\n   */\n  protected visibleFirstRowPos = 0;\n\n  private readonly adapter: IMixinAdapter;\n  private readonly mixins: IMixin[];\n  private scrollListener: ((act: IScrollInfo) => void) | null = null;\n  protected lastScrollInfo: IScrollInfo | null = null;\n\n  private abortAnimation: () => void = () => undefined;\n\n  protected readonly options: Readonly<IRowRendererOptions> = {\n    async: defaultMode,\n    minScrollDelta: 10,\n    mixins: [],\n    scrollingHint: false,\n    batchSize: 10,\n    striped: false,\n    viewportOversize: 200,\n  };\n\n  constructor(protected readonly body: HTMLElement, options: Partial<IRowRendererOptions> = {}) {\n    this.adapter = this.createAdapter();\n    Object.assign(this.options, options);\n    this.mixins = this.options.mixins.map((mixinClass) => new mixinClass(this.adapter));\n\n    this.fragment = body.ownerDocument!.createDocumentFragment();\n  }\n\n  protected abstract get idPrefix(): string;\n\n  /**\n   * register another mixin to this renderer\n   * @param {IMixinClass} mixinClass the mixin class to instantiate\n   * @param options optional constructor options\n   */\n  protected addMixin(mixinClass: IMixinClass, options?: any) {\n    this.mixins.push(new mixinClass(this.adapter, options));\n  }\n\n  private createAdapter(): IMixinAdapter {\n    const r: any = {\n      visible: this.visible,\n      addAtBeginning: this.addAtBeginning.bind(this),\n      addAtBottom: this.addAtBottom.bind(this),\n      removeFromBeginning: this.removeFromBeginning.bind(this),\n      removeFromBottom: this.removeFromBottom.bind(this),\n      updateOffset: this.updateOffset.bind(this),\n      isScrollEventWaiting: () => isScrollEventWaiting(this.bodyScroller, this.options.async),\n    };\n    Object.defineProperties(r, {\n      visibleFirstRowPos: {\n        get: () => this.visibleFirstRowPos,\n        enumerable: true,\n      },\n      context: {\n        get: () => this.context,\n        enumerable: true,\n      },\n      scrollOffset: {\n        get: () => (this.lastScrollInfo ? this.lastScrollInfo.top : 0),\n        enumerable: true,\n      },\n      scrollTotal: {\n        get: () => (this.lastScrollInfo ? this.lastScrollInfo.height : this.bodyScroller.clientHeight),\n        enumerable: true,\n      },\n    });\n    return r;\n  }\n\n  /**\n   * get the scrolling container i.e. parent of the body element\n   * @returns {HTMLElement}\n   */\n  protected get bodyScroller() {\n    return this.body.parentElement as HTMLElement;\n  }\n\n  protected get bodySizer(): HTMLElement {\n    const parent = this.bodyScroller;\n    const sizer = (Array.from(parent.children) as HTMLElement[]).find((d) => d.tagName.toLowerCase() === 'footer');\n    if (sizer) {\n      return sizer;\n    }\n    const s = parent.ownerDocument!.createElement('footer');\n    s.classList.add(CSS_CLASS_FOOTER, cssClass(`footer-${this.idPrefix}`));\n    parent.insertBefore(s, parent.firstChild);\n    return s;\n  }\n\n  /**\n   * the current render context, upon change `recreate` the whole table\n   * @returns {IRowRenderContext}\n   */\n  protected abstract get context(): IRowRenderContext;\n\n  /**\n   * creates a new row\n   * @param {HTMLElement} node the node of the row\n   * @param {number} index the row index\n   * @returns {IAbortAblePromise<void> | void} either an abortable or nothing\n   */\n  protected abstract createRow(node: HTMLElement, index: number): IAbortAblePromise<void> | void;\n\n  /**\n   * updates a row\n   * @param {HTMLElement} node the node of the row\n   * @param {number} index the row index\n   * @returns {IAbortAblePromise<void> | void} either an abortable or nothing\n   */\n  protected abstract updateRow(node: HTMLElement, index: number): IAbortAblePromise<void> | void;\n\n  /**\n   * initializes the table and register the onscroll listener\n   * @returns {void} nothing\n   */\n  protected init() {\n    const scroller = this.bodyScroller;\n\n    let old = addScroll(\n      scroller,\n      this.options.async,\n      (this.scrollListener = (act) => {\n        this.lastScrollInfo = act;\n        if (\n          Math.abs(old.top - act.top) < this.options.minScrollDelta &&\n          Math.abs(old.height - act.height) < this.options.minScrollDelta\n        ) {\n          return;\n        }\n        const isGoingDown = act.top > old.top;\n        old = act;\n        this.onScrolledVertically(act.top, act.height, isGoingDown);\n        if (this.options.scrollingHint) {\n          this.body.classList.remove(CSS_CLASS_SCROLLING);\n        }\n      })\n    );\n    if (this.options.scrollingHint) {\n      addScroll(scroller, 'animation', () => this.body.classList.add(CSS_CLASS_SCROLLING));\n    }\n    this.recreate();\n  }\n\n  /**\n   * destroys this renderer and unregisters all event listeners\n   */\n  destroy() {\n    removeScroll(this.bodyScroller, this.scrollListener!);\n    this.body.remove();\n  }\n\n  private static cleanUp(item: HTMLElement) {\n    item.style.height = null;\n  }\n\n  private select(index: number): { item: HTMLElement; result: IAbortAblePromise<void> | void } {\n    let item: HTMLElement;\n    let result: IAbortAblePromise<void> | void;\n    if (this.pool.length > 0) {\n      item = this.pool.pop()!;\n      result = this.updateRow(item, index);\n    } else if (this.loadingPool.length > 0) {\n      item = this.loadingPool.pop()!;\n      item.classList.remove(CSS_CLASS_LOADING);\n      result = this.createRow(item, index);\n    } else {\n      item = this.body.ownerDocument!.createElement('div');\n      item.classList.add(CSS_CLASS_TR, cssClass(`tr-${this.idPrefix}`));\n      result = this.createRow(item, index);\n    }\n    item.dataset.index = String(index);\n    if (this.options.striped) {\n      item.classList.toggle(CSS_CLASS_EVEN, index % 2 === 0);\n    }\n    return { item, result };\n  }\n\n  private selectProxy() {\n    let proxy: HTMLElement;\n    if (this.loadingPool.length > 0) {\n      proxy = this.loadingPool.pop()!;\n    } else {\n      proxy = this.body.ownerDocument!.createElement('div');\n      proxy.classList.add(CSS_CLASS_LOADING, CSS_CLASS_TR, cssClass(`tr-${this.idPrefix}`));\n    }\n    return proxy;\n  }\n\n  private recycle(item: HTMLElement) {\n    ARowRenderer.cleanUp(item);\n    // check if the original dom element is still being manipulated\n    if (this.loading.has(item)) {\n      const abort = this.loading.get(item)!;\n      abort.abort();\n    } else {\n      this.pool.push(item);\n    }\n  }\n\n  private proxy(item: HTMLElement, result: IAbortAblePromise<void> | void) {\n    if (!isAbortAble(result)) {\n      return item;\n    }\n    const abort = result;\n    //lazy loading\n\n    const real = item;\n    const proxy = this.selectProxy();\n    // copy attributes\n    proxy.dataset.index = real.dataset.index;\n    proxy.style.height = real.style.height;\n\n    this.loading.set(proxy, abort);\n    abort.then(\n      (result) => {\n        if (result === ABORTED) {\n          //aborted can recycle the real one\n          ARowRenderer.cleanUp(real);\n          this.pool.push(real);\n        } else {\n          //fully loaded\n          this.body.replaceChild(real, proxy);\n        }\n        this.loading.delete(proxy);\n        ARowRenderer.cleanUp(proxy);\n        this.loadingPool.push(proxy);\n      },\n      () => {\n        // handle as aborted\n        //aborted can recycle the real one\n        ARowRenderer.cleanUp(real);\n        this.pool.push(real);\n\n        this.loading.delete(proxy);\n        ARowRenderer.cleanUp(proxy);\n        this.loadingPool.push(proxy);\n      }\n    );\n    return proxy;\n  }\n\n  private create(index: number) {\n    const { item, result } = this.select(index);\n\n    const { exceptionsLookup: ex, padding } = this.context;\n    if (ex.has(index)) {\n      item.style.height = `${ex.get(index)! - padding(index)}px`;\n    }\n\n    return this.proxy(item, result);\n  }\n\n  private removeAll(perform = true) {\n    const b = this.body;\n    if (!perform) {\n      return Array.from(b.children) as HTMLElement[];\n    }\n    const toRecycle: HTMLElement[] = [];\n    while (b.lastElementChild) {\n      const i = b.lastElementChild as HTMLElement;\n      b.removeChild(i);\n      this.recycle(i);\n      toRecycle.push(i);\n    }\n    return toRecycle;\n  }\n\n  /**\n   * triggers and visual update of all visible rows\n   */\n  protected update() {\n    const first = this.visible.first;\n    const fragment = this.fragment;\n    const items = Array.from(this.body.children) as HTMLElement[];\n    clear(this.body);\n    items.forEach((item: HTMLElement, i) => {\n      if (this.loading.has(item)) {\n        // still loading\n        fragment.appendChild(item);\n        return;\n      }\n      const abort = this.updateRow(item, i + first);\n\n      fragment.appendChild(this.proxy(item, abort));\n    });\n    this.body.appendChild(fragment);\n  }\n\n  /**\n   * utility to execute a function for each visible row\n   * @param {(row: HTMLElement, rowIndex: number) => void} callback callback to execute\n   * @param {boolean} inplace whether the DOM changes should be performed inplace instead of in a fragment\n   */\n  protected forEachRow(callback: (row: HTMLElement, rowIndex: number) => void, inplace = false) {\n    const rows = Array.from(this.body.children) as HTMLElement[];\n    const fragment = this.fragment;\n    if (!inplace) {\n      clear(this.body);\n    }\n    rows.forEach((row: HTMLElement, index) => {\n      if (!isLoadingCell(row) && row.dataset.animation !== 'update_remove' && row.dataset.animation !== 'hide') {\n        //skip loading ones and temporary ones\n        callback(row, index + this.visible.first);\n      }\n      if (!inplace) {\n        fragment.appendChild(row);\n      }\n    });\n    if (!inplace) {\n      this.body.appendChild(fragment);\n    }\n  }\n\n  private removeFromBeginning(from: number, to: number, perform = true) {\n    return this.remove(from, to, true, perform);\n  }\n\n  private removeFromBottom(from: number, to: number, perform = true) {\n    return this.remove(from, to, false, perform);\n  }\n\n  private remove(from: number, to: number, fromBeginning: boolean, perform = true) {\n    if (to < from) {\n      return [];\n    }\n    const b = this.body;\n    const toRecycle: HTMLElement[] = [];\n    // console.log('remove', fromBeginning, (to - from) + 1, this.body.childElementCount - ((to - from) + 1));\n    let act = (fromBeginning ? b.firstChild : b.lastChild) as HTMLElement;\n    for (let i = from; i <= to; ++i) {\n      const item = act;\n      act = (fromBeginning ? act.nextSibling : act.previousSibling) as HTMLElement;\n\n      if (perform) {\n        b.removeChild(item);\n        this.recycle(item);\n      }\n      toRecycle.push(item);\n    }\n    return toRecycle;\n  }\n\n  private addAtBeginning(from: number, to: number, perform = true) {\n    if (to < from) {\n      return null;\n    }\n    // console.log('add', (to - from) + 1, this.body.childElementCount + ((to - from) + 1));\n    const fragment = this.fragment;\n    if (from === to && perform) {\n      this.body.insertBefore(this.create(from), this.body.firstChild);\n      return null;\n    }\n    for (let i = from; i <= to; ++i) {\n      fragment.appendChild(this.create(i));\n    }\n    if (perform) {\n      this.body.insertBefore(fragment, this.body.firstChild);\n    }\n    return fragment;\n  }\n\n  private addAtBottom(from: number, to: number, perform = true) {\n    if (to < from) {\n      return null;\n    }\n    // console.log('add_b', (to - from) + 1, this.body.childElementCount + ((to - from) + 1));\n    if (from === to && perform) {\n      this.body.appendChild(this.create(from));\n      return null;\n    }\n    const fragment = this.fragment;\n    for (let i = from; i <= to; ++i) {\n      fragment.appendChild(this.create(i));\n    }\n    if (perform) {\n      this.body.appendChild(fragment);\n    }\n    return fragment;\n  }\n\n  protected updateOffset(firstRowPos: number) {\n    this.visibleFirstRowPos = firstRowPos;\n\n    this.updateSizer(firstRowPos);\n  }\n\n  protected updateSizer(firstRowPos: number) {\n    const { totalHeight } = this.context;\n    setTransform(this.body, 0, firstRowPos.toFixed(0));\n    setTransform(this.bodySizer, 0, Math.max(0, totalHeight - 1).toFixed(0));\n  }\n\n  /**\n   * removes all rows and recreates the table\n   * @param {IAnimationContext} ctx optional animation context to create a transition between the previous and the current tables\n   * @returns {void} nothing\n   */\n  protected recreate(ctx?: IAnimationContext) {\n    this.abortAnimation();\n    if (ctx) {\n      return this.recreateAnimated(ctx);\n    }\n    return this.recreatePure();\n  }\n\n  private recreatePure() {\n    const context = this.context;\n\n    const scroller = this.bodyScroller;\n\n    //update first to avoid resetting scrollTop\n    this.updateOffset(0);\n\n    this.removeAll();\n    this.clearPool();\n\n    const { first, last, firstRowPos } = range(\n      scroller.scrollTop,\n      scroller.clientHeight,\n      context.defaultRowHeight,\n      context.exceptions,\n      context.numberOfRows\n    );\n\n    this.visible.first = this.visible.forcedFirst = first;\n    this.visible.last = this.visible.forcedLast = last;\n\n    if (first < 0) {\n      // empty\n      this.updateOffset(0);\n      return;\n    }\n    this.addAtBottom(first, last);\n    this.updateOffset(firstRowPos);\n  }\n\n  private recreateAnimated(ctx: IAnimationContext) {\n    const lookup = new Map<string, { n: HTMLElement; pos: number; i: number }>();\n    const prev = new KeyFinder(ctx.previous, ctx.previousKey);\n    const cur = new KeyFinder(this.context, ctx.currentKey);\n    const next = range(\n      this.bodyScroller.scrollTop,\n      this.bodyScroller.clientHeight,\n      cur.context.defaultRowHeight,\n      cur.context.exceptions,\n      cur.context.numberOfRows\n    );\n\n    {\n      const rows = Array.from(this.body.children) as HTMLElement[];\n      const old = Object.assign({}, this.visible);\n      //store the current rows in a lookup and clear\n\n      clear(this.body);\n\n      prev.positions(old.first, Math.min(old.last, old.first + rows.length), this.visibleFirstRowPos, (i, key, pos) => {\n        const n = rows[i];\n        if (n) {\n          // shouldn't happen that it is not there\n          lookup.set(key, { n, pos, i });\n        }\n        // else {\n        //  console.error(i, key, pos, rows);\n        //}\n      });\n    }\n\n    this.visible.first = this.visible.forcedFirst = next.first;\n    this.visible.last = this.visible.forcedLast = next.last;\n\n    const fragment = this.fragment;\n    const animation: IAnimationItem[] = [];\n\n    let nodeY = next.firstRowPos;\n    cur.positions(next.first, next.last, next.firstRowPos, (i, key, pos) => {\n      let node: HTMLElement;\n      let mode: EAnimationMode = EAnimationMode.UPDATE;\n      let previous: {\n        index: number | -1;\n        y: number;\n        height: number | null;\n      };\n      if (lookup.has(key)) {\n        // still visible\n        const item = lookup.get(key)!;\n        lookup.delete(key);\n\n        // update height\n\n        item.n.dataset.index = String(i);\n        node = this.proxy(item.n, this.updateRow(item.n, i));\n        previous = {\n          index: item.i,\n          y: item.pos,\n          height: prev.exceptionHeightOf(item.i, true),\n        };\n      } else {\n        // need a new row\n        const old = prev.posByKey(key);\n        // maybe not visible  before so keep in place\n        node = this.create(i);\n\n        mode = old.index < 0 ? EAnimationMode.SHOW : EAnimationMode.UPDATE_CREATE;\n        previous = {\n          index: old.index,\n          y: old.pos >= 0 ? old.pos : pos,\n          height: old.index < 0 ? cur.exceptionHeightOf(i, true) : prev.exceptionHeightOf(old.index, true),\n        };\n      }\n      animation.push({\n        node,\n        key,\n        mode,\n        previous,\n        nodeY,\n        nodeYCurrentHeight: pos,\n        current: {\n          index: i,\n          y: pos,\n          height: cur.exceptionHeightOf(i),\n        },\n      });\n      node.style.transform = `translate(0, ${nodeY - pos}px)`;\n      nodeY += previous.height! + (previous.index < 0 ? cur.padding(i) : prev.padding(previous.index));\n\n      fragment.appendChild(node);\n    });\n\n    let nodeYCurrentHeight = next.endPos;\n    // items that are going to be removed\n    lookup.forEach((item, key) => {\n      // calculate their next position\n      const r = cur.posByKey(key);\n\n      // maybe not visible anymore, keep in place\n      const nextPos = r.pos >= 0 ? r.pos : item.pos;\n      const node = item.n;\n      // located at addedPos\n      // should end up at nextPos\n      // was previously at item.pos\n      node.style.transform = `translate(0, ${item.pos - nodeY}px)`;\n      fragment.appendChild(node);\n\n      const prevHeight = prev.exceptionHeightOf(item.i, true);\n\n      animation.push({\n        node: item.n,\n        key,\n        mode: r.index < 0 ? EAnimationMode.HIDE : EAnimationMode.UPDATE_REMOVE,\n        previous: {\n          index: item.i,\n          y: item.pos,\n          height: prevHeight,\n        },\n        nodeY,\n        nodeYCurrentHeight,\n        current: {\n          index: r.index,\n          y: nextPos,\n          height: r.index < 0 ? null : cur.exceptionHeightOf(r.index),\n        },\n      });\n      nodeYCurrentHeight +=\n        r.index < 0 ? cur.context.defaultRowHeight : cur.exceptionHeightOf(r.index, true)! + cur.padding(r.index);\n      nodeY += prevHeight! + prev.padding(item.i);\n    });\n\n    this.updateOffset(next.firstRowPos);\n\n    this.animate(animation, ctx.phases || defaultPhases, prev, cur, fragment);\n  }\n\n  private animate(\n    animation: IAnimationItem[],\n    phases: IPhase[],\n    previousFinder: KeyFinder,\n    currentFinder: KeyFinder,\n    fragment: DocumentFragment\n  ) {\n    if (animation.length <= 0) {\n      this.body.appendChild(fragment);\n      return;\n    }\n\n    let currentTimer: any = -1;\n    let actPhase = 0;\n\n    const executePhase = (phase: IPhase, items = animation) => {\n      items.forEach((anim) => phase.apply(anim, previousFinder, currentFinder));\n    };\n\n    const run = () => {\n      //dummy log for forcing dom update\n      console.assert(animation[0]!.node.offsetTop >= 0, 'dummy log for forcing dom update');\n      executePhase(phases[actPhase++]);\n\n      // shifted by one since already added through ++\n      if (actPhase < phases.length) {\n        // schedule the next one\n        const next = phases[actPhase]!;\n        // eslint-disable-next-line no-restricted-globals\n        currentTimer = self.setTimeout(run, next.delay);\n        return;\n      }\n\n      // last one\n      const body = this.body.classList;\n      Array.from(body).forEach((v) => {\n        if (v.startsWith(cssClass()) && v.endsWith('-animation')) {\n          body.remove(v);\n        }\n      });\n      // clean up\n      animation.forEach(({ node, mode }) => {\n        if (mode !== EAnimationMode.UPDATE_REMOVE && mode !== EAnimationMode.HIDE) {\n          return;\n        }\n        node.remove();\n        node.style.transform = '';\n        this.recycle(node);\n      });\n      this.abortAnimation = () => undefined;\n      currentTimer = -1;\n    };\n\n    // execute all phases having a delay of zero\n    while (phases[actPhase].delay === 0) {\n      executePhase(phases[actPhase++]);\n    }\n    // after the initial one\n    const body = this.body;\n    this.body.appendChild(fragment);\n\n    const dummyAnimation: IAnimationItem[] = [];\n    animation = animation.filter((d) => {\n      if (noAnimationChange(d, previousFinder.context.defaultRowHeight, currentFinder.context.defaultRowHeight)) {\n        dummyAnimation.push(d);\n        return false;\n      }\n      return true;\n    });\n\n    if (dummyAnimation.length > 0) {\n      // execute all phases for them\n      phases.slice(actPhase).forEach((phase) => executePhase(phase, dummyAnimation));\n    }\n\n    if (animation.length === 0) {\n      return;\n    }\n\n    body.classList.add(CSS_CLASS_ROW_ANIMATION);\n    new Set(animation.map((d) => d.mode)).forEach((mode) => {\n      // add class but map to UPDATE only\n      body.classList.add(cssClass(`${EAnimationMode[mode].toLowerCase().split('_')[0]}-animation`));\n    });\n\n    this.abortAnimation = () => {\n      if (currentTimer <= 0) {\n        return;\n      }\n      // abort by removing\n      clearTimeout(currentTimer);\n      currentTimer = -1;\n      // run the last phase\n      actPhase = phases.length - 1;\n      run();\n    };\n\n    // next tick such that DOM will be updated\n    // eslint-disable-next-line no-restricted-globals\n    currentTimer = self.setTimeout(run, phases[actPhase].delay);\n  }\n\n  /**\n   * clears the row pool used for faster creation\n   */\n  protected clearPool() {\n    // clear pool\n    this.pool.splice(0, this.pool.length);\n  }\n\n  /**\n   * triggers a revalidation of the current scrolling offset\n   */\n  protected revalidate() {\n    const scroller = this.bodyScroller;\n    this.onScrolledVertically(scroller.scrollTop, scroller.clientHeight, true);\n    this.updateOffset(this.visibleFirstRowPos);\n  }\n\n  /**\n   * scrolling vertically\n   * @param {number} scrollTop top scrolling\n   * @param {number} clientHeight visible height\n   * @param {boolean} isGoingDown hint whether the scrollTop increases\n   * @return {EScrollResult} full in case of a full rebuild or partial update\n   */\n  protected onScrolledVertically(scrollTop: number, clientHeight: number, isGoingDown: boolean): EScrollResult {\n    const shift = this.options.viewportOversize;\n\n    const shiftTop = Math.max(0, scrollTop - shift);\n\n    const scrollResult = this.onScrolledImpl(shiftTop, clientHeight + shift + (scrollTop - shiftTop));\n    for (const mixin of this.mixins) {\n      mixin.onScrolled(isGoingDown, scrollResult);\n    }\n    return scrollResult;\n  }\n\n  private shiftLast(current: number, currentDelta: number) {\n    const b = this.options.batchSize;\n    if (currentDelta >= b) {\n      return current;\n    }\n    const total = this.context.numberOfRows;\n    return Math.min(total - 1, current + (this.options.batchSize - currentDelta));\n  }\n\n  private shiftFirst(current: number, currentFirstRow: number, currentDelta: number) {\n    const b = this.options.batchSize;\n    if (currentDelta >= b || current <= 0) {\n      return { first: current, firstRowPos: currentFirstRow };\n    }\n    const first = Math.max(0, current - (this.options.batchSize - currentDelta));\n\n    const { exceptionsLookup, defaultRowHeight } = this.context;\n    let firstRowPos = currentFirstRow;\n    for (let i = first; i < current; ++i) {\n      if (exceptionsLookup.has(i)) {\n        firstRowPos -= exceptionsLookup.get(i)!;\n      } else {\n        firstRowPos -= defaultRowHeight;\n      }\n    }\n    return { first, firstRowPos };\n  }\n\n  private onScrolledImpl(scrollTop: number, clientHeight: number): EScrollResult {\n    const context = this.context;\n    let { first, last, firstRowPos } = range(\n      scrollTop,\n      clientHeight,\n      context.defaultRowHeight,\n      context.exceptions,\n      context.numberOfRows\n    );\n\n    const visible = this.visible;\n    visible.forcedFirst = first;\n    visible.forcedLast = last;\n\n    if (first - visible.first >= 0 && last - visible.last <= 0) {\n      //nothing to do\n      return EScrollResult.NONE;\n    }\n\n    let r: EScrollResult = EScrollResult.SOME;\n\n    let torecycle: HTMLElement[] | undefined;\n    let toAdd: DocumentFragment | undefined;\n    let toAddBottom = false;\n\n    if (first > visible.last || last < visible.first) {\n      //no overlap, clean and draw everything\n      //console.log(`ff added: ${last - first + 1} removed: ${visibleLast - visibleFirst + 1} ${first}:${last} ${offset}`);\n      //removeRows(visibleFirst, visibleLast);\n\n      torecycle = this.removeAll(false);\n      toAdd = this.addAtBottom(first, last, false);\n      toAddBottom = true;\n      r = EScrollResult.ALL;\n    } else if (first < visible.first) {\n      //some first rows missing and some last rows to much\n      //console.log(`up added: ${visibleFirst - first + 1} removed: ${visibleLast - last + 1} ${first}:${last} ${offset}`);\n      const toRemove = visible.last - (last + 1);\n      if (toRemove >= this.options.batchSize) {\n        torecycle = this.removeFromBottom(last + 1, visible.last, false);\n      } else {\n        last = visible.last;\n      }\n\n      const shift = this.shiftFirst(first, firstRowPos, visible.first - 1 - first);\n      first = shift.first;\n      firstRowPos = shift.firstRowPos;\n      toAdd = this.addAtBeginning(first, visible.first - 1, false);\n      toAddBottom = false;\n      r = EScrollResult.SOME_TOP;\n    } else {\n      //console.log(`do added: ${last - visibleLast + 1} removed: ${first - visibleFirst + 1} ${first}:${last} ${offset}`);\n      //some last rows missing and some first rows to much\n      const toRemove = first - 1 - visible.first;\n      if (toRemove >= this.options.batchSize) {\n        torecycle = this.removeFromBeginning(visible.first, first - 1, false);\n      } else {\n        first = visible.first;\n        firstRowPos = this.visibleFirstRowPos;\n      }\n\n      last = this.shiftLast(last, last - visible.last + 1);\n\n      toAdd = this.addAtBottom(visible.last + 1, last, false);\n      toAddBottom = true;\n      r = EScrollResult.SOME_BOTTOM;\n    }\n\n    visible.first = first;\n    visible.last = last;\n\n    this.updateOffset(firstRowPos);\n    this.manipulate(torecycle, toAdd, toAddBottom);\n    return r;\n  }\n\n  private manipulate(toRecycle: HTMLElement[] | undefined, toAdd: DocumentFragment | undefined, bottom: boolean) {\n    if (toRecycle) {\n      for (const item of toRecycle) {\n        item.remove();\n        this.recycle(item);\n      }\n    }\n    if (!toAdd) {\n      return;\n    }\n    if (bottom) {\n      this.body.appendChild(toAdd);\n    } else {\n      this.body.insertBefore(toAdd, this.body.firstChild);\n    }\n  }\n}\n\nexport default ARowRenderer;\n\nexport function setTransform(elem: HTMLElement, x: number | string, y: number | string) {\n  const text = `translate(${x}px, ${y}px)`;\n  const anyelem = elem as any;\n  if (anyelem.__transform__ === text) {\n    return;\n  }\n  anyelem.__transform__ = elem.style.transform = text;\n}\n","// import manually import './style.scss';\n\n/**\n * utility for custom generated CSS rules\n */\n\ninterface ICSSRule {\n  id: string;\n  selector: string;\n  style: Partial<CSSStyleDeclaration>;\n}\n\nfunction assignStyles(target: any, source: any) {\n  for (const key of Object.keys(source)) {\n    const v = source[key] as string;\n\n    if (!v.endsWith(' !important')) {\n      if (target[key] !== v) {\n        target[key] = v;\n      }\n      continue;\n    }\n\n    // handle special important case\n    const plain = v.slice(0, -' !important'.length);\n    if (target[key] === plain) {\n      continue;\n    }\n    target[key] = plain;\n    // see https://gist.github.com/youssman/745578062609e8acac9f\n    const hyphen = key.replace(/([a-zA-Z])(?=[A-Z])/g, '$1-').toLowerCase();\n    target.setProperty(hyphen, plain, 'important');\n  }\n}\n\nexport default class StyleManager {\n  private readonly rules: ICSSRule[] = [];\n  private readonly node: HTMLStyleElement;\n\n  private testVerifyTimeout = -1;\n\n  /**\n   * the parent element to append this managed style\n   * @param {HTMLElement} root\n   */\n  constructor(root: HTMLElement) {\n    this.node = root.ownerDocument!.createElement('style');\n    this.node.appendChild(root.ownerDocument!.createTextNode('')); // for webkit?\n    root.appendChild(this.node);\n  }\n\n  destroy() {\n    this.node.remove();\n  }\n\n  private verifySheet() {\n    const sheet = this.sheet;\n    if (!sheet) {\n      if (this.testVerifyTimeout >= 0) {\n        return;\n      }\n      // test till attached\n      // eslint-disable-next-line no-restricted-globals\n      this.testVerifyTimeout = self.setTimeout(() => {\n        this.testVerifyTimeout = -1;\n        this.verifySheet();\n      }, 20);\n      return;\n    }\n    const rules = sheet.cssRules;\n    if (\n      rules.length === this.rules.length &&\n      this.rules.every((d, i) => (rules[i] as CSSStyleRule).selectorText === d.selector)\n    ) {\n      // same\n      return;\n    }\n\n    console.warn('invalid sheet rules detected');\n\n    const l = rules.length;\n    for (let i = 0; i < l; ++i) {\n      sheet.deleteRule(i);\n    }\n\n    // create all\n    for (const rule of this.rules) {\n      const index = sheet.insertRule(`${rule.selector} {}`, sheet.cssRules.length);\n      const cssRule = sheet.cssRules[index] as CSSStyleRule;\n      rule.selector = cssRule.selectorText;\n      assignStyles(cssRule.style, rule.style);\n    }\n  }\n\n  private get sheet() {\n    return this.node.sheet as CSSStyleSheet | null;\n  }\n\n  private getSheetRule(index: number) {\n    const sheet = this.sheet;\n    return sheet ? (sheet.cssRules[index] as CSSStyleRule) : null;\n  }\n\n  /**\n   * add a custom css rule\n   * @param {string} id unique id of the rule for later identification\n   * @param {string} selector the css selector\n   * @param {Partial<CSSStyleDeclaration>} style the style attributes\n   * @returns {string} the id again\n   */\n  addRule(id: string, selector: string, style: Partial<CSSStyleDeclaration>) {\n    this.verifySheet();\n    const sheet = this.sheet;\n    if (!sheet) {\n      // upon next update\n      this.rules.push({ id, selector, style });\n      return null;\n    }\n    const index = sheet.insertRule(`${selector} {}`, sheet.cssRules.length);\n    const rule = sheet.cssRules[index] as CSSStyleRule;\n    this.rules.push({ id, selector: rule.selectorText, style });\n    assignStyles(rule.style, style);\n    return id;\n  }\n\n  /**\n   * updates or add a rule, see @addRule\n   * @param {string} id unique id of the rule for later identification\n   * @param {string} selector the css selector\n   * @param {Partial<CSSStyleDeclaration>} style the style attributes\n   * @returns {string} the id again\n   */\n  updateRule(id: string, selector: string, style: Partial<CSSStyleDeclaration>) {\n    this.verifySheet();\n    const index = this.rules.findIndex((d) => d.id === id);\n    if (index < 0) {\n      return this.addRule(id, selector, style);\n    }\n    const stored = this.rules[index];\n    stored.selector = selector;\n    stored.style = style;\n\n    const rule = this.getSheetRule(index);\n    if (rule) {\n      if (rule.selectorText.replace(/\\s/gm, '') !== selector.replace(/\\s/gm, '')) {\n        //ignoring white space\n        rule.selectorText = selector;\n        stored.selector = rule.selectorText;\n      }\n      assignStyles(rule.style, style);\n    }\n    return id;\n  }\n\n  /**\n   * deletes the given rule by id\n   * @param {string} id the rule to delete\n   */\n  deleteRule(id: string) {\n    this.verifySheet();\n    const index = this.rules.findIndex((d) => d.id === id);\n    if (index < 0) {\n      return;\n    }\n    this.rules.splice(index, 1);\n    const sheet = this.sheet;\n    if (sheet) {\n      sheet.deleteRule(index);\n    }\n  }\n\n  /**\n   * get a list of all registered rule ids\n   * @returns {string[]}\n   */\n  protected get ruleNames() {\n    return this.rules.map((d) => d.id);\n  }\n}\n","import { addScroll } from '../internal';\nimport {\n  cssClass,\n  CSS_CLASS_BODY,\n  CSS_CLASS_FOOTER,\n  CSS_CLASS_HEADER,\n  CSS_CLASS_SCROLLBAR_TESTER,\n  CSS_CLASS_SHIFTED,\n  CSS_CLASS_TBODY,\n  CSS_CLASS_THEAD,\n} from '../styles';\nimport StyleManager from './StyleManager';\n\nexport function setTemplate(root: HTMLElement, id: string) {\n  id = id.startsWith('#') ? id.slice(1) : id;\n  root.innerHTML = `\n  <header id=\"header-${id}\" class=\"${CSS_CLASS_HEADER} ${cssClass(`header-${id}`)}\">\n    <article class=\"${CSS_CLASS_THEAD} ${cssClass(`thead-${id}`)}\"></article>\n  </header>\n  <main id=\"body-${id}\" class=\"${CSS_CLASS_BODY} ${cssClass(`body-${id}`)}\">\n    <footer class=\"${CSS_CLASS_FOOTER}\">&nbsp;</footer>\n    <article class=\"${CSS_CLASS_TBODY} ${cssClass(`tbody-${id}`)}\"></article>\n  </main>`;\n  return root;\n}\n\n/**\n * column base interface\n */\nexport interface IColumn {\n  readonly index: number;\n  readonly id: string;\n  readonly width: number;\n  /**\n   * boolean flag whether when scrolling the column should be sticky\n   */\n  readonly frozen: boolean;\n}\n\ninterface ISelectors {\n  thead: string;\n  tbody: string;\n  tr: string;\n  th: string;\n  td: string;\n}\n\n/**\n * generates the HTML Ids used for the header and body article of a table\n * @param {string} tableId base table id\n * @param {boolean} asSelector flag whether to prepend with # for CSS selector\n * @return {ISelectors} the table ids used for header and body\n */\nexport function tableIds(tableId: string) {\n  return {\n    thead: `thead-${tableId}`,\n    tbody: `tbody-${tableId}`,\n    tr: `tr-${tableId}`,\n    th: `th-${tableId}`,\n    td: `td-${tableId}`,\n  };\n}\n\nexport function tableCSSClasses(tableId: string) {\n  const ids = tableIds(tableId);\n  return {\n    thead: cssClass(ids.thead),\n    tbody: cssClass(ids.tbody),\n    tr: cssClass(ids.tr),\n    th: cssClass(ids.th),\n    td: cssClass(ids.td),\n  };\n}\n\n/**\n * utility for custom generated CSS rules with a focus on dynamically generated grid layouts\n */\nexport default class GridStyleManager extends StyleManager {\n  readonly id: string;\n\n  readonly ids: ISelectors;\n  readonly cssClasses: ISelectors;\n\n  constructor(root: HTMLElement, id: string) {\n    super(root);\n    this.id = id.startsWith('#') ? id.slice(1) : id;\n\n    this.ids = tableIds(this.id);\n    this.cssClasses = tableCSSClasses(this.id);\n\n    const headerScroller = root.getElementsByTagName('header')[0] as HTMLElement;\n    const bodyScroller = root.getElementsByTagName('main')[0] as HTMLElement;\n\n    // async since style needs to be added to dom first\n    // eslint-disable-next-line no-restricted-globals\n    self.setTimeout(() => {\n      const { width } = measureScrollbar(root);\n      this.updateRule('__scrollBarFix2', `#header-${this.id} > article:last-of-type`, {\n        borderRight: `${width}px solid transparent`,\n      });\n    }, 20);\n\n    let old = headerScroller.scrollLeft;\n\n    // update frozen and sync header with body\n    addScroll(bodyScroller, 'animation', (act) => {\n      const newValue = act.left;\n      if (old !== newValue) {\n        old = headerScroller.scrollLeft = newValue;\n      }\n      root.classList.toggle(CSS_CLASS_SHIFTED, act.left > 0);\n    });\n  }\n\n  /**\n   * updates the column widths and default row height for a table\n   * @param {number} defaultRowHeight\n   * @param {IColumn[]} columns\n   * @param {number} frozenShift shift frozen columns\n   * @param {string} tableId optional tableId in case of multiple tables within the same engine\n   * @param {string} unit\n   */\n  update(\n    defaultRowHeight: number,\n    columns: IColumn[],\n    padding: (index: number) => number,\n    frozenShift: number,\n    tableId: string,\n    unit = 'px'\n  ) {\n    const ids = tableIds(tableId);\n    const selectors = tableCSSClasses(tableId);\n\n    const total = `${columns.reduce((a, b, i) => a + b.width + padding(i), 0)}${unit}`;\n\n    this.updateRule(`__heightsRule${selectors.tr}`, `.${selectors.tr}`, {\n      height: `${defaultRowHeight}px`,\n      width: total,\n    });\n\n    this.updateRule(`__heightsRule${selectors.tbody}`, `#${ids.tbody}`, {\n      width: total,\n    });\n\n    this.updateColumns(columns, padding, selectors, frozenShift, unit);\n  }\n\n  /**\n   * removes a given tableId if not needed anymore\n   * @param {string} tableId tableId to remove\n   */\n  remove(tableId: string) {\n    const selectors = tableCSSClasses(tableId);\n    this.deleteRule(`__heightsRule${selectors.tr}`);\n    this.deleteRule(`__heightsRule${selectors.tbody}`);\n\n    const prefix = `__col${selectors.td}_`;\n    const rules = this.ruleNames.reduce((a, b) => a + (b.startsWith(prefix) ? 1 : 0), 0);\n    // reset\n    for (let i = 0; i < rules; ++i) {\n      this.deleteRule(`${prefix}${i}`);\n    }\n  }\n\n  private updateColumns(\n    columns: IColumn[],\n    padding: (index: number) => number,\n    cssSelectors: ISelectors,\n    frozenShift: number,\n    unit = 'px'\n  ) {\n    const prefix = `__col${cssSelectors.td}_`;\n    const rules = new Set(this.ruleNames.filter((d) => d.startsWith(prefix)));\n\n    let acc = 0;\n    columns.forEach((c, i) => {\n      const th = `.${cssSelectors.th}[data-id=\"${c.id}\"]`;\n      const thStyles: Partial<CSSStyleDeclaration> = {\n        width: `${c.width}${unit}`,\n      };\n      const td = `.${cssSelectors.td}[data-id=\"${c.id}\"]`;\n      const tdStyles: Partial<CSSStyleDeclaration> = {\n        transform: `translateX(${acc}${unit})`,\n        width: `${c.width}${unit}`,\n      };\n\n      if (c.frozen) {\n        thStyles.left = `${acc}px`;\n\n        this.updateRule(`${prefix}${td}F`, `.${cssSelectors.td}.${CSS_CLASS_SHIFTED}[data-id=\"${c.id}\"]`, {\n          transform: `translateX(0)`,\n          left: `${acc + frozenShift}${unit}`,\n        });\n        rules.delete(`${prefix}${td}F`);\n      }\n\n      this.updateRule(`${prefix}${th}`, th, thStyles);\n      rules.delete(`${prefix}${th}`);\n      this.updateRule(`${prefix}${td}`, td, tdStyles);\n      rules.delete(`${prefix}${td}`);\n      acc += c.width + padding(i);\n    });\n\n    rules.forEach((d) => this.deleteRule(d));\n  }\n}\n/**\n * measure the width and height of the scrollbars\n * based on Slick grid implementation\n * @param root\n */\nfunction measureScrollbar(root: HTMLElement) {\n  const body = root.ownerDocument!.body;\n  body.insertAdjacentHTML(\n    'beforeend',\n    `\n    <div class=\"${CSS_CLASS_SCROLLBAR_TESTER}\"><div></div></div>\n  `\n  );\n  const elem = body.lastElementChild! as HTMLElement;\n\n  const width = elem.offsetWidth - elem.clientWidth;\n  const height = elem.offsetHeight - elem.clientHeight;\n\n  elem.remove();\n\n  return { width, height };\n}\n","import { ABORTED, IAbortAblePromise, IAsyncUpdate, isAbortAble, isAsyncUpdate } from '../../abortAble';\nimport { isLoadingCell } from '../../ARowRenderer';\nimport { clear, IScrollInfo } from '../../internal';\nimport { isScrollEventWaiting } from '../../internal/scroll';\nimport { IExceptionContext, range, updateFrozen } from '../../logic';\nimport { EScrollResult, IMixin, IMixinAdapter, IMixinClass } from '../../mixin';\nimport { IColumn } from '../../style';\nimport GridStyleManager from '../../style/GridStyleManager';\nimport {\n  cssClass,\n  CSS_CLASS_FROZEN,\n  CSS_CLASS_LOADING,\n  CSS_CLASS_SHIFTED,\n  CSS_CLASS_TD,\n  CSS_CLASS_TH,\n} from '../../styles';\n\nconst debug = false;\n\nexport interface ICellAdapterRenderContext<T extends IColumn> extends IExceptionContext {\n  readonly column: IExceptionContext;\n  readonly columns: T[];\n}\n\n/**\n * @internal\n */\nexport abstract class ACellAdapter<T extends IColumn> {\n  /**\n   * pool of cells per column\n   * @type {Array}\n   */\n  private readonly cellPool: HTMLElement[][] = [];\n  private readonly loading = new WeakMap<HTMLElement, IAbortAblePromise<void>>();\n\n  readonly visibleColumns = {\n    frozen: [] as number[], // column indices that are visible even tho they would be out of range\n    first: 0,\n    forcedFirst: 0,\n    last: -1,\n    forcedLast: -1,\n  };\n  visibleFirstColumnPos = 0;\n\n  private horizontallyShifted = false;\n  private readonly columnAdapter: IMixinAdapter;\n  private readonly columnMixins: IMixin[];\n\n  private readonly columnFragment: DocumentFragment;\n\n  constructor(\n    protected readonly header: HTMLElement,\n    protected readonly style: GridStyleManager,\n    private readonly tableId: string,\n    mixinClasses: IMixinClass[] = []\n  ) {\n    this.columnAdapter = this.createColumnAdapter();\n    this.columnMixins = mixinClasses.map((mixinClass) => new mixinClass(this.columnAdapter));\n\n    this.columnFragment = header.ownerDocument!.createDocumentFragment();\n  }\n\n  leftShift() {\n    const ctx = this.context;\n    const frozen = this.visibleColumns.frozen.reduce((a, d) => a + ctx.columns[d].width + ctx.column.padding(d), 0);\n    return this.visibleFirstColumnPos - frozen;\n  }\n\n  protected get headerScroller() {\n    return this.header.parentElement! as HTMLElement;\n  }\n\n  addColumnMixin(mixinClass: IMixinClass, options?: any) {\n    this.columnMixins.push(new mixinClass(this.columnAdapter, options));\n  }\n\n  private createColumnAdapter(): IMixinAdapter {\n    const r: any = {\n      visible: this.visibleColumns,\n      addAtBeginning: this.addColumnAtStart.bind(this),\n      addAtBottom: this.addColumnAtEnd.bind(this),\n      removeFromBeginning: this.removeColumnFromStart.bind(this),\n      removeFromBottom: this.removeColumnFromEnd.bind(this),\n      updateOffset: this.updateColumnOffset.bind(this),\n      scroller: this.headerScroller,\n      syncFrozen: this.syncFrozen.bind(this),\n      isScrollEventWaiting: () => isScrollEventWaiting(this.headerScroller, 'animation'),\n    };\n    Object.defineProperties(r, {\n      visibleFirstRowPos: {\n        get: () => this.visibleFirstColumnPos,\n        enumerable: true,\n      },\n      context: {\n        get: () => this.context.column,\n        enumerable: true,\n      },\n      scrollOffset: {\n        get: () => (this.lastScrollInfo ? this.lastScrollInfo.left : 0),\n        enumerable: true,\n      },\n      scrollTotal: {\n        get: () => (this.lastScrollInfo ? this.lastScrollInfo.width : this.headerScroller.clientWidth),\n        enumerable: true,\n      },\n    });\n    return r;\n  }\n\n  init() {\n    const context = this.context;\n    this.style.update(\n      context.defaultRowHeight - context.padding(-1),\n      context.columns,\n      context.column.padding,\n      0,\n      this.tableId\n    );\n\n    context.columns.forEach(() => {\n      //init pool\n      this.cellPool.push([]);\n    });\n  }\n\n  onScrolledHorizontally(scrollLeft: number, clientWidth: number, isGoingRight: boolean) {\n    const scrollResult = this.onScrolledHorizontallyImpl(scrollLeft, clientWidth);\n    for (const mixin of this.columnMixins) {\n      mixin.onScrolled(isGoingRight, scrollResult);\n    }\n    return scrollResult;\n  }\n\n  /**\n   * the current render context, upon change `recreate` the whole table\n   * @returns {ICellRenderContext}\n   */\n  protected abstract get context(): ICellAdapterRenderContext<T>;\n\n  protected abstract get body(): HTMLElement;\n\n  protected abstract get lastScrollInfo(): IScrollInfo | null;\n\n  protected abstract createHeader(document: Document, column: T): HTMLElement | IAsyncUpdate<HTMLElement>;\n\n  protected abstract updateHeader(node: HTMLElement, column: T): HTMLElement | IAsyncUpdate<HTMLElement> | void;\n\n  protected abstract createCell(document: Document, index: number, column: T): HTMLElement | IAsyncUpdate<HTMLElement>;\n\n  protected abstract updateCell(\n    node: HTMLElement,\n    index: number,\n    column: T\n  ): HTMLElement | IAsyncUpdate<HTMLElement> | void;\n\n  protected abstract forEachRow(callback: (row: HTMLElement, rowIndex: number) => void): void;\n\n  private removeColumnFromStart(from: number, to: number, frozenShift: number = this.visibleColumns.frozen.length) {\n    this.forEachRow((row: HTMLElement) => {\n      this.removeCellFromStart(row, from, to, frozenShift);\n    });\n    if (debug) {\n      this.verifyRows();\n    }\n  }\n\n  private removeCellFromStart(row: HTMLElement, from: number, to: number, frozenShift: number) {\n    for (let i = from; i <= to; ++i) {\n      const node = (frozenShift === 0 ? row.firstElementChild : row.children[frozenShift]) as HTMLElement;\n      node.remove();\n      this.recycleCell(node, i);\n    }\n    if (debug) {\n      verifyRow(row, -1, this.context.columns);\n    }\n  }\n\n  private removeColumnFromEnd(from: number, to: number) {\n    this.forEachRow((row: HTMLElement) => {\n      this.removeCellFromEnd(row, from, to);\n    });\n    if (debug) {\n      this.verifyRows();\n    }\n  }\n\n  private removeCellFromEnd(row: HTMLElement, from: number, to: number) {\n    for (let i = to; i >= from; --i) {\n      const node = row.lastElementChild as HTMLElement;\n      node.remove();\n      this.recycleCell(node, i);\n    }\n    if (debug) {\n      verifyRow(row, -1, this.context.columns);\n    }\n  }\n\n  private removeFrozenCells(row: HTMLElement, columnIndices: number[], shift: number) {\n    for (const columnIndex of columnIndices) {\n      const node = row.children[shift]! as HTMLElement;\n      node.remove();\n      this.recycleCell(node, columnIndex);\n    }\n    if (debug) {\n      verifyRow(row, -1, this.context.columns);\n    }\n  }\n\n  private removeFrozenColumns(columnIndices: number[], shift: number) {\n    this.forEachRow((row: HTMLElement) => {\n      this.removeFrozenCells(row, columnIndices, shift);\n    });\n    if (debug) {\n      this.verifyRows();\n    }\n  }\n\n  private removeAllColumns(includingFrozen: boolean) {\n    this.forEachRow((row: HTMLElement) => {\n      this.removeAllCells(row, includingFrozen);\n    });\n    if (debug) {\n      this.verifyRows();\n    }\n  }\n\n  private removeAllCells(row: HTMLElement, includingFrozen: boolean, shift = this.visibleColumns.first) {\n    const arr = Array.from(row.children) as HTMLElement[];\n    const frozen = this.visibleColumns.frozen;\n    clear(row);\n\n    if (includingFrozen || frozen.length === 0) {\n      for (const i of frozen) {\n        this.recycleCell(arr.shift()!, i);\n      }\n    } else {\n      // have frozen and keep them, so readd them\n      for (let i = 0; i < frozen.length; i++) {\n        row.appendChild(arr.shift()!);\n      }\n    }\n    arr.forEach((item, i) => {\n      this.recycleCell(item, i + shift);\n    });\n\n    if (debug) {\n      verifyRow(row, -1, this.context.columns);\n    }\n  }\n\n  private selectProxyCell(\n    row: number,\n    column: number,\n    columns: T[]\n  ): { item: HTMLElement; ready: IAbortAblePromise<void> | void } {\n    const pool = this.cellPool[column];\n    const columnObj = columns[column];\n\n    let item: HTMLElement;\n    let ready: IAbortAblePromise<void> | void;\n    const pooled = pool.pop();\n\n    const r = pooled\n      ? this.updateCell(pooled, row, columnObj) || pooled\n      : this.createCell(this.header.ownerDocument!, row, columnObj);\n    if (isAsyncUpdate(r)) {\n      item = r.item;\n      ready = r.ready;\n    } else {\n      item = r;\n    }\n    if (item !== pooled) {\n      item.dataset.id = columnObj.id;\n      item.classList.add(CSS_CLASS_TD, this.style.cssClasses.td, cssClass(`td-${this.tableId}`));\n    }\n    this.updateShiftedState(item, columnObj);\n    return { item, ready };\n  }\n\n  handleCellReady(item: HTMLElement, ready: IAbortAblePromise<void>, column = -1) {\n    item.classList.add(CSS_CLASS_LOADING);\n    const abort = ready;\n    //lazy loading\n\n    this.loading.set(item, abort);\n    abort.then((result) => {\n      this.loading.delete(item);\n      item.classList.remove(CSS_CLASS_LOADING);\n      if (result === ABORTED && column >= 0) {\n        //aborted can recycle the real one\n        this.cellPool[column].push(item);\n      }\n    });\n    return item;\n  }\n\n  private selectCell(row: number, column: number, columns: T[]): HTMLElement {\n    const { item, ready } = this.selectProxyCell(row, column, columns);\n    if (!isAbortAble(ready)) {\n      return item;\n    }\n    return this.handleCellReady(item, ready, column);\n  }\n\n  protected updateShiftedState(node: HTMLElement, col: IColumn) {\n    node.classList.toggle(CSS_CLASS_SHIFTED, col.frozen && this.horizontallyShifted);\n  }\n\n  recycleCell(item: HTMLElement, column = -1) {\n    // check if the dom element is still being manipulated\n    if (this.loading.has(item)) {\n      const abort = this.loading.get(item)!;\n      abort.abort();\n    } else if (!isLoadingCell(item) && column >= 0) {\n      this.cellPool[column].push(item);\n    }\n  }\n\n  private addColumnAtStart(from: number, to: number, frozenShift: number = this.visibleColumns.frozen.length) {\n    const { columns } = this.context;\n    this.forEachRow((row: HTMLElement, rowIndex: number) => {\n      this.addCellAtStart(row, rowIndex, from, to, frozenShift, columns);\n    });\n    if (debug) {\n      this.verifyRows();\n    }\n  }\n\n  private addCellAtStart(\n    row: HTMLElement,\n    rowIndex: number,\n    from: number,\n    to: number,\n    frozenShift: number,\n    columns: T[]\n  ) {\n    if (debug) {\n      verifyRow(row, rowIndex, this.context.columns);\n    }\n    for (let i = to; i >= from; --i) {\n      const cell = this.selectCell(rowIndex, i, columns);\n      row.insertBefore(cell, frozenShift > 0 ? row.children[frozenShift] : row.firstChild);\n    }\n    if (debug) {\n      verifyRow(row, rowIndex, this.context.columns);\n    }\n  }\n\n  private insertFrozenCells(row: HTMLElement, rowIndex: number, columnIndices: number[], shift: number, columns: T[]) {\n    const before = row.children[shift];\n    for (const i of columnIndices) {\n      const cell = this.selectCell(rowIndex, i, columns);\n      if (before) {\n        row.insertBefore(cell, before);\n      } else {\n        row.appendChild(cell);\n      }\n    }\n  }\n\n  private insertFrozenColumns(columnIndices: number[], shift: number) {\n    const { columns } = this.context;\n    this.forEachRow((row: HTMLElement, rowIndex: number) => {\n      this.insertFrozenCells(row, rowIndex, columnIndices, shift, columns);\n    });\n  }\n\n  private addColumnAtEnd(from: number, to: number) {\n    const { columns } = this.context;\n    this.forEachRow((row: HTMLElement, rowIndex: number) => {\n      this.addCellAtEnd(row, rowIndex, from, to, columns);\n    });\n    if (debug) {\n      this.verifyRows();\n    }\n  }\n\n  private verifyRows() {\n    const { columns } = this.context;\n    this.forEachRow((row, rowIndex) => verifyRow(row, rowIndex, columns));\n  }\n\n  private addCellAtEnd(row: HTMLElement, rowIndex: number, from: number, to: number, columns: T[]) {\n    for (let i = from; i <= to; ++i) {\n      const cell = this.selectCell(rowIndex, i, columns);\n      row.appendChild(cell);\n    }\n    if (debug) {\n      verifyRow(row, rowIndex, this.context.columns);\n    }\n  }\n\n  updateHeaders() {\n    const { columns } = this.context;\n    Array.from(this.header.children).forEach((node: Element, i) => {\n      const base = node as HTMLElement;\n      const col = columns[i];\n      const r = this.updateHeader(base, col);\n      let n: HTMLElement;\n      if (isAsyncUpdate(r)) {\n        n = this.handleCellReady(r.item, r.ready, -1);\n      } else {\n        n = r || base;\n      }\n      if (n === base) {\n        return;\n      }\n      n.dataset.id = col.id;\n      n.classList.add(CSS_CLASS_TH, this.style.cssClasses.th, cssClass(`th-${this.tableId}`));\n      this.header.replaceChild(base, n);\n    });\n  }\n\n  recreate(left: number, width: number) {\n    const context = this.context;\n\n    this.style.update(\n      context.defaultRowHeight - context.padding(-1),\n      context.columns,\n      context.column.padding,\n      -this.leftShift(),\n      this.tableId\n    );\n\n    this.clearPool();\n    // init pool\n    for (let i = this.cellPool.length; i < context.columns.length; ++i) {\n      this.cellPool.push([]);\n    }\n\n    //create all header columns\n    {\n      const fragment = this.columnFragment;\n      const document = fragment.ownerDocument!;\n\n      // create lookup cache to reuse headers\n      const ids = new Map<string, HTMLElement>();\n      while (this.header.lastChild) {\n        const c = this.header.lastChild as HTMLElement;\n        this.header.removeChild(c);\n        ids.set(c.dataset.id!, c);\n      }\n\n      context.columns.forEach((col) => {\n        const existing = ids.get(col.id);\n        const r = existing ? this.updateHeader(existing, col) || existing : this.createHeader(document, col);\n        let n: HTMLElement;\n        if (isAsyncUpdate(r)) {\n          n = this.handleCellReady(r.item, r.ready, -1);\n        } else {\n          n = r;\n        }\n        if (n !== existing) {\n          n.dataset.id = col.id;\n          n.classList.add(CSS_CLASS_TH, this.style.cssClasses.th, cssClass(`th-${this.tableId}`));\n        }\n        fragment.appendChild(n);\n      });\n      this.header.appendChild(fragment);\n    }\n\n    const { first, last, firstRowPos } = range(\n      left,\n      width,\n      context.column.defaultRowHeight,\n      context.column.exceptions,\n      context.column.numberOfRows\n    );\n\n    this.visibleColumns.first = this.visibleColumns.forcedFirst = first;\n    this.visibleColumns.last = this.visibleColumns.forcedLast = last;\n    if (context.columns.some((c) => c.frozen)) {\n      const { target } = updateFrozen([], context.columns, first);\n      this.visibleColumns.frozen = target;\n    } else {\n      this.visibleColumns.frozen = [];\n    }\n    this.updateColumnOffset(firstRowPos);\n  }\n\n  clearPool() {\n    this.cellPool.forEach((p) => p.splice(0, p.length));\n  }\n\n  protected updateColumnOffset(firstColumnPos: number) {\n    const changed = firstColumnPos !== this.visibleFirstColumnPos;\n    this.visibleFirstColumnPos = firstColumnPos;\n    if (changed) {\n      const context = this.context;\n      this.style.update(\n        context.defaultRowHeight - context.padding(-1),\n        context.columns,\n        context.column.padding,\n        -this.leftShift(),\n        this.tableId\n      );\n    }\n  }\n\n  createRow(node: HTMLElement, rowIndex: number): void {\n    const { columns } = this.context;\n    const visible = this.visibleColumns;\n\n    if (visible.frozen.length > 0) {\n      for (const i of visible.frozen) {\n        const cell = this.selectCell(rowIndex, i, columns);\n        node.appendChild(cell);\n      }\n    }\n    for (let i = visible.first; i <= visible.last; ++i) {\n      const cell = this.selectCell(rowIndex, i, columns);\n      node.appendChild(cell);\n    }\n  }\n\n  updateRow(node: HTMLElement, rowIndex: number): void {\n    const { columns } = this.context;\n    const visible = this.visibleColumns;\n\n    //columns may not match anymore if it is a pooled item a long time ago\n\n    switch (node.childElementCount) {\n      case 0:\n        if (visible.frozen.length > 0) {\n          this.insertFrozenCells(node, rowIndex, visible.frozen, 0, columns);\n        }\n        this.addCellAtEnd(node, rowIndex, visible.first, visible.last, columns);\n        break;\n      case 1:\n        const old = node.firstElementChild as HTMLElement;\n        const id = old.dataset.id!;\n        const columnIndex = columns.findIndex((c) => c.id === id);\n        node.removeChild(old);\n        if (columnIndex >= 0) {\n          this.recycleCell(old, columnIndex);\n        }\n\n        if (visible.frozen.length > 0) {\n          this.insertFrozenCells(node, rowIndex, visible.frozen, 0, columns);\n        }\n        this.addCellAtEnd(node, rowIndex, visible.first, visible.last, columns);\n        break;\n      default:\n        this.mergeColumns(node, rowIndex);\n        break;\n    }\n  }\n\n  private mergeColumns(node: HTMLElement, rowIndex: number) {\n    const { columns } = this.context;\n    const visible = this.visibleColumns;\n    const ids = new Map<string, HTMLElement>();\n\n    while (node.lastChild) {\n      const c = node.lastChild as HTMLElement;\n      node.removeChild(c);\n      ids.set(c.dataset.id!, c);\n    }\n\n    const updateImpl = (i: number) => {\n      const col = columns[i];\n      const existing = ids.get(col.id);\n      if (!existing) {\n        const cell = this.selectCell(rowIndex, i, columns);\n        node.appendChild(cell);\n        return;\n      }\n      ids.delete(col.id);\n      const r = this.updateCell(existing, rowIndex, col) || existing;\n      let cell: HTMLElement;\n      if (isAsyncUpdate(r)) {\n        cell = this.handleCellReady(r.item, r.ready, i);\n      } else {\n        cell = r;\n      }\n      if (cell && cell !== existing) {\n        cell.dataset.id = col.id;\n        cell.classList.add(CSS_CLASS_TD, this.style.cssClasses.td, cssClass(`td-${this.tableId}`));\n      }\n      this.updateShiftedState(cell, col);\n      node.appendChild(cell);\n    };\n\n    for (const frozen of visible.frozen) {\n      updateImpl(frozen);\n    }\n    for (let i = visible.first; i <= visible.last; ++i) {\n      updateImpl(i);\n    }\n\n    if (ids.size === 0) {\n      return;\n    }\n\n    // recycle\n    const byId = new Map(columns.map((d, i) => [d.id, i]));\n    ids.forEach((node, key) => {\n      const index = byId.get(key);\n      if (index != null && index >= 0) {\n        this.recycleCell(node, index);\n      }\n    });\n  }\n\n  private updateShiftedStates() {\n    if (!this.context.columns.some((d) => d.frozen)) {\n      return;\n    }\n    const shifted = this.horizontallyShifted;\n    const clazz = CSS_CLASS_SHIFTED;\n    if (shifted) {\n      const headers = Array.from(this.header.querySelectorAll(`.${CSS_CLASS_FROZEN}:not(.${clazz})`));\n      const bodies = Array.from(this.body.querySelectorAll(`.${CSS_CLASS_FROZEN}:not(.${clazz})`));\n      for (const item of headers) {\n        item.classList.add(clazz);\n      }\n      for (const item of bodies) {\n        item.classList.add(clazz);\n      }\n    } else {\n      const headers = Array.from(this.header.querySelectorAll(`.${CSS_CLASS_FROZEN}.${clazz}`));\n      const bodies = Array.from(this.body.querySelectorAll(`.${CSS_CLASS_FROZEN}.${clazz}`));\n      for (const item of headers) {\n        item.classList.remove(clazz);\n      }\n      for (const item of bodies) {\n        item.classList.remove(clazz);\n      }\n    }\n  }\n\n  private syncFrozen(first: number) {\n    const { columns } = this.context;\n    const visible = this.visibleColumns;\n\n    if (!columns.some((d) => d.frozen)) {\n      return 0;\n    }\n    if (first === 0) {\n      if (visible.frozen.length > 0) {\n        this.removeFrozenColumns(visible.frozen, 0);\n        visible.frozen = [];\n      }\n      return 0;\n    }\n    const old = visible.frozen.length;\n    const { target, added, removed } = updateFrozen(visible.frozen, columns, first);\n    if (removed.length > 0) {\n      this.removeFrozenColumns(removed, old - removed.length);\n    }\n    if (added.length > 0) {\n      this.insertFrozenColumns(added, old - removed.length);\n    }\n    visible.frozen = target;\n    return target.length;\n  }\n\n  private onScrolledHorizontallyImpl(scrollLeft: number, clientWidth: number): EScrollResult {\n    const shiftingChanged = this.horizontallyShifted !== scrollLeft > 0;\n    this.horizontallyShifted = scrollLeft > 0;\n\n    const { column } = this.context;\n    const { first, last, firstRowPos } = range(\n      scrollLeft,\n      clientWidth,\n      column.defaultRowHeight,\n      column.exceptions,\n      column.numberOfRows\n    );\n\n    const visible = this.visibleColumns;\n    visible.forcedFirst = first;\n    visible.forcedLast = last;\n\n    if (first - visible.first >= 0 && last - visible.last <= 0) {\n      //nothing to do\n      if (shiftingChanged) {\n        this.updateShiftedStates();\n      }\n      return EScrollResult.NONE;\n    }\n\n    let r: EScrollResult = EScrollResult.SOME;\n\n    const frozenShift = this.syncFrozen(first);\n\n    if (first > visible.last || last < visible.first) {\n      //no overlap, clean and draw everything\n      //console.log(`ff added: ${last - first + 1} removed: ${visibleLast - visibleFirst + 1} ${first}:${last} ${offset}`);\n      //removeRows(visibleFirst, visibleLast);\n      this.removeAllColumns(false);\n      this.addColumnAtEnd(first, last);\n      r = EScrollResult.ALL;\n    } else if (first < visible.first) {\n      //some first rows missing and some last rows to much\n      //console.log(`up added: ${visibleFirst - first + 1} removed: ${visibleLast - last + 1} ${first}:${last} ${offset}`);\n      this.removeColumnFromEnd(last + 1, visible.last);\n      this.updateShiftedStates();\n      this.addColumnAtStart(first, visible.first - 1, frozenShift);\n      r = EScrollResult.SOME_TOP;\n    } else {\n      //console.log(`do added: ${last - visibleLast + 1} removed: ${first - visibleFirst + 1} ${first}:${last} ${offset}`);\n      //some last rows missing and some first rows to much\n      this.removeColumnFromStart(visible.first, first - 1, frozenShift);\n      this.updateShiftedStates();\n      this.addColumnAtEnd(visible.last + 1, last);\n      r = EScrollResult.SOME_BOTTOM;\n    }\n\n    visible.first = first;\n    visible.last = last;\n\n    this.updateColumnOffset(firstRowPos);\n\n    return r;\n  }\n}\n\n/**\n * @internal\n */\nexport default ACellAdapter;\n\nfunction verifyRow(row: HTMLElement, index: number, columns: IColumn[]) {\n  const cols = Array.from(row.children) as HTMLElement[];\n  //sort incrementally\n  if (cols.length <= 1) {\n    return;\n  }\n  const colObjs = cols.map((c) => columns.find((d) => d.id === c.dataset.id)!);\n  console.assert(\n    colObjs.every((d) => Boolean(d)),\n    'all columns must exist',\n    index\n  );\n  console.assert(\n    colObjs.every((d, i) => i === 0 || d.index >= colObjs[i - 1]!.index),\n    'all columns in ascending order',\n    index\n  );\n  console.assert(new Set(colObjs).size === colObjs.length, 'unique columns', colObjs);\n}\n","import { IAbortAblePromise, IAsyncUpdate } from './abortAble';\nimport { IAnimationContext } from './animation';\nimport { ARowRenderer, IRowRendererOptions } from './ARowRenderer';\nimport { addScroll } from './internal';\nimport { EScrollResult, IMixinClass } from './mixin';\nimport { GridStyleManager, IColumn, setTemplate } from './style';\nimport { cssClass } from './styles';\nimport ACellAdapter, { ICellAdapterRenderContext } from './table/internal/ACellAdapter';\n\nexport { isLoadingCell } from './ARowRenderer';\nexport declare type ICellRenderContext<T extends IColumn> = ICellAdapterRenderContext<T>;\n\n/**\n * a @see ARowRenderer which manages multiple columns per row\n */\nexport abstract class ACellRenderer<T extends IColumn> extends ARowRenderer {\n  protected readonly style: GridStyleManager;\n\n  private readonly cell: ACellAdapter<T>;\n\n  constructor(protected readonly root: HTMLElement, htmlId: string, options: Partial<IRowRendererOptions> = {}) {\n    super(setTemplate(root, htmlId).querySelector<HTMLElement>('main > article'), options);\n    root.classList.add(cssClass(), 'lineup-engine');\n\n    this.style = new GridStyleManager(this.root, htmlId);\n\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const that = this;\n\n    class LocalCell extends ACellAdapter<T> {\n      protected get context(): ICellAdapterRenderContext<T> {\n        return that.context;\n      }\n\n      protected get body() {\n        return that.body;\n      }\n\n      protected get lastScrollInfo() {\n        return that.lastScrollInfo;\n      }\n\n      protected createHeader(document: Document, column: T) {\n        return that.createHeader(document, column);\n      }\n\n      protected updateHeader(node: HTMLElement, column: T) {\n        return that.updateHeader(node, column);\n      }\n\n      protected createCell(document: Document, index: number, column: T) {\n        return that.createCell(document, index, column);\n      }\n\n      protected updateCell(node: HTMLElement, index: number, column: T) {\n        return that.updateCell(node, index, column);\n      }\n\n      protected updateColumnOffset(firstColumnPos: number) {\n        super.updateColumnOffset(firstColumnPos);\n        that.updateOffset(that.visibleFirstRowPos);\n      }\n\n      protected forEachRow(callback: (row: HTMLElement, rowIndex: number) => void) {\n        return that.forEachRow(callback);\n      }\n    }\n\n    this.cell = new LocalCell(this.header, this.style, this.style.id, options.mixins || []);\n  }\n\n  protected get idPrefix() {\n    return this.style.id;\n  }\n\n  /**\n   * get the header root element\n   * @returns {HTMLElement}\n   */\n  protected get header() {\n    return this.root.querySelector<HTMLElement>('header > article');\n  }\n\n  /**\n   * get the header scrolling element, i.e its parent\n   * @returns {HTMLElement}\n   */\n  protected get headerScroller() {\n    return this.root.getElementsByTagName('header')[0] as HTMLElement;\n  }\n\n  protected get visibleColumns() {\n    return this.cell.visibleColumns;\n  }\n\n  protected get visibleFirstColumnPos() {\n    return this.cell.visibleFirstColumnPos;\n  }\n\n  /**\n   * add another column mixin\n   * @param {IMixinClass} mixinClass mixing class to instantiate\n   * @param options optional options\n   */\n  protected addColumnMixin(mixinClass: IMixinClass, options?: any) {\n    this.cell.addColumnMixin(mixinClass, options);\n  }\n\n  /**\n   * initialized this renderer\n   */\n  protected init() {\n    this.cell.init();\n\n    const scroller = this.body.parentElement as HTMLElement;\n\n    let old = addScroll(scroller, this.options.async, (act) => {\n      if (\n        Math.abs(old.left - act.left) < this.options.minScrollDelta &&\n        Math.abs(old.width - act.width) < this.options.minScrollDelta\n      ) {\n        return;\n      }\n      const isGoingRight = act.left > old.left;\n      old = act;\n      this.onScrolledHorizontally(act.left, act.width, isGoingRight);\n    });\n\n    super.init();\n  }\n\n  destroy() {\n    super.destroy();\n    this.root.remove();\n  }\n\n  /**\n   * will be called when scrolled horizontally\n   * @param {number} scrollLeft\n   * @param {number} clientWidth\n   * @param {boolean} isGoingRight\n   * @returns {EScrollResult}\n   */\n  protected onScrolledHorizontally(scrollLeft: number, clientWidth: number, isGoingRight: boolean): EScrollResult {\n    return this.cell.onScrolledHorizontally(scrollLeft, clientWidth, isGoingRight);\n  }\n\n  /**\n   * the current render context, upon change `recreate` the whole table\n   * @returns {ICellRenderContext}\n   */\n  protected abstract get context(): ICellRenderContext<T>;\n\n  /**\n   * create a new header node for the given column\n   * @param {Document} document document to create nodes of\n   * @param {T} column the column to create the header for\n   * @returns {HTMLElement} the node representing the header\n   */\n  protected abstract createHeader(document: Document, column: T): HTMLElement | IAsyncUpdate<HTMLElement>;\n\n  /**\n   * updates the given header node with the given column\n   * @param {HTMLElement} node node to update\n   * @param {T} column the column to represents\n   * @returns {HTMLElement | void} an optional new replacement node for the header\n   */\n  protected abstract updateHeader(node: HTMLElement, column: T): HTMLElement | IAsyncUpdate<HTMLElement> | void;\n\n  /**\n   * create a new cell node fo the given row index and column\n   * @param {Document} document document the create nodes of\n   * @param {number} index the current row index\n   * @param {T} column the current column\n   * @returns {HTMLElement} the node representing the cell\n   */\n  protected abstract createCell(document: Document, index: number, column: T): HTMLElement | IAsyncUpdate<HTMLElement>;\n\n  /**\n   * updates the given cell node with the given row index and column\n   * @param {HTMLElement} node node to update\n   * @param {number} index row index to use\n   * @param {T} column column to use\n   * @returns {HTMLElement | void} an optional new replacement node for the header\n   */\n  protected abstract updateCell(\n    node: HTMLElement,\n    index: number,\n    column: T\n  ): HTMLElement | IAsyncUpdate<HTMLElement> | void;\n\n  /**\n   * trigger to update all headers\n   */\n  protected updateHeaders() {\n    this.cell.updateHeaders();\n  }\n\n  protected handleCellReady(item: HTMLElement, ready: IAbortAblePromise<void>, column = -1) {\n    return this.cell.handleCellReady(item, ready, column);\n  }\n\n  protected recycleCell(item: HTMLElement, column = -1) {\n    this.cell.recycleCell(item, column);\n  }\n\n  /**\n   * triggers to update all column widths\n   */\n  protected updateColumnWidths() {\n    const context = this.context;\n    this.style.update(\n      context.defaultRowHeight - context.padding(-1),\n      context.columns,\n      context.column.padding,\n      -this.cell.leftShift(),\n      this.idPrefix\n    );\n  }\n\n  protected updateSizer(firstRowPos: number) {\n    const ctx = this.context;\n    const totalHeight = ctx.totalHeight;\n    const totalWidth = ctx.column.totalHeight;\n\n    this.updateShifts(firstRowPos, this.cell.leftShift());\n    this.bodySizer.style.transform = `translate(${Math.max(0, totalWidth - 1).toFixed(0)}px, ${Math.max(\n      0,\n      totalHeight - 1\n    ).toFixed(0)}px)`;\n  }\n\n  protected updateShifts(top: number, left: number) {\n    this.body.style.transform = `translate(${left.toFixed(0)}px, ${top.toFixed(0)}px)`;\n  }\n\n  /**\n   * triggers to recreate the whole table\n   * @param {IAnimationContext} ctx optional animation context\n   */\n  protected recreate(ctx?: IAnimationContext) {\n    const scroller = this.bodyScroller;\n    const oldLeft = scroller.scrollLeft;\n    this.cell.recreate(oldLeft, scroller.clientWidth);\n\n    super.recreate(ctx);\n    // restore left\n    scroller.scrollLeft = oldLeft;\n  }\n\n  protected clearPool() {\n    super.clearPool();\n    this.cell.clearPool();\n  }\n\n  protected createRow(node: HTMLElement, rowIndex: number): void {\n    this.cell.createRow(node, rowIndex);\n  }\n\n  protected updateRow(node: HTMLElement, rowIndex: number): void {\n    this.cell.updateRow(node, rowIndex);\n  }\n}\n\nexport default ACellRenderer;\n","import { range } from '../logic';\nimport { EScrollResult, IMixin, IMixinAdapter } from './IMixin';\n\nexport interface IPrefetchRendererOptions {\n  /**\n   * number of rows to prefetch\n   * @default 20\n   */\n  readonly prefetchRows: number;\n  /**\n   * number of rows extra before cleaning them up\n   * @default 10\n   */\n  readonly cleanUpRows: number;\n  /**\n   * delay to trigger a prefetch or clean up\n   * @default 200ms\n   */\n  readonly delay: number;\n}\n\n/**\n * mixin that prefetches rows depending on the scrolling direction for faster rendering\n */\nexport default class PrefetchMixin implements IMixin {\n  private prefetchTimeout = -1;\n  private cleanupTimeout = -1;\n\n  private readonly options: IPrefetchRendererOptions = {\n    prefetchRows: 20,\n    cleanUpRows: 10,\n    delay: 200,\n  };\n\n  constructor(private readonly adapter: IMixinAdapter, options?: Partial<IPrefetchRendererOptions>) {\n    Object.assign(this.options, options);\n    return this;\n  }\n\n  private prefetchDown() {\n    this.prefetchTimeout = -1;\n    if (this.adapter.isScrollEventWaiting()) {\n      return;\n    }\n    const context = this.adapter.context;\n    const nextLast = Math.min(this.adapter.visible.forcedLast + this.options.prefetchRows, context.numberOfRows - 1);\n    // add some rows in advance\n    if (\n      this.adapter.visible.last === nextLast &&\n      this.adapter.visible.last >= this.adapter.visible.forcedLast + this.options.prefetchRows\n    ) {\n      return;\n    }\n\n    this.adapter.addAtBottom(this.adapter.visible.last + 1, nextLast);\n    //console.log('prefetch', visibleFirst, visibleLast + 1, '=>', nextLast, ranking.children.length);\n    this.adapter.visible.last = nextLast;\n  }\n\n  private prefetchUp() {\n    this.prefetchTimeout = -1;\n    if (\n      this.adapter.isScrollEventWaiting() ||\n      this.adapter.visible.first <= this.adapter.visible.forcedFirst - this.options.prefetchRows!\n    ) {\n      return;\n    }\n    const context = this.adapter.context;\n    const fakeOffset = Math.max(this.adapter.scrollOffset - this.options.prefetchRows! * context.defaultRowHeight, 0);\n    const height = this.adapter.scrollTotal;\n    const { first, firstRowPos } = range(\n      fakeOffset,\n      height,\n      context.defaultRowHeight,\n      context.exceptions,\n      context.numberOfRows\n    );\n\n    if (first === this.adapter.visible.first) {\n      return;\n    }\n\n    const frozenShift = this.adapter.syncFrozen ? this.adapter.syncFrozen(first) : 0;\n\n    this.adapter.addAtBeginning(first, this.adapter.visible.first - 1, frozenShift);\n    //console.log('prefetch up ', visibleFirst, '=>', first, visibleLast, ranking.children.length);\n    this.adapter.visible.first = first;\n\n    this.adapter.updateOffset(firstRowPos);\n  }\n\n  private triggerPrefetch(isGoingDown: boolean) {\n    if (this.prefetchTimeout >= 0) {\n      clearTimeout(this.prefetchTimeout);\n    }\n\n    const prefetchDownPossible =\n      this.adapter.visible.last < this.adapter.visible.forcedLast + this.options.prefetchRows;\n    const prefetchUpPossible =\n      this.adapter.visible.first > this.adapter.visible.forcedFirst - this.options.prefetchRows;\n\n    const isLast = this.adapter.visible.last === this.adapter.context.numberOfRows;\n    const isFirst = this.adapter.visible.first === 0;\n\n    if ((isGoingDown && !prefetchDownPossible && !isLast) || (!isGoingDown && !prefetchUpPossible && !isFirst)) {\n      return;\n    }\n\n    // go down if we are already at the top, too\n    const op = isGoingDown || isFirst ? this.prefetchDown.bind(this) : this.prefetchUp.bind(this);\n\n    // eslint-disable-next-line no-restricted-globals\n    this.prefetchTimeout = self.setTimeout(op, this.options.delay);\n  }\n\n  private cleanUpTop(first: number) {\n    this.cleanupTimeout = -1;\n    if (this.adapter.isScrollEventWaiting()) {\n      return;\n    }\n    const newFirst = Math.max(0, first - this.options.cleanUpRows);\n\n    if (newFirst <= this.adapter.visible.first) {\n      return;\n    }\n\n    //console.log('cleanup top');\n    const frozenShift = this.adapter.syncFrozen ? this.adapter.syncFrozen(newFirst) : 0;\n\n    this.adapter.removeFromBeginning(this.adapter.visible.first, newFirst - 1, frozenShift);\n    const context = this.adapter.context;\n    //console.log('cleanup up ', visibleFirst, '=>', newFirst, visibleLast, ranking.children.length);\n    let shift = (newFirst - this.adapter.visible.first) * context.defaultRowHeight;\n    if (context.exceptions.length > 0) {\n      for (let i = this.adapter.visible.first; i < newFirst; ++i) {\n        if (context.exceptionsLookup.has(i)) {\n          shift += context.exceptionsLookup.get(i)! - context.defaultRowHeight;\n        }\n      }\n    }\n    this.adapter.visible.first = newFirst;\n    this.adapter.updateOffset(this.adapter.visibleFirstRowPos + shift);\n\n    this.prefetchDown();\n  }\n\n  private cleanUpBottom(last: number) {\n    this.cleanupTimeout = -1;\n    const newLast = last + this.options.cleanUpRows;\n    if (this.adapter.visible.last <= newLast) {\n      return;\n    }\n    //console.log('cleanup bottom');\n    this.adapter.removeFromBottom(newLast + 1, this.adapter.visible.last);\n    this.adapter.visible.last = newLast;\n\n    this.prefetchUp();\n  }\n\n  private triggerCleanUp(first: number, last: number, isGoingDown: boolean) {\n    if (this.cleanupTimeout >= 0) {\n      clearTimeout(this.cleanupTimeout);\n    }\n    if (\n      (isGoingDown && first - this.options.cleanUpRows <= this.adapter.visible.first) ||\n      (!isGoingDown && this.adapter.visible.last <= last + this.options.cleanUpRows)\n    ) {\n      return;\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    this.cleanupTimeout = self.setTimeout(\n      isGoingDown ? this.cleanUpTop.bind(this) : this.cleanUpBottom.bind(this),\n      this.options.delay,\n      isGoingDown ? first : last\n    );\n  }\n\n  onScrolled(isGoingDown: boolean, scrollResult: EScrollResult) {\n    if (this.adapter.isScrollEventWaiting()) {\n      return;\n    }\n    if (scrollResult !== EScrollResult.ALL && this.options.cleanUpRows > 0) {\n      this.triggerCleanUp(this.adapter.visible.forcedFirst, this.adapter.visible.forcedLast, isGoingDown);\n    }\n    if (scrollResult !== EScrollResult.NONE && this.options.prefetchRows > 0) {\n      this.triggerPrefetch(isGoingDown);\n    }\n  }\n}\n","import { IAbortAblePromise, IAsyncUpdate } from '../abortAble';\nimport { IAnimationContext } from '../animation';\nimport ARowRenderer, { IRowRendererOptions, setTransform } from '../ARowRenderer';\nimport { EScrollResult, IMixinClass } from '../mixin';\nimport { IColumn } from '../style';\nimport GridStyleManager from '../style/GridStyleManager';\nimport { CSS_CLASS_HIDDEN, CSS_CLASS_LOADING } from '../styles';\nimport ACellAdapter, { ICellAdapterRenderContext } from './internal/ACellAdapter';\nimport { ITableSection } from './MultiTableRowRenderer';\n\nexport declare type ITableCellRenderContext<T extends IColumn> = ICellAdapterRenderContext<T>;\n\n/**\n * base class for a cell renderer as table section\n */\nexport abstract class ACellTableSection<T extends IColumn> extends ARowRenderer implements ITableSection {\n  private readonly cell: ACellAdapter<T>;\n\n  constructor(\n    public readonly header: HTMLElement,\n    public readonly body: HTMLElement,\n    protected readonly tableId: string,\n    protected readonly style: GridStyleManager,\n    options: Partial<IRowRendererOptions> = {}\n  ) {\n    super(body, options);\n\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const that = this;\n\n    class LocalCell extends ACellAdapter<T> {\n      protected get context(): ICellAdapterRenderContext<T> {\n        return that.context;\n      }\n\n      protected get body() {\n        return that.body;\n      }\n\n      protected get lastScrollInfo() {\n        return that.lastScrollInfo;\n      }\n\n      protected createHeader(document: Document, column: T) {\n        return that.createHeader(document, column);\n      }\n\n      protected updateHeader(node: HTMLElement, column: T) {\n        return that.updateHeader(node, column);\n      }\n\n      protected createCell(document: Document, index: number, column: T) {\n        return that.createCell(document, index, column);\n      }\n\n      protected updateColumnOffset(firstColumnPos: number) {\n        super.updateColumnOffset(firstColumnPos);\n        that.updateOffset(that.visibleFirstRowPos);\n      }\n\n      protected updateCell(node: HTMLElement, index: number, column: T) {\n        return that.updateCell(node, index, column);\n      }\n\n      protected forEachRow(callback: (row: HTMLElement, rowIndex: number) => void) {\n        return that.forEachRow(callback);\n      }\n    }\n\n    this.cell = new LocalCell(this.header, this.style, tableId, options.mixins || []);\n  }\n\n  protected addColumnMixin(mixinClass: IMixinClass, options?: any) {\n    this.cell.addColumnMixin(mixinClass, options);\n  }\n\n  protected get idPrefix() {\n    return this.tableId;\n  }\n\n  abstract get id(): string;\n\n  get width() {\n    return this.context.column.totalHeight;\n  }\n\n  protected get visibleColumns() {\n    return this.cell.visibleColumns;\n  }\n\n  protected get visibleFirstColumnPos() {\n    return this.cell.visibleFirstColumnPos;\n  }\n\n  get height() {\n    return this.context.totalHeight;\n  }\n\n  get hidden() {\n    return this.header.classList.contains(CSS_CLASS_LOADING);\n  }\n\n  set hidden(value: boolean) {\n    const old = this.hidden;\n    if (old === value) {\n      return;\n    }\n    this.header.classList.toggle(CSS_CLASS_LOADING, value);\n    this.body.classList.toggle(CSS_CLASS_LOADING, value);\n    this.header.classList.toggle(CSS_CLASS_HIDDEN, value);\n    this.body.classList.toggle(CSS_CLASS_HIDDEN, value);\n    this.onVisibilityChanged(!value);\n  }\n\n  protected updateSizer(firstRowPos: number) {\n    this.updateShifts(firstRowPos, this.cell.leftShift());\n    // no sizer update since centrally managed\n  }\n\n  protected updateShifts(top: number, _left: number) {\n    setTransform(this.body, 0 /*left.toFixed(0)*/, top.toFixed(0));\n  }\n\n  /**\n   * hook when the visibility changes\n   * @param {boolean} _visible current visibility\n   */\n  protected onVisibilityChanged(_visible: boolean) {\n    // hook\n  }\n\n  hide() {\n    this.hidden = true;\n  }\n\n  show(scrollLeft: number, clientWidth: number, isGoingRight: boolean) {\n    const wasHidden = this.hidden;\n    this.hidden = false;\n    if (wasHidden) {\n      // full update\n      this.revalidate();\n    } else {\n      this.onScrolledHorizontally(scrollLeft, clientWidth, isGoingRight);\n    }\n  }\n\n  init() {\n    this.hide(); // hide by default\n    this.cell.init();\n    super.init();\n  }\n\n  destroy() {\n    super.destroy();\n    this.header.remove();\n    this.style.remove(this.tableId);\n  }\n\n  protected onScrolledVertically(scrollTop: number, clientHeight: number, isGoingDown: boolean): EScrollResult {\n    if (this.hidden) {\n      return EScrollResult.NONE;\n    }\n    return super.onScrolledVertically(scrollTop, clientHeight, isGoingDown);\n  }\n\n  protected onScrolledHorizontally(scrollLeft: number, clientWidth: number, isGoingRight: boolean) {\n    const r = this.cell.onScrolledHorizontally(scrollLeft, clientWidth, isGoingRight);\n    this.updateSizer(this.visibleFirstRowPos);\n    return r;\n  }\n\n  /**\n   * the current render context, upon change `recreate` the whole table\n   * @returns {ITableCellRenderContext}\n   */\n  protected abstract get context(): ITableCellRenderContext<T>;\n\n  /**\n   * create a new header node for the given column\n   * @param {Document} document document to create nodes of\n   * @param {T} column the column to create the header for\n   * @returns {HTMLElement} the node representing the header\n   */\n  protected abstract createHeader(document: Document, column: T): HTMLElement | IAsyncUpdate<HTMLElement>;\n\n  /**\n   * updates the given header node with the given column\n   * @param {HTMLElement} node node to update\n   * @param {T} column the column to represents\n   * @returns {HTMLElement | void} an optional new replacement node for the header\n   */\n  protected abstract updateHeader(node: HTMLElement, column: T): HTMLElement | IAsyncUpdate<HTMLElement> | void;\n\n  /**\n   * create a new cell node fo the given row index and column\n   * @param {Document} document document the create nodes of\n   * @param {number} index the current row index\n   * @param {T} column the current column\n   * @returns {HTMLElement} the node representing the cell\n   */\n  protected abstract createCell(document: Document, index: number, column: T): HTMLElement | IAsyncUpdate<HTMLElement>;\n\n  /**\n   * updates the given cell node with the given row index and column\n   * @param {HTMLElement} node node to update\n   * @param {number} index row index to use\n   * @param {T} column column to use\n   * @returns {HTMLElement | void} an optional new replacement node for the header\n   */\n  protected abstract updateCell(\n    node: HTMLElement,\n    index: number,\n    column: T\n  ): HTMLElement | IAsyncUpdate<HTMLElement> | void;\n\n  /**\n   * triggers updating the header\n   */\n  protected updateHeaders() {\n    this.cell.updateHeaders();\n  }\n\n  protected handleCellReady(item: HTMLElement, ready: IAbortAblePromise<void>, column = -1) {\n    return this.cell.handleCellReady(item, ready, column);\n  }\n\n  protected recycleCell(item: HTMLElement, column = -1) {\n    this.cell.recycleCell(item, column);\n  }\n\n  /**\n   * trigger an update all all column widths\n   */\n  protected updateColumnWidths() {\n    const context = this.context;\n    this.style.update(\n      context.defaultRowHeight - context.padding(-1),\n      context.columns,\n      context.column.padding,\n      -this.cell.leftShift(),\n      this.tableId\n    );\n  }\n\n  protected recreate(ctx?: IAnimationContext) {\n    const scroller = this.bodyScroller;\n    const oldLeft = scroller.scrollLeft;\n    this.cell.recreate(oldLeft, scroller.clientWidth);\n\n    super.recreate(ctx);\n    // restore left\n    scroller.scrollLeft = oldLeft;\n  }\n\n  protected clearPool() {\n    super.clearPool();\n    this.cell.clearPool();\n  }\n\n  protected createRow(node: HTMLElement, rowIndex: number): void {\n    this.cell.createRow(node, rowIndex);\n    node.classList.add(this.style.cssClasses.tr);\n  }\n\n  protected updateRow(node: HTMLElement, rowIndex: number): void {\n    this.cell.updateRow(node, rowIndex);\n  }\n}\n\nexport default ACellTableSection;\n","import { setTransform } from '../ARowRenderer';\nimport { addScroll, defaultMode, IDelayedMode } from '../internal';\nimport { GridStyleManager, tableCSSClasses, tableIds } from '../style';\nimport {\n  cssClass,\n  CSS_CLASS_BODY,\n  CSS_CLASS_FOOTER,\n  CSS_CLASS_HEADER,\n  CSS_CLASS_MULTI,\n  CSS_CLASS_TBODY,\n  CSS_CLASS_THEAD,\n} from '../styles';\n\n/**\n * basic interface of a table section\n */\nexport interface ITableSection {\n  readonly id: string;\n  readonly width: number;\n  readonly height: number;\n  readonly header: HTMLElement;\n  readonly body: HTMLElement;\n\n  init(): void;\n\n  /**\n   * show the section\n   * @param {number} left visible left margin\n   * @param {number} width visible width\n   * @param {boolean} isGoingRight whether it was a shift to the right\n   */\n  show(left: number, width: number, isGoingRight: boolean): void;\n\n  hide(): void;\n\n  destroy(): void;\n}\n\nexport interface ITableFactory<T extends ITableSection> {\n  (header: HTMLElement, body: HTMLElement, tableId: string, style: GridStyleManager, ...extras: any[]): T;\n}\n\nexport interface ISeparatorFactory<T extends ITableSection> {\n  (header: HTMLElement, body: HTMLElement, style: GridStyleManager, ...extras: any[]): T;\n}\n\nexport interface IMultiTableRowRendererOptions {\n  /**\n   * column padding to use between columns\n   * @default 0\n   */\n  columnPadding: number;\n  /**\n   * async update on scrolling\n   * animation -> use requestAnimationFrame\n   * sync -> execute within scroll listener\n   * {number} -> execute within this delay using setTimeout\n   * @default is chrome ? animation else 0\n   */\n  async: IDelayedMode;\n\n  /**\n   * minimal number of pixel the scrollbars has to move\n   * @default 30\n   */\n  minScrollDelta: number;\n}\n\n/**\n * manager of multiple columns separated by separators each an own row renderer\n */\nexport default class MultiTableRowRenderer {\n  readonly style: GridStyleManager;\n  private tableId = 0;\n\n  private readonly sections: ITableSection[] = [];\n\n  private readonly options: Readonly<IMultiTableRowRendererOptions> = {\n    columnPadding: 0,\n    async: defaultMode,\n    minScrollDelta: 30,\n  };\n\n  constructor(public readonly node: HTMLElement, htmlId: string, options: Partial<IMultiTableRowRendererOptions> = {}) {\n    Object.assign(this.options, options);\n    htmlId = htmlId.startsWith('#') ? htmlId.slice(1) : htmlId;\n    node.id = htmlId;\n    node.innerHTML = `<header id=\"header-${htmlId}\" class=\"${CSS_CLASS_HEADER} ${cssClass(`header-${htmlId}`)}\">\n      <footer class=\"${CSS_CLASS_FOOTER} ${cssClass(`footer-${htmlId}`)}\">&nbsp;</footer>\n    </header>\n    <main id=\"body-${htmlId}\" class=\"${CSS_CLASS_BODY} ${cssClass(`body-${htmlId}`)}\">\n      <footer class=\"${CSS_CLASS_FOOTER}\">&nbsp;</footer>\n    </main>`;\n    node.classList.add(cssClass(), CSS_CLASS_MULTI, 'lineup-engine');\n\n    this.style = new GridStyleManager(this.node, htmlId);\n\n    let old = addScroll(this.main, this.options.async, (act) => {\n      if (\n        Math.abs(old.left - act.left) < this.options.minScrollDelta &&\n        Math.abs(old.width - act.width) < this.options.minScrollDelta\n      ) {\n        return;\n      }\n      const isGoingRight = act.left > old.left;\n      old = act;\n      this.onScrolledHorizontally(act.left, act.width, isGoingRight);\n    });\n  }\n\n  private update() {\n    this.onScrolledHorizontally(this.main.scrollLeft, this.main.clientWidth, false);\n\n    let offset = 0;\n    this.sections.forEach((s) => {\n      s.body.style.left = s.header.style.left = `${offset}px`;\n      offset += s.width + this.options.columnPadding;\n    });\n  }\n\n  private onScrolledHorizontally(scrollLeft: number, clientWidth: number, isGoingRight: boolean) {\n    let offset = 0;\n    const scrollEnd = scrollLeft + clientWidth;\n    this.sections.forEach((s) => {\n      const end = offset + s.width;\n      if (end < scrollLeft || offset > scrollEnd) {\n        s.hide();\n      } else {\n        s.show(Math.max(0, scrollLeft - offset), Math.min(scrollEnd - offset, s.width), isGoingRight);\n      }\n\n      offset = end + this.options.columnPadding;\n    });\n\n    this.updateOffset();\n  }\n\n  private updateOffset() {\n    const headerFooter = this.header.getElementsByTagName('footer')[0]!;\n    const bodyFooter = this.main.getElementsByTagName('footer')[0]!;\n\n    const maxHeight = this.sections.reduce((acc, d) => Math.max(acc, d.height), 0);\n    const total = this.sections.reduce((a, c) => a + c.width + this.options.columnPadding, 0);\n\n    setTransform(headerFooter, total, 0);\n    setTransform(bodyFooter, total, maxHeight);\n  }\n\n  destroy() {\n    this.sections.forEach((d) => d.destroy());\n    this.node.remove();\n  }\n\n  private get doc() {\n    return this.node.ownerDocument!;\n  }\n\n  private get header() {\n    return this.node.getElementsByTagName('header')[0] as HTMLElement;\n  }\n\n  private get main() {\n    return this.node.getElementsByTagName('main')[0] as HTMLElement;\n  }\n\n  /**\n   * push another table to this instance\n   * @param {ITableFactory<T extends ITableSection>} factory factory for the table\n   * @param extras additional arguments to provide for the factory\n   * @returns {T} the table instance\n   */\n  pushTable<T extends ITableSection>(factory: ITableFactory<T>, ...extras: any[]) {\n    const header = this.doc.createElement('article');\n    const body = this.doc.createElement('article');\n\n    const tableId = `${this.node.id}T${this.tableId++}`;\n    const ids = tableIds(tableId);\n    const cssClasses = tableCSSClasses(tableId);\n\n    header.id = ids.thead;\n    header.classList.add(CSS_CLASS_THEAD, cssClasses.thead);\n    body.id = ids.tbody;\n    body.classList.add(CSS_CLASS_TBODY, cssClasses.tbody);\n    this.header.insertBefore(header, this.header.lastElementChild); //before the footer\n    this.main.appendChild(body);\n\n    const table = factory.apply(\n      this,\n      [header, body, tableId, this.style].concat(extras) as [\n        HTMLElement,\n        HTMLElement,\n        string,\n        GridStyleManager,\n        ...any[]\n      ]\n    );\n    table.init();\n    this.sections.push(table);\n    this.update();\n    return table;\n  }\n\n  /**\n   * push another separator to the manager\n   * @param {ISeparatorFactory<T extends ITableSection>} factory the factory to create the separator\n   * @param extras optional additional arguments\n   * @returns {T} the new created separator\n   */\n  pushSeparator<T extends ITableSection>(factory: ISeparatorFactory<T>, ...extras: any[]) {\n    const header = this.doc.createElement('section');\n    const body = this.doc.createElement('section');\n    header.classList.add(cssClass('header-separator'));\n    body.classList.add(cssClass('separator'));\n    this.header.insertBefore(header, this.header.lastElementChild); //before the footer\n    this.main.appendChild(body);\n\n    const separator = factory.apply(\n      this,\n      [header, body, this.style].concat(extras) as [HTMLElement, HTMLElement, GridStyleManager, ...any[]]\n    );\n    separator.init();\n    this.sections.push(separator);\n    this.update();\n    return separator;\n  }\n\n  /**\n   * removes a given table section\n   * @param {ITableSection} section section to remove\n   * @returns {boolean} successful flag\n   */\n  remove(section: ITableSection) {\n    const index = this.sections.indexOf(section);\n    if (index < 0) {\n      return false;\n    }\n    this.sections.splice(index, 1);\n    section.destroy();\n    this.update();\n    return true;\n  }\n\n  clear() {\n    this.sections.splice(0, this.sections.length).forEach((s) => s.destroy());\n    this.update();\n  }\n\n  /**\n   * triggers and update because of a change in width of one or more table sections\n   */\n  widthChanged() {\n    this.update();\n  }\n}\n","import './style.scss';\nexport * from '.';\n\ndeclare const __VERSION__: string;\ndeclare const __BUILD_ID__: string;\n\nexport const version = __VERSION__;\nexport const buildId = __BUILD_ID__;\n"],"sourceRoot":""}