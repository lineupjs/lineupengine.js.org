{"version":3,"sources":["webpack://lineupengine/webpack/universalModuleDefinition","webpack://lineupengine/webpack/bootstrap","webpack://lineupengine/./src/abortAble.ts","webpack://lineupengine/./node_modules/tslib/tslib.es6.js","webpack://lineupengine/./src/animation/KeyFinder.ts","webpack://lineupengine/./src/animation/index.ts","webpack://lineupengine/./src/internal/scroll.ts","webpack://lineupengine/./src/internal/index.ts","webpack://lineupengine/./src/logic.ts","webpack://lineupengine/./src/mixin/IMixin.ts","webpack://lineupengine/./src/styles/index.ts","webpack://lineupengine/./src/ARowRenderer.ts","webpack://lineupengine/./src/style/StyleManager.ts","webpack://lineupengine/./src/style/GridStyleManager.ts","webpack://lineupengine/./src/table/internal/ACellAdapter.ts","webpack://lineupengine/./src/ACellRenderer.ts","webpack://lineupengine/./src/mixin/PrefetchMixin.ts","webpack://lineupengine/./src/table/ACellTableSection.ts","webpack://lineupengine/./src/table/MultiTableRowRenderer.ts","webpack://lineupengine/./src/bundle.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","isPromiseLike","then","ABORTED","thenFactory","loader","isAborted","abort","onfulfilled","_onrejected","loaded","loadedOrAborted","res","abortAble","aborted","aborter","Promise","resolve","race","abortAbleAll","values","all","_i","values_1","length","v","isAbortAble","isAsyncUpdate","update","ready","abortAbleResolveNow","extendStatics","b","setPrototypeOf","__proto__","Array","__extends","__","this","constructor","EAnimationMode","KeyFinder","context","_this","cache","lastFilled","key2index","Map","exceptions","forEach","e","index","y","set","findValidStart","before","undefined","posByKey","has","pos","fillCacheTillKey","defaultRowHeight","cached","start","fillCache","heightOf","first","last","offset","callback","lookup","exceptionsLookup","exceptionHeightOf","returnDefault","padding","target","numberOfRows","positions","NO_CHANGE_DELTA","noAnimationChange","_a","previousHeight","currentHeight","previous","nodeY","current","prev","height","curr","UPDATE","Math","abs","defaultPhases","delay","apply","node","dataset","animation","toLowerCase","style","transform","SHOW","opacity","HIDE","UPDATE_REMOVE","defaultMode","ScrollHandler","sync","handler","timer","numbers","handleAnimationImpl","handle","addEventListener","handleAnimation","handleTimeouts","passive","asInfo","info","left","top","requestAnimationFrame","size","self","setTimeout","scrollLeft","scrollTop","width","clientWidth","clientHeight","push","remove","concat","from","some","indexOf","splice","isWaiting","addScroll","scroller","__le_scroller__","isScrollEventWaiting","clear","lastChild","removeChild","EScrollResult","RowHeightException","uniformContext","rowHeight","rowPadding","keys","totalHeight","nonUniformContext","rowHeights","NaN","isNaN","sorted","sort","a","mostFrequent","mostFrequentValue","acc","between","randomContext","minRowHeight","maxRowHeight","ratio","seed","Date","now","actSeed","random","x","sin","floor","round","range","heightExceptions","firstRowPos","endPos","y2","offset2","indexShift","min","max","calc","offsetShift","isGuess","shifted2","console","assert","assign","lastPos","rest","visible","closest","heightExceptions_1","item","firstException","lastException","ceil","frozenDelta","clength","tlength","added","removed","common","slice","updateFrozen","old","columns","oldLast","pop","frozen","PREFIX","cssClass","suffix","CSS_CLASS_LOADING","CSS_CLASS_FROZEN","CSS_CLASS_HIDDEN","CSS_CLASS_MULTI","CSS_CLASS_EVEN","CSS_CLASS_SHIFTED","CSS_CLASS_SCROLLBAR_TESTER","CSS_CLASS_HEADER","CSS_CLASS_BODY","CSS_CLASS_FOOTER","CSS_CLASS_THEAD","CSS_CLASS_TBODY","CSS_CLASS_TR","CSS_CLASS_TH","CSS_CLASS_TD","CSS_CLASS_SCROLLING","CSS_CLASS_ROW_ANIMATION","isLoadingCell","classList","contains","ARowRenderer_ARowRenderer","ARowRenderer","body","options","pool","loadingPool","loading","WeakMap","forcedFirst","forcedLast","visibleFirstRowPos","scrollListener","lastScrollInfo","abortAnimation","async","minScrollDelta","mixins","scrollingHint","batchSize","striped","viewportOversize","adapter","createAdapter","map","mixinClass","fragment","ownerDocument","createDocumentFragment","addMixin","addAtBeginning","addAtBottom","removeFromBeginning","removeFromBottom","updateOffset","bodyScroller","defineProperties","scrollOffset","scrollTotal","parentElement","parent","sizer","children","find","tagName","createElement","add","idPrefix","insertBefore","firstChild","init","act","isGoingDown","onScrolledVertically","recreate","destroy","cleanUp","select","result","updateRow","createRow","String","toggle","selectProxy","proxy","recycle","real","replaceChild","delete","_b","ex","removeAll","perform","torecycle","lastElementChild","items","appendChild","forEachRow","inplace","rows","row","to","fromBeginning","nextSibling","previousSibling","updateSizer","setTransform","toFixed","bodySizer","ctx","recreateAnimated","recreatePure","clearPool","animation_KeyFinder","previousKey","cur","currentKey","next","rows_1","UPDATE_CREATE","nodeYCurrentHeight","nextPos","prevHeight","animate","phases","previousFinder","currentFinder","currentTimer","actPhase","executePhase","phase","anim","run","offsetTop","startsWith","endsWith","dummyAnimation","filter","Set","split","clearTimeout","revalidate","shift","shiftTop","scrollResult","onScrolledImpl","onScrolled","shiftLast","currentDelta","total","shiftFirst","currentFirstRow","NONE","toadd","SOME","toaddBottom","ALL","SOME_TOP","SOME_BOTTOM","manipulate","toRecycle","toAdd","bottom","toRecycle_1","src_ARowRenderer","elem","text","anyelem","__transform__","assignStyles","source","plain","hyphen","replace","setProperty","StyleManager","rules","testVerifyTimeout","createTextNode","verifySheet","sheet","cssRules","every","selectorText","selector","warn","deleteRule","rule","insertRule","cssRule","getSheetRule","addRule","id","updateRule","findIndex","stored","setTemplate","innerHTML","tableIds","tableId","thead","tbody","tr","th","td","tableCSSClasses","ids","_super","GridStyleManager","cssClasses","headerScroller","getElementsByTagName","insertAdjacentHTML","offsetWidth","offsetHeight","measureScrollbar","borderRight","newValue","frozenShift","unit","selectors","reduce","updateColumns","prefix","ruleNames","cssSelectors","thStyles","tdStyles","style_StyleManager","internal_ACellAdapter","ACellAdapter","header","mixinClasses","arguments","cellPool","visibleColumns","visibleFirstColumnPos","horizontallyShifted","columnAdapter","createColumnAdapter","columnMixins","columnFragment","leftShift","column","addColumnMixin","addColumnAtStart","addColumnAtEnd","removeColumnFromStart","removeColumnFromEnd","updateColumnOffset","syncFrozen","onScrolledHorizontally","isGoingRight","onScrolledHorizontallyImpl","removeCellFromStart","firstElementChild","recycleCell","removeCellFromEnd","removeFrozenCells","columnIndices","columnIndices_1","columnIndex","removeFrozenColumns","removeAllColumns","includingFrozen","removeAllCells","arr","frozen_1","frozen_2","selectProxyCell","columnObj","pooled","updateCell","createCell","updateShiftedState","handleCellReady","selectCell","col","rowIndex","addCellAtStart","cell","insertFrozenCells","columnIndices_2","insertFrozenColumns","addCellAtEnd","verifyRows","verifyRow","updateHeaders","base","updateHeader","fragment_1","document_1","ids_1","existing","createHeader","firstColumnPos","changed","childElementCount","id_1","mergeColumns","updateImpl","cell_1","byId","updateShiftedStates","shifted","clazz","headers","querySelectorAll","bodies","headers_1","bodies_1","headers_2","_c","bodies_2","shiftingChanged","cols","colObjs","Boolean","ACellRenderer_ACellRenderer","ACellRenderer","htmlId","querySelector","style_GridStyleManager","that","LocalCell","document","updateColumnWidths","totalWidth","updateShifts","oldLeft","PrefetchMixin","prefetchTimeout","cleanupTimeout","prefetchRows","cleanUpRows","prefetchDown","nextLast","prefetchUp","triggerPrefetch","prefetchDownPossible","prefetchUpPossible","isLast","isFirst","op","cleanUpTop","newFirst","cleanUpBottom","newLast","triggerCleanUp","ACellTableSection_ACellTableSection","ACellTableSection","hidden","onVisibilityChanged","_left","_visible","hide","show","wasHidden","MultiTableRowRenderer","sections","columnPadding","main","scrollEnd","end","headerFooter","bodyFooter","maxHeight","pushTable","extras","doc","table","pushSeparator","separator","section","widthChanged","__webpack_exports__","version","buildId","mixin_PrefetchMixin","table_MultiTableRowRenderer"],"mappings":"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","file":"lineupengine.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"lineupengine\"] = factory();\n\telse\n\t\troot[\"lineupengine\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","export function isPromiseLike(p: PromiseLike<any> | any): p is PromiseLike<any> {\n  return p != null && p && typeof p.then === 'function';\n}\n\nexport interface IAbortAblePromiseBase<T> extends PromiseLike<T> {\n  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): IAbortAblePromiseBase<TResult1 | TResult2>;\n  abort(): void;\n  isAborted(): boolean;\n}\n\nexport declare type IAbortAblePromise<T> = IAbortAblePromiseBase<T | symbol>;\nexport declare type IAAP<T> = IAbortAblePromise<T>;\n\n\nexport interface IAsyncUpdate<T> {\n  item: T;\n  ready: IAbortAblePromise<void>;\n}\n\nexport const ABORTED = Symbol('aborted');\n\nfunction thenFactory<T>(loader: PromiseLike<T | symbol>, isAborted: () => boolean, abort: () => void) {\n  function then<TResult1 = T | symbol, TResult2 = never>(onfulfilled?: ((value: T | symbol) => TResult1 | PromiseLike<TResult1>) | undefined | null, _onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): IAbortAblePromiseBase<TResult1 | TResult2> {\n    const fullfiller = loader.then((loaded) => {\n      const loadedOrAborted = isAborted() ? ABORTED : loaded;\n      const res = onfulfilled ? onfulfilled(loadedOrAborted) : <any>loadedOrAborted;\n\n      if (isPromiseLike(res)) {\n        return res.then((r) => {\n          return isAborted() ? ABORTED : r;\n        });\n      }\n      return isAborted() ? ABORTED : res;\n    });\n    return {\n      then: thenFactory(fullfiller, isAborted, abort),\n      abort,\n      isAborted\n    };\n  }\n  return then;\n}\n\n/**\n * abort able Promise wrapper, returns a promise which can be aborted, and trying to avoid executing therefore the wrapped promise\n * @param {Promise<T>} loader\n * @returns {any}\n */\nexport default function abortAble<T>(loader: PromiseLike<T>): IAAP<T> {\n  let aborted: ((v: symbol) => void) | null = null;\n  const isAborted = () => aborted === null;\n  const aborter = new Promise<symbol>((resolve) => aborted = resolve);\n  const abort = () => {\n    if (aborted == null) {\n      return;\n    }\n    aborted(ABORTED);\n    aborted = null;\n  };\n\n  const race = Promise.race<T | symbol>([aborter, loader]);\n\n  return {\n    then: thenFactory(race, isAborted, abort),\n    abort,\n    isAborted\n  };\n}\n\nexport function abortAbleAll<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(values: [T1 | IAAP<T1>, T2 | IAAP<T2>, T3 | IAAP<T3>, T4 | IAAP<T4>, T5 | IAAP<T5>, T6 | IAAP<T6>, T7 | IAAP<T7>, T8 | IAAP<T8>, T9 | IAAP<T9>, T10 | IAAP<T10>]): IAAP<[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10]>;\nexport function abortAbleAll<T1, T2, T3, T4, T5, T6, T7, T8, T9>(values: [T1 | IAAP<T1>, T2 | IAAP<T2>, T3 | IAAP<T3>, T4 | IAAP<T4>, T5 | IAAP<T5>, T6 | IAAP<T6>, T7 | IAAP<T7>, T8 | IAAP<T8>, T9 | IAAP<T9>]): IAAP<[T1, T2, T3, T4, T5, T6, T7, T8, T9]>;\nexport function abortAbleAll<T1, T2, T3, T4, T5, T6, T7, T8>(values: [T1 | IAAP<T1>, T2 | IAAP<T2>, T3 | IAAP<T3>, T4 | IAAP<T4>, T5 | IAAP<T5>, T6 | IAAP<T6>, T7 | IAAP<T7>, T8 | IAAP<T8>]): IAAP<[T1, T2, T3, T4, T5, T6, T7, T8]>;\nexport function abortAbleAll<T1, T2, T3, T4, T5, T6, T7>(values: [T1 | IAAP<T1>, T2 | IAAP<T2>, T3 | IAAP<T3>, T4 | IAAP<T4>, T5 | IAAP<T5>, T6 | IAAP<T6>, T7 | IAAP<T7>]): IAAP<[T1, T2, T3, T4, T5, T6, T7]>;\nexport function abortAbleAll<T1, T2, T3, T4, T5, T6>(values: [T1 | IAAP<T1>, T2 | IAAP<T2>, T3 | IAAP<T3>, T4 | IAAP<T4>, T5 | IAAP<T5>, T6 | IAAP<T6>]): IAAP<[T1, T2, T3, T4, T5, T6]>;\nexport function abortAbleAll<T1, T2, T3, T4, T5>(values: [T1 | IAAP<T1>, T2 | IAAP<T2>, T3 | IAAP<T3>, T4 | IAAP<T4>, T5 | IAAP<T5>]): IAAP<[T1, T2, T3, T4, T5]>;\nexport function abortAbleAll<T1, T2, T3, T4>(values: [T1 | IAAP<T1>, T2 | IAAP<T2>, T3 | IAAP<T3>, T4 | IAAP<T4>]): IAAP<[T1, T2, T3, T4]>;\nexport function abortAbleAll<T1, T2, T3>(values: [T1 | IAAP<T1>, T2 | IAAP<T2>, T3 | IAAP<T3>]): IAAP<[T1, T2, T3]>;\nexport function abortAbleAll<T1, T2>(values: [T1 | IAAP<T1>, T2 | IAAP<T2>]): IAAP<[T1, T2]>;\nexport function abortAbleAll<T>(values: (T | IAAP<T>)[]): IAAP<T[]>;\n\nexport function abortAbleAll(values: any[]): IAAP<any[]> {\n  const loader = Promise.all(values);\n  let aborted: ((v: symbol) => void) | null = null;\n  const isAborted = () => aborted === null;\n  const aborter = new Promise<symbol>((resolve) => aborted = resolve);\n  const abort = () => {\n    if (aborted == null) {\n      return;\n    }\n    aborted(ABORTED);\n    for (const v of values) {\n      if (isAbortAble(v)) {\n        v.abort();\n      }\n    }\n    aborted = null;\n  };\n  const race = Promise.race<any | symbol>([aborter, loader]);\n\n  return {\n    then: thenFactory(race, isAborted, abort),\n    abort,\n    isAborted\n  };\n}\n\n/**\n * checked whether the given argument is an abortable Promise\n * @param {IAbortAblePromise<any> | any} abortAble\n * @returns {boolean}\n */\nexport function isAbortAble(abortAble: IAbortAblePromise<any> | any): abortAble is IAbortAblePromise<any> {\n  return abortAble != null && abortAble && typeof abortAble.then === 'function' && typeof abortAble.abort === 'function';\n}\n\n\nexport function isAsyncUpdate<T>(update: T | void | undefined | null | IAsyncUpdate<T>): update is IAsyncUpdate<T> {\n  return update !== undefined && update !== null && update && isAbortAble((<IAsyncUpdate<T>>update).ready);\n}\n\nexport function abortAbleResolveNow<T>(value: T) {\n  function then<TResult1 = T | symbol, TResult2 = never>(onfulfilled?: ((value: T | symbol) => TResult1 | PromiseLike<TResult1>) | undefined | null, _onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): IAbortAblePromiseBase<TResult1 | TResult2> {\n    const res = onfulfilled ? onfulfilled(value) : <any>value;\n    if (isAbortAble(res)) {\n      return res;\n    }\n    if (isPromiseLike(res)) {\n      return abortAble(res);\n    }\n    return {\n      then: <any>abortAbleResolveNow(<TResult1>res),\n      abort: () => undefined,\n      isAborted: () => false\n    };\n  }\n  return {\n    then,\n    abort: () => undefined,\n    isAborted: () => false\n  };\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {IExceptionContext} from '../logic';\n\n/**\n * utility class for optimized row context access\n */\nexport default class KeyFinder {\n  private readonly cache: number[] = [];\n  private lastFilled = 0;\n  private readonly key2index = new Map<string, number>();\n\n  /**\n   * constructor for fast key based row access\n   * @param {IExceptionContext} context context to use\n   * @param {(rowIndex: number) => string} key key function\n   */\n  constructor(public readonly context: IExceptionContext, public readonly key: (rowIndex: number) => string) {\n    this.context.exceptions.forEach((e) => {\n      this.cache[e.index] = e.y;\n      this.key2index.set(key(e.index), e.index);\n    });\n  }\n\n  private findValidStart(before: number) {\n    for (let i = before - 1; i >= 0; --i) {\n      if (this.cache[i] !== undefined) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * returns the position of the given given or -1 if not found\n   * @param {string} key\n   * @return {number} -1 if not found\n   */\n  posByKey(key: string) {\n    if (this.key2index.has(key)) {\n      const index = this.key2index.get(key)!;\n      return {index, pos: this.pos(index)};\n    }\n    return this.fillCacheTillKey(key);\n  }\n\n  /**\n   * returns the position of the tthe given index\n   * @param {number} index index to look for\n   * @returns {number}\n   */\n  pos(index: number) {\n    if (this.context.exceptions.length === 0) {\n      // fast pass\n      return index * this.context.defaultRowHeight;\n    }\n    const cached = this.cache[index];\n    if (cached !== undefined) {\n      return cached;\n    }\n    //need to compute it\n    // find the starting point where to start counting\n    const start = this.findValidStart(index);\n    if (start < 0) {\n      this.fillCache(0, index, 0);\n    } else {\n      this.fillCache(start + 1, index, this.cache[start] + this.heightOf(start));\n    }\n    return this.cache[index]!;\n  }\n\n  private fillCache(first: number, last: number, offset: number, callback?: (index: number, key: string, pos: number) => void) {\n    if (last <= this.lastFilled) {\n      //everything already there\n      if (!callback) {\n        return;\n      }\n      for (let i = first; i <= last; ++i) {\n        callback(i, this.key(i), this.cache[i]);\n      }\n      return;\n    }\n    let pos = offset;\n    for (let i = first; i <= last; ++i) {\n      this.cache[i] = pos;\n      const key = this.key(i);\n      this.key2index.set(key, i);\n      if (callback) {\n        callback(i, key, pos);\n      }\n      pos += this.heightOf(i);\n    }\n  }\n\n  /**\n   * returns the height of the row identified by index\n   * @param {number} index\n   * @returns {number}\n   */\n  heightOf(index: number) {\n    const lookup = this.context.exceptionsLookup;\n    return lookup.has(index) ? lookup.get(index)! : this.context.defaultRowHeight;\n  }\n\n  /**\n   * see heightOf but ignores padding and optional null in case of default height\n   * @param {number} index row index\n   * @param {boolean} returnDefault return null if default height\n   * @returns {number}\n   */\n  exceptionHeightOf(index: number, returnDefault: boolean = false) {\n    const padding = this.context.padding(index);\n    const lookup = this.context.exceptionsLookup;\n    if (lookup.has(index)) {\n      return lookup.get(index)! - padding;\n    }\n    return returnDefault ? this.context.defaultRowHeight - padding : null;\n  }\n\n  /**\n   * padding of the given index\n   * @param {number} index\n   * @returns {number}\n   */\n  padding(index: number) {\n    return this.context.padding(index);\n  }\n\n  private fillCacheTillKey(target: string) {\n    let pos = 0;\n    for (let i = this.lastFilled; i < this.context.numberOfRows; ++i, ++this.lastFilled) {\n      const c = this.cache[i];\n      if (c !== undefined) {\n        pos = c + this.heightOf(i);\n        continue;\n      }\n      // new one fill up\n      const key = this.key(i);\n      this.cache[i] = pos;\n      this.key2index.set(key, i);\n      if (key === target) {\n        return {index: i, pos};\n      }\n      pos += this.heightOf(i);\n    }\n    return {index: -1, pos: -1};\n  }\n\n  /**\n   * computes the positions and keys for a range of given indices\n   * @param {number} first first row index\n   * @param {number} last last row index\n   * @param {number} offset pos offset for the first row index\n   * @param {(index: number, key: string, pos: number) => void} callback callack for each identified index\n   */\n  positions(first: number, last: number, offset: number, callback?: (index: number, key: string, pos: number) => void) {\n    this.fillCache(first, last, offset, callback);\n  }\n}\n","import {IExceptionContext} from '../logic';\nimport KeyFinder from './KeyFinder';\n\nexport {default as KeyFinder} from './KeyFinder';\n\n/**\n * different row animation modes\n */\nexport enum EAnimationMode {\n  /**\n   * plain update existed both before and after\n   */\n  UPDATE,\n  /**\n   * exists both before and after but wasn't visible yet thus waas created\n   */\n  UPDATE_CREATE,\n  /**\n   * exists both before and after is visible but not needed anymore and thus removed\n   */\n  UPDATE_REMOVE,\n  /**\n   * row appears\n   */\n  SHOW,\n  /**\n   * row disappears\n   */\n  HIDE\n}\n\n/**\n * animated row item\n */\nexport interface IAnimationItem {\n  mode: EAnimationMode;\n  node: HTMLElement;\n  key: string;\n\n  /**\n   * previous context information\n   */\n  previous: {\n    index: number | -1;\n    y: number;\n    height: number | null;\n  };\n\n  /**\n   * position of the added node considering the previous height\n   */\n  nodeY: number;\n  /**\n   * position of the added node considering the current height\n   */\n  nodeYCurrentHeight: number;\n\n  /**\n   * current position\n   */\n  current: {\n    index: number | -1;\n    y: number;\n    height: number | null;\n  };\n}\n\nconst NO_CHANGE_DELTA = 1;\n\nexport function noAnimationChange({previous, mode, nodeY, current}: IAnimationItem, previousHeight: number, currentHeight: number) {\n  // sounds like the same\n  const prev = previous.height == null ? previousHeight : previous.height;\n  const curr = current.height == null ? currentHeight : current.height;\n  return mode === EAnimationMode.UPDATE && (Math.abs(previous.y - nodeY) <= NO_CHANGE_DELTA) && (Math.abs(prev - curr) <= NO_CHANGE_DELTA);\n}\n\nexport interface IPhase {\n  readonly delay: number;\n\n  apply(item: Readonly<IAnimationItem>, previousFinder: KeyFinder, currentFinder: KeyFinder): void;\n}\n\nexport interface IAnimationContext {\n  readonly previous: IExceptionContext;\n\n  previousKey(previousRowIndex: number): string;\n\n  currentKey(currentRowIndex: number): string;\n\n  phases?: IPhase[];\n}\n\n/**\n * maximal duration of all animations + extra waiting before e.g. rows are really removed\n * @type {number}\n */\nconst MAX_ANIMATION_TIME = 1100;\n\nexport const defaultPhases = [\n  {\n    delay: 0, // before\n    apply({mode, previous, nodeY, current, node}: Readonly<IAnimationItem>) {\n      node.dataset.animation = EAnimationMode[mode].toLowerCase();\n      node.style.transform = `translate(0, ${previous.y - nodeY}px)`;\n      if (mode === EAnimationMode.SHOW) {\n        // already target height\n        node.style.height = current.height !== null ? `${current.height}px` : null;\n      } else { // always set previous height for default height changes\n        node.style.height = `${previous.height}px`;\n      }\n      node.style.opacity = mode === EAnimationMode.SHOW ? '0' : (mode === EAnimationMode.HIDE ? '1' : null);\n    }\n  },\n  {\n    delay: 10, // after some delay for the before phase have been applied visually\n    apply({mode, current, nodeY, node}: Readonly<IAnimationItem>) {\n      // null for added/update since already at the right position\n      node.style.transform = (mode === EAnimationMode.HIDE || mode === EAnimationMode.UPDATE_REMOVE) ? `translate(0, ${current.y - nodeY}px)` : null;\n      if (mode !== EAnimationMode.HIDE) { // keep height for removal\n        node.style.height = current.height !== null ? `${current.height}px` : null;\n      }\n      node.style.opacity = mode === EAnimationMode.SHOW ? '1' : (mode === EAnimationMode.HIDE ? '0' : null);\n    }\n  },\n  {\n    delay: MAX_ANIMATION_TIME, // cleanup\n    apply({node}: Readonly<IAnimationItem>) {\n      delete node.dataset.animation;\n      node.style.opacity = null;\n      node.style.transform = null;\n    }\n  }\n];\n","\n\nexport declare type IDelayedMode = number | 'animation' | 'sync';\n\nexport const defaultMode: IDelayedMode = 'animation'; // Boolean((<any>window).chrome) ? 'animation' : 0, // animation frame on chrome;\n\nexport interface IScrollInfo {\n  left: number;\n  top: number;\n  width: number;\n  height: number;\n}\n\ninterface IScrollHandler {\n  timer: number;\n  prev: IScrollInfo | null;\n  handler: ((act: IScrollInfo) => void)[];\n}\n\nfunction dummy(): IScrollHandler {\n  return {\n    handler: [],\n    prev: null,\n    timer: -1\n  };\n}\n\nclass ScrollHandler {\n  private readonly sync = dummy();\n  private readonly animation = dummy();\n  private readonly numbers = new Map<number, IScrollHandler>();\n\n  // current: IScrollInfo;\n  // private prev: IScrollInfo | null = null;\n\n  get current() {\n    return this.asInfo();\n  }\n\n  constructor(private readonly node: HTMLElement) {\n    // this.current = this.asInfo();\n\n    node.addEventListener('scroll', () => {\n      // this.current = this.asInfo();\n\n      // if (this.prev && (Math.abs(this.current.left - this.prev.left) + Math.abs(this.current.top - this.prev.top)) < 4) {\n      //   return;\n      // }\n      // this.prev = this.current;\n\n      if (this.sync.handler.length > 0) {\n        this.handle(this.sync);\n      }\n      this.handleAnimation();\n      this.handleTimeouts();\n    }, {\n        passive: true\n      });\n  }\n\n  private handle(handler: IScrollHandler) {\n    const info = this.current;\n    if (handler.prev && (Math.abs(info.left - handler.prev.left) + Math.abs(info.top - handler.prev.top)) < 4) {\n      return;\n    }\n    handler.prev = info;\n    for (const s of handler.handler) {\n      s(info);\n    }\n  }\n\n  private handleAnimation() {\n    if (this.animation.timer !== -1 || this.animation.handler.length === 0) {\n      return;\n    }\n    this.animation.timer = 1;\n    requestAnimationFrame(this.handleAnimationImpl);\n  }\n\n  private readonly handleAnimationImpl = () => {\n    if (this.animation.timer !== 1) {\n      return;\n    }\n    this.handle(this.animation);\n    this.animation.timer = -1;\n  };\n\n  private handleTimeouts() {\n    if (this.numbers.size === 0) {\n      return;\n    }\n\n    this.numbers.forEach((handler, n) => {\n      if (handler.handler.length === 0) {\n        return;\n      }\n      handler.timer = self.setTimeout(() => {\n        this.handle(handler);\n        handler.timer = -1;\n      }, n);\n    });\n  }\n\n  asInfo(): IScrollInfo {\n    return {\n      left: this.node.scrollLeft,\n      top: this.node.scrollTop,\n      width: this.node.clientWidth,\n      height: this.node.clientHeight\n    };\n  }\n\n  push(mode: IDelayedMode, handler: (act: IScrollInfo) => void) {\n    if (typeof mode === 'number') {\n      if (!this.numbers.has(mode)) {\n        this.numbers.set(mode, dummy());\n      }\n      this.numbers.get(mode)!.handler.push(handler);\n    }\n\n    switch (mode) {\n      case 'sync':\n        this.sync.handler.push(handler);\n        break;\n      case 'animation':\n        this.animation.handler.push(handler);\n        break;\n    }\n  }\n\n\n  remove(handler: (act: IScrollInfo) => void) {\n    const test = [this.sync, this.animation].concat(Array.from(this.numbers.values()));\n\n    return test.some((d) => {\n      const index = d.handler.indexOf(handler);\n      if (index >= 0) {\n        d.handler.splice(index, 1);\n      }\n      return index >= 0;\n    });\n  }\n\n  isWaiting(mode: IDelayedMode) {\n    switch (mode) {\n      case 'animation':\n        return this.animation.timer >= 0;\n      case 'sync':\n        return false;\n      default:\n        return this.numbers.has(mode) && this.numbers.get(mode)!.timer >= 0;\n    }\n  }\n}\n\n/**\n * @internal\n */\nexport function addScroll(scroller: HTMLElement, mode: IDelayedMode, handler: (act: IScrollInfo) => void) {\n  // hide in element to have just one real listener\n  if (!(<any>scroller).__le_scroller__) {\n    (<any>scroller).__le_scroller__ = new ScrollHandler(scroller);\n  }\n  const s: ScrollHandler = (<any>scroller).__le_scroller__;\n  s.push(mode, handler);\n  return s.asInfo();\n}\n\n/**\n * @internal\n */\nexport function isScrollEventWaiting(scroller: HTMLElement, mode: IDelayedMode) {\n  if (!(<any>scroller).__le_scroller__) {\n    return false;\n  }\n  const s: ScrollHandler = (<any>scroller).__le_scroller__;\n  return s.isWaiting(mode);\n}\n\n/**\n * @internal\n */\nexport function removeScroll(scroller: HTMLElement, handler: (act: IScrollInfo) => void) {\n  if ((<any>scroller).__le_scroller__) {\n    (<ScrollHandler>(<any>scroller).__le_scroller__).remove(handler);\n  }\n}\n","export * from './scroll';\n\n/**\n * clear node clearing\n * @param node\n * @internal\n */\nexport function clear<T extends Node>(node: T) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n  return node;\n}\n","/**\n * generic exception of a uniform space\n */\nexport interface IRowHeightException {\n  /**\n   * reference index\n   */\n  readonly index: number;\n  /**\n   * height of the element\n   */\n  readonly height: number;\n  /**\n   * starting y\n   */\n  readonly y: number;\n  /**\n   * ending y\n   */\n  readonly y2: number;\n}\n\nclass RowHeightException implements IRowHeightException {\n  constructor(public readonly index: number, public readonly y: number, public readonly height: number) {\n\n  }\n\n  get y2() {\n    return this.y + this.height;\n  }\n}\n\n/**\n * simliar to a map\n */\nexport interface IRowHeightExceptionLookup {\n  keys(): IterableIterator<number>;\n\n  get(index: number): number | undefined;\n\n  has(index: number): boolean;\n\n  readonly size: number;\n}\n\n/**\n * exception context for optimized non uniform height exceptions\n */\nexport interface IExceptionContext {\n  /**\n   * height exceptions as a list\n   */\n  readonly exceptions: IRowHeightException[];\n  /**\n   * lookup for the height of a given index, if not part of this map it has the default height\n   */\n  readonly exceptionsLookup: IRowHeightExceptionLookup;\n  /**\n   * number of rows\n   */\n  readonly numberOfRows: number;\n  /**\n   * default height of rows\n   */\n  readonly defaultRowHeight: number;\n  /**\n   * total height\n   */\n  readonly totalHeight: number;\n\n  /**\n   * padding between rows, however already included in all heights to have the precise numbers\n   */\n  readonly padding: (index: number) => number;\n}\n\n/**\n * creates a uniform exception context, i.e no exceptions all rows are of the same height\n * @param {number} numberOfRows\n * @param {number} rowHeight\n * @param {number} rowPadding padding between rows\n * @return {IExceptionContext}\n */\nexport function uniformContext(numberOfRows: number, rowHeight: number, rowPadding: number = 0): IExceptionContext {\n  rowHeight += rowPadding;\n  const exceptionsLookup = {\n    keys: () => [].values(),\n    get: () => rowHeight,\n    has: () => false,\n    size: 0\n  };\n  return {\n    exceptions: [],\n    exceptionsLookup,\n    totalHeight: numberOfRows * rowHeight,\n    numberOfRows,\n    defaultRowHeight: rowHeight,\n    padding: () => rowPadding\n  };\n}\n\n/**\n * computes the most frequent value in a given array like\n * @param {} values\n * @return {number}\n */\nfunction mostFrequentValue(values: {forEach: (callback: (height: number, index: number) => any) => any}): number {\n  const lookup = new Map<number, number>();\n  values.forEach((value) => {\n    lookup.set(value, (lookup.get(value) || 0) + 1);\n  });\n  if (lookup.size === 0) {\n    return 20; // default value since it doesn't matter\n  }\n  // sort desc take first key and asc by the second in case of tie, it is optimized to have exceptions for higher rows less for big rows\n  const sorted = Array.from(lookup).sort((a, b) => {\n    if (a[1] !== b[1]) {\n      return b[1] - a[1];\n    }\n    return a[0] - b[0];\n  });\n  const mostFrequent = sorted[0][0];\n  if (mostFrequent === 0) { // cornercase\n    return sorted.length > 1 ? sorted[1][0] : 20; // all empty\n  }\n  return mostFrequent;\n}\n\n/**\n * creates a non uniform context based on the given array like heights\n * @param rowHeights arrayish to get the heights\n * @param {number} defaultRowHeight if not given the most frequent value will be used\n * @param {number} rowPadding padding between rows\n * @return {IExceptionContext}\n */\nexport function nonUniformContext(rowHeights: {forEach: (callback: (height: number, index: number) => any) => any}, defaultRowHeight: number = NaN, rowPadding: number | ((index: number) => number) = 0): IExceptionContext {\n  const exceptionsLookup = new Map<number, number>();\n  const exceptions: IRowHeightException[] = [];\n\n  const padding = typeof rowPadding === 'function' ? rowPadding : () => <number>rowPadding;\n\n  if (isNaN(defaultRowHeight)) {\n    defaultRowHeight = mostFrequentValue(rowHeights);\n  }\n\n  defaultRowHeight += padding(-1);\n\n  let prev = -1, acc = 0, totalHeight = 0, numberOfRows = 0;\n  rowHeights.forEach((height, index) => {\n    height += padding(index);\n    totalHeight += height;\n    numberOfRows++;\n    if (height === defaultRowHeight) {\n      //regular\n      return;\n    }\n    exceptionsLookup.set(index, height);\n    const between = (index - prev - 1) * defaultRowHeight;\n    prev = index;\n    const y = acc + between;\n    acc = y + height;\n    exceptions.push(new RowHeightException(index, y, height));\n  });\n  return {exceptionsLookup, exceptions, totalHeight, defaultRowHeight, numberOfRows, padding};\n}\n\n/**\n * creates a random context with the given constraints\n * @param {number} numberOfRows\n * @param {number} defaultRowHeight\n * @param {number} minRowHeight\n * @param {number} maxRowHeight\n * @param {number} ratio around ratio percent will get a non uniform height\n * @param {number} seed random seed\n * @return {IExceptionContext}\n */\nexport function randomContext(numberOfRows: number, defaultRowHeight: number, minRowHeight = 2, maxRowHeight = defaultRowHeight * 10, ratio = 0.2, seed = Date.now()) {\n  let actSeed = seed;\n  const random = () => {\n    const x = Math.sin(actSeed++) * 10000;\n    return x - Math.floor(x);\n  };\n\n\n  const getter = () => {\n    const coin = random();\n    if (coin < ratio) {\n      //non uniform\n      return minRowHeight + Math.round(random() * (maxRowHeight - minRowHeight));\n    }\n    return defaultRowHeight;\n  };\n  const forEach = (callback: (height: number, index: number) => any) => {\n    for (let index = 0; index < numberOfRows; ++index) {\n      callback(getter(), index);\n    }\n  };\n  return nonUniformContext({forEach}, defaultRowHeight);\n}\n\nexport interface IVisibleRange {\n  /**\n   * first visible index\n   */\n  readonly first: number;\n  /**\n   * last visible index\n   */\n  readonly last: number;\n  /**\n   * position of the first visible row in pixel\n   */\n  readonly firstRowPos: number;\n  /**\n   * position of the last visible row includings its size\n   */\n  readonly endPos: number;\n}\n\n/**\n * computes the visible range\n * @param {number} scrollTop top scrolling\n * @param {number} clientHeight visible height\n * @param {number} rowHeight height of a row by default\n * @param {IRowHeightException[]} heightExceptions exceptions of this default height\n * @param {number} numberOfRows the number of rows\n * @return {IVisibleRange} the computed visible range\n */\nexport function range(scrollTop: number, clientHeight: number, rowHeight: number, heightExceptions: IRowHeightException[], numberOfRows: number): IVisibleRange {\n  if (numberOfRows === 0) {\n    return {first: 0, last: -1, firstRowPos: 0, endPos: 0};\n  }\n  if (numberOfRows === 1) {\n    return {\n      first: 0,\n      last: 0,\n      firstRowPos: 0,\n      endPos: heightExceptions.length === 0 ? rowHeight : heightExceptions[0].y2\n    };\n  }\n  const offset = scrollTop;\n  const offset2 = offset + clientHeight;\n\n  function indexOf(pos: number, indexShift: number) {\n    return Math.min(numberOfRows - 1, indexShift + Math.max(0, Math.floor(pos / rowHeight)));\n  }\n\n  function calc(offsetShift: number, indexShift: number, isGuess: boolean = false) {\n    const shifted = offset - offsetShift;\n    const shifted2 = offset2 - offsetShift;\n\n    const first = indexOf(shifted, indexShift);\n    const last = indexOf(shifted2, indexShift);\n\n    const firstRowPos = offsetShift + (first - indexShift) * rowHeight;\n    const endPos = offsetShift + (last + 1 - indexShift) * rowHeight;\n\n    //if (!isGuess) {\n    //  console.log(first, '@', firstRowPos, last, '#', end, offset, offset2, firstRowPos <= offset, offset2 <= end);\n    //}\n    console.assert(!isGuess || !(firstRowPos > offset || (endPos < offset2 && last < numberOfRows - 1)), 'error', isGuess, firstRowPos, endPos, offset, offset2, indexShift, offsetShift);\n    return {first, last, firstRowPos, endPos};\n  }\n\n  const r = calc(0, 0, true);\n  if (heightExceptions.length === 0) {\n    //uniform\n    return r;\n  }\n  if (r.last < heightExceptions[0].index) {\n    //console.log('before the first exception = uniform with no shift');\n    //console.log(r.first, '@', r.firstRowPos, r.last, '#', r.end, offset, offset2, r.firstRowPos <= offset, offset2 <= r.end);\n    return r;\n  }\n  if (r.last === heightExceptions[0].index && heightExceptions[0].height > rowHeight) {\n    return Object.assign(r, {endPos: heightExceptions[0].y2});\n  }\n\n  //the position where the exceptions ends\n  const lastPos = heightExceptions[heightExceptions.length - 1];\n  if (offset >= lastPos.y) {\n    const rest = calc(lastPos.y2, lastPos.index + 1);\n    if (offset < lastPos.y2) {\n      // include me\n      return Object.assign(rest, {first: lastPos.index, firstRowPos: lastPos.y});\n    }\n    return rest;\n  }\n  //we have some exceptions\n  const visible: IRowHeightException[] = [];\n  let closest = heightExceptions[0]; //closest before not in range\n  for (const item of heightExceptions) {\n    const {y, y2} = item;\n    if (y >= offset2) {\n      break;\n    }\n    if (y2 <= offset) {\n      closest = item;\n      continue;\n    }\n    visible.push(item);\n  }\n\n  if (visible.length === 0) {\n    //console.log('we are in the between some exceptions and none are visible');\n    return calc(closest.y2, closest.index + 1); //skip myself\n  }\n\n  {\n    //console.log('we show at least one exception');\n    const firstException = visible[0];\n    const lastException = visible[visible.length - 1];\n\n    const first = Math.max(0, firstException.index - Math.max(0, Math.ceil((firstException.y - offset) / rowHeight)));\n    let last = lastException.index;\n    if (offset2 >= lastException.y2) {\n      last = indexOf(offset2 - lastException.y2, lastException.index + 1);\n    }\n    const firstRowPos = firstException.y - (firstException.index - first) * rowHeight;\n    const endPos = lastException.y2 + (last - lastException.index) * rowHeight;\n\n    //console.log(first, '@', firstRowPos, last, '#', end, offset, offset2, firstRowPos <= offset, offset2 <= end);\n\n    console.assert(firstRowPos <= offset && (endPos >= offset2 || last === numberOfRows - 1), 'error', firstRowPos, endPos, offset, offset2, firstException, lastException);\n    return {first, last, firstRowPos, endPos};\n  }\n}\n\n\nexport function frozenDelta(current: number[], target: number[]): {added: number[], removed: number[], common: number} {\n  const clength = current.length;\n  const tlength = target.length;\n  if (clength === 0) {\n    return {added: target, removed: [], common: 0};\n  }\n  if (tlength === 0) {\n    return {added: [], removed: current, common: 0};\n  }\n  if (clength === tlength) { //since sorted and left increasing true\n    return {added: [], removed: [], common: clength};\n  }\n  const removed = current.slice(Math.min(tlength, clength));\n  const added = target.slice(Math.min(tlength, clength));\n  return {added, removed, common: clength - removed.length};\n}\n\nexport function updateFrozen(old: number[], columns: {frozen: boolean}[], first: number): {target: number[], added: number[], removed: number[]} {\n  const oldLast = old.length === 0 ? 0 : old[old.length - 1] + 1;\n  const added: number[] = [];\n  const removed: number[] = [];\n\n  for (let i = old.length - 1; i >= 0; --i) {\n    const index = old[i];\n    if (index >= first) {\n      removed.push(old.pop()!);\n    } else {\n      // can stop since sorted and it will never happen again\n      break;\n    }\n  }\n  //added\n  for (let i = oldLast; i < first; ++i) {\n    if (columns[i].frozen) {\n      added.push(i);\n      old.push(i);\n    }\n  }\n  return {target: old, added, removed};\n}\n","import {IExceptionContext} from '../logic';\n\n/**\n * scrolling result\n */\nexport enum EScrollResult {\n  /**\n   * nothing has changed\n   */\n  NONE,\n  /**\n   * all rows needed to be recreated\n   */\n  ALL,\n  /**\n   * unknown\n   */\n  SOME,\n  /**\n   * some rows are added at the bottom\n   */\n  SOME_BOTTOM,\n  /**\n   * some rows are added at the top\n   */\n  SOME_TOP\n}\n\n/**\n * adapter context for mixins to avoid public fields\n */\nexport interface IMixinAdapter {\n  readonly visible: {\n    //writable\n    first: number;\n    last: number;\n    forcedFirst: number;\n    forcedLast: number;\n  };\n  readonly visibleFirstRowPos: number;\n\n  readonly context: IExceptionContext;\n  readonly scrollOffset: number;\n  readonly scrollTotal: number;\n\n  addAtBeginning(from: number, to: number, frozenShift: number): void;\n\n  addAtBottom(from: number, to: number): void;\n\n  removeFromBeginning(from: number, to: number, frozenShift: number): void;\n\n  removeFromBottom(from: number, to: number): void;\n\n  updateOffset(firstRowPos: number): void;\n\n  /**\n   * triggers to sync frozen items\n   * @param {number} first\n   * @return {number} frozenShift\n   */\n  syncFrozen?(first: number): number;\n\n  isScrollEventWaiting(): boolean;\n}\n\nexport interface IMixin {\n  onScrolled(isGoingDown: boolean, scrollResult: EScrollResult): void;\n}\n\nexport interface IMixinClass {\n  new(adapter: IMixinAdapter, options?: any): IMixin;\n}\n","\n\n\nconst PREFIX = 'le';\n\n/**\n * @internal\n * @param suffix suffix to suffix\n */\nexport function cssClass(suffix?: string) {\n  if (!suffix) {\n    return PREFIX;\n  }\n  return `${PREFIX}-${suffix}`;\n}\n\nexport const CSS_CLASS_LOADING = cssClass('loading');\nexport const CSS_CLASS_FROZEN = cssClass('frozen');\nexport const CSS_CLASS_HIDDEN = cssClass('hidden');\nexport const CSS_CLASS_MULTI = cssClass('multi');\nexport const CSS_CLASS_EVEN = cssClass('even');\nexport const CSS_CLASS_SHIFTED = cssClass('shifted');\nexport const CSS_CLASS_SCROLLBAR_TESTER = cssClass('scrollbar-tester');\n\nexport const CSS_CLASS_HEADER = cssClass('header');\nexport const CSS_CLASS_BODY = cssClass('body');\nexport const CSS_CLASS_FOOTER = cssClass('footer');\n\nexport const CSS_CLASS_THEAD = cssClass('thead');\nexport const CSS_CLASS_TBODY = cssClass('tbody');\n\nexport const CSS_CLASS_TR = cssClass('tr');\nexport const CSS_CLASS_TH = cssClass('th');\nexport const CSS_CLASS_TD = cssClass('td');\n\nexport const CSS_CLASS_SCROLLING = cssClass('scrolling');\nexport const CSS_CLASS_ROW_ANIMATION = cssClass('row-animation');\n","import {ABORTED, IAbortAblePromise, isAbortAble} from './abortAble';\nimport {defaultPhases, EAnimationMode, IAnimationContext, IAnimationItem, IPhase, noAnimationChange} from './animation';\nimport KeyFinder from './animation/KeyFinder';\nimport {addScroll, clear, defaultMode, IDelayedMode, IScrollInfo, removeScroll} from './internal';\nimport {isScrollEventWaiting} from './internal/scroll';\nimport {IExceptionContext, range} from './logic';\nimport {EScrollResult, IMixin, IMixinAdapter, IMixinClass} from './mixin';\nimport {cssClass, CSS_CLASS_EVEN, CSS_CLASS_FOOTER, CSS_CLASS_LOADING, CSS_CLASS_ROW_ANIMATION, CSS_CLASS_SCROLLING, CSS_CLASS_TR} from './styles';\n\nexport declare type IRowRenderContext = IExceptionContext;\n\nexport function isLoadingCell(node: HTMLElement) {\n  return node.classList.contains(CSS_CLASS_LOADING);\n}\n\nexport interface IRowRendererOptions {\n  /**\n   * async update on scrolling\n   * animation -> use requestAnimationFrame\n   * sync -> execute within scroll listener\n   * {number} -> execute within this delay using setTimeout\n   * @default is chrome ? animation else 0\n   */\n  async: IDelayedMode;\n\n  /**\n   * minimal number of pixel the scrollbars has to move\n   * @default 10\n   */\n  minScrollDelta: number;\n\n  /**\n   * min number of rows that should be added or removed\n   * @default 10\n   */\n  batchSize: number;\n\n  /**\n   * number of pixels the viewport is virtually larger\n   * @default 200\n   */\n  viewportOversize: number;\n\n  /**\n   * class of mixins to use for optimized rendering\n   */\n  mixins: IMixinClass[];\n\n  /**\n   * add the scrolling hint class while scrolling to give a user feedback\n   */\n  scrollingHint: boolean;\n\n  /**\n   * whether background striping should be enabled\n   */\n  striped: boolean;\n}\n\n/**\n * base class for creating a scalable table renderer based on rows\n */\nexport abstract class ARowRenderer {\n  private readonly pool: HTMLElement[] = [];\n  private readonly loadingPool: HTMLElement[] = [];\n  private readonly loading = new WeakMap<HTMLElement, IAbortAblePromise<void>>();\n\n  private readonly fragment: DocumentFragment;\n\n  /**\n   * currently visible slice\n   */\n  protected readonly visible = {\n    first: 0,\n    forcedFirst: 0,\n    last: -1,\n    forcedLast: -1\n  };\n  /**\n   * position of the first visible row in pixel\n   * @type {number}\n   */\n  protected visibleFirstRowPos = 0;\n\n  private readonly adapter: IMixinAdapter;\n  private readonly mixins: IMixin[];\n  private scrollListener: ((act: IScrollInfo) => void) | null = null;\n  protected lastScrollInfo: IScrollInfo | null = null;\n\n  private abortAnimation: () => void = () => undefined;\n\n  protected readonly options: Readonly<IRowRendererOptions> = {\n    async: defaultMode,\n    minScrollDelta: 10,\n    mixins: [],\n    scrollingHint: false,\n    batchSize: 10,\n    striped: false,\n    viewportOversize: 200\n  };\n\n  constructor(protected readonly body: HTMLElement, options: Partial<IRowRendererOptions> = {}) {\n    this.adapter = this.createAdapter();\n    Object.assign(this.options, options);\n    this.mixins = this.options.mixins.map((mixinClass) => new mixinClass(this.adapter));\n\n    this.fragment = body.ownerDocument!.createDocumentFragment();\n  }\n\n  protected abstract get idPrefix(): string;\n\n  /**\n   * register another mixin to this renderer\n   * @param {IMixinClass} mixinClass the mixin class to instantitiate\n   * @param options optional constructor options\n   */\n  protected addMixin(mixinClass: IMixinClass, options?: any) {\n    this.mixins.push(new mixinClass(this.adapter, options));\n  }\n\n  private createAdapter(): IMixinAdapter {\n    const r: any = {\n      visible: this.visible,\n      addAtBeginning: this.addAtBeginning.bind(this),\n      addAtBottom: this.addAtBottom.bind(this),\n      removeFromBeginning: this.removeFromBeginning.bind(this),\n      removeFromBottom: this.removeFromBottom.bind(this),\n      updateOffset: this.updateOffset.bind(this),\n      isScrollEventWaiting: () => isScrollEventWaiting(this.bodyScroller, this.options.async)\n    };\n    Object.defineProperties(r, {\n      visibleFirstRowPos: {\n        get: () => this.visibleFirstRowPos,\n        enumerable: true\n      },\n      context: {\n        get: () => this.context,\n        enumerable: true\n      },\n      scrollOffset: {\n        get: () => this.lastScrollInfo ? this.lastScrollInfo.top : 0,\n        enumerable: true\n      },\n      scrollTotal: {\n        get: () => this.lastScrollInfo ? this.lastScrollInfo.height : this.bodyScroller.clientHeight,\n        enumerable: true\n      }\n    });\n    return r;\n  }\n\n  /**\n   * get the scrolling container i.e. parent of the body element\n   * @returns {HTMLElement}\n   */\n  protected get bodyScroller() {\n    return <HTMLElement>this.body.parentElement;\n  }\n\n  protected get bodySizer(): HTMLElement {\n    const parent = this.bodyScroller;\n    const sizer = (<HTMLElement[]>Array.from(parent.children)).find((d) => d.tagName.toLowerCase() === 'footer');\n    if (sizer) {\n      return sizer;\n    }\n    const s = parent.ownerDocument!.createElement('footer');\n    s.classList.add(CSS_CLASS_FOOTER, cssClass(`footer-${this.idPrefix}`));\n    parent.insertBefore(s, parent.firstChild);\n    return s;\n  }\n\n  /**\n   * the current render context, upon change `recreate` the whole table\n   * @returns {IRowRenderContext}\n   */\n  protected abstract get context(): IRowRenderContext;\n\n  /**\n   * creates a new row\n   * @param {HTMLElement} node the node of the row\n   * @param {number} index the row index\n   * @returns {IAbortAblePromise<void> | void} either an abortable or nothing\n   */\n  protected abstract createRow(node: HTMLElement, index: number): IAbortAblePromise<void> | void;\n\n  /**\n   * updates a row\n   * @param {HTMLElement} node the node of the row\n   * @param {number} index the row index\n   * @returns {IAbortAblePromise<void> | void} either an abortable or nothing\n   */\n  protected abstract updateRow(node: HTMLElement, index: number): IAbortAblePromise<void> | void;\n\n  /**\n   * initializes the table and register the onscroll listener\n   * @returns {void} nothing\n   */\n  protected init() {\n    const scroller = this.bodyScroller;\n\n    let old = addScroll(scroller, this.options.async, this.scrollListener = (act) => {\n      this.lastScrollInfo = act;\n      if (Math.abs(old.top - act.top) < this.options.minScrollDelta && Math.abs(old.height - act.height) < this.options.minScrollDelta) {\n        return;\n      }\n      const isGoingDown = act.top > old.top;\n      old = act;\n      this.onScrolledVertically(act.top, act.height, isGoingDown);\n      if (this.options.scrollingHint) {\n        this.body.classList.remove(CSS_CLASS_SCROLLING);\n      }\n    });\n    if (this.options.scrollingHint) {\n      addScroll(scroller, 'animation', () => this.body.classList.add(CSS_CLASS_SCROLLING));\n    }\n    this.recreate();\n  }\n\n\n  /**\n   * destroys this renderer and unregisters all event listeners\n   */\n  destroy() {\n    removeScroll(this.bodyScroller, this.scrollListener!);\n    this.body.remove();\n  }\n\n  private static cleanUp(item: HTMLElement) {\n    item.style.height = null;\n  }\n\n  private select(index: number): {item: HTMLElement, result: IAbortAblePromise<void> | void} {\n    let item: HTMLElement;\n    let result: IAbortAblePromise<void> | void;\n    if (this.pool.length > 0) {\n      item = this.pool.pop()!;\n      result = this.updateRow(item, index);\n    } else if (this.loadingPool.length > 0) {\n      item = this.loadingPool.pop()!;\n      item.classList.remove(CSS_CLASS_LOADING);\n      result = this.createRow(item, index);\n    } else {\n      item = this.body.ownerDocument!.createElement('div');\n      item.classList.add(CSS_CLASS_TR, cssClass(`tr-${this.idPrefix}`));\n      result = this.createRow(item, index);\n    }\n    item.dataset.index = String(index);\n    if (this.options.striped) {\n      item.classList.toggle(CSS_CLASS_EVEN, index % 2 === 0);\n    }\n    return {item, result};\n  }\n\n  private selectProxy() {\n    let proxy: HTMLElement;\n    if (this.loadingPool.length > 0) {\n      proxy = this.loadingPool.pop()!;\n    } else {\n      proxy = this.body.ownerDocument!.createElement('div');\n      proxy.classList.add(CSS_CLASS_LOADING, CSS_CLASS_TR, cssClass(`tr-${this.idPrefix}`));\n    }\n    return proxy;\n  }\n\n  private recycle(item: HTMLElement) {\n    ARowRenderer.cleanUp(item);\n    // check if the original dom element is still being manipulated\n    if (this.loading.has(item)) {\n      const abort = this.loading.get(item)!;\n      abort.abort();\n    } else {\n      this.pool.push(item);\n    }\n  }\n\n  private proxy(item: HTMLElement, result: IAbortAblePromise<void> | void) {\n    if (!isAbortAble(result)) {\n      return item;\n    }\n    const abort = result;\n    //lazy loading\n\n    const real = item;\n    const proxy = this.selectProxy();\n    // copy attributes\n    proxy.dataset.index = real.dataset.index;\n    proxy.style.height = real.style.height;\n\n    this.loading.set(proxy, abort);\n    abort.then((result) => {\n      if (result === ABORTED) {\n        //aborted can recycle the real one\n        ARowRenderer.cleanUp(real);\n        this.pool.push(real);\n      } else {\n        //fully loaded\n        this.body.replaceChild(real, proxy);\n      }\n      this.loading.delete(proxy);\n      ARowRenderer.cleanUp(proxy);\n      this.loadingPool.push(proxy);\n    });\n    return proxy;\n  }\n\n  private create(index: number) {\n    const {item, result} = this.select(index);\n\n    const {exceptionsLookup: ex, padding} = this.context;\n    if (ex.has(index)) {\n      item.style.height = `${ex.get(index)! - padding(index)}px`;\n    }\n\n    return this.proxy(item, result);\n  }\n\n  private removeAll(perform = true) {\n    const b = this.body;\n    if (!perform) {\n      return <HTMLElement[]>Array.from(b.children);\n    }\n    const torecycle: HTMLElement[] = [];\n    while (b.lastElementChild) {\n      const i = <HTMLElement>b.lastElementChild;\n      b.removeChild(i);\n      this.recycle(i);\n      torecycle.push(i);\n    }\n    return torecycle;\n  }\n\n\n  /**\n   * triggers and visual update of all visible rows\n   */\n  protected update() {\n    const first = this.visible.first;\n    const fragment = this.fragment;\n    const items = <HTMLElement[]>Array.from(this.body.children);\n    clear(this.body);\n    items.forEach((item: HTMLElement, i) => {\n      if (this.loading.has(item)) {\n        // still loading\n        fragment.appendChild(item);\n        return;\n      }\n      const abort = this.updateRow(item, i + first);\n\n      fragment.appendChild(this.proxy(item, abort));\n    });\n    this.body.appendChild(fragment);\n  }\n\n  /**\n   * utility to execute a function for each visible row\n   * @param {(row: HTMLElement, rowIndex: number) => void} callback callback to execute\n   * @param {boolean} inplace whether the DOM changes should be performed inplace instead of in a fragment\n   */\n  protected forEachRow(callback: (row: HTMLElement, rowIndex: number) => void, inplace: boolean = false) {\n    const rows = <HTMLElement[]>Array.from(this.body.children);\n    const fragment = this.fragment;\n    if (!inplace) {\n      clear(this.body);\n    }\n    rows.forEach((row: HTMLElement, index) => {\n      if (!isLoadingCell(row) && row.dataset.animation !== 'update_remove' && row.dataset.animation !== 'hide') {\n        //skip loading ones and temporary ones\n        callback(row, index + this.visible.first);\n      }\n      if (!inplace) {\n        fragment.appendChild(row);\n      }\n    });\n    if (!inplace) {\n      this.body.appendChild(fragment);\n    }\n  }\n\n  private removeFromBeginning(from: number, to: number, perform = true) {\n    return this.remove(from, to, true, perform);\n  }\n\n  private removeFromBottom(from: number, to: number, perform = true) {\n    return this.remove(from, to, false, perform);\n  }\n\n  private remove(from: number, to: number, fromBeginning: boolean, perform = true) {\n    if (to < from) {\n      return;\n    }\n    const b = this.body;\n    const torecycle: HTMLElement[] = [];\n    // console.log('remove', fromBeginning, (to - from) + 1, this.body.childElementCount - ((to - from) + 1));\n    let act = <HTMLElement>(fromBeginning ? b.firstChild : b.lastChild);\n    for (let i = from; i <= to; ++i) {\n      const item = act;\n      act = <HTMLElement>(fromBeginning ? act.nextSibling : act.previousSibling);\n\n      if (perform) {\n        b.removeChild(item);\n        this.recycle(item);\n      }\n      torecycle.push(item);\n\n    }\n    return torecycle;\n  }\n\n  private addAtBeginning(from: number, to: number, perform = true) {\n    if (to < from) {\n      return;\n    }\n    // console.log('add', (to - from) + 1, this.body.childElementCount + ((to - from) + 1));\n    const fragment = this.fragment;\n    if (from === to && perform) {\n      this.body.insertBefore(this.create(from), this.body.firstChild);\n      return;\n    }\n    for (let i = from; i <= to; ++i) {\n      fragment.appendChild(this.create(i));\n    }\n    if (perform) {\n      this.body.insertBefore(fragment, this.body.firstChild);\n    }\n    return fragment;\n  }\n\n  private addAtBottom(from: number, to: number, perform = true) {\n    if (to < from) {\n      return;\n    }\n    // console.log('add_b', (to - from) + 1, this.body.childElementCount + ((to - from) + 1));\n    if (from === to && perform) {\n      this.body.appendChild(this.create(from));\n      return;\n    }\n    const fragment = this.fragment;\n    for (let i = from; i <= to; ++i) {\n      fragment.appendChild(this.create(i));\n    }\n    if (perform) {\n      this.body.appendChild(fragment);\n    }\n    return fragment;\n  }\n\n  protected updateOffset(firstRowPos: number) {\n    this.visibleFirstRowPos = firstRowPos;\n\n    this.updateSizer(firstRowPos);\n  }\n\n  protected updateSizer(firstRowPos: number) {\n    const {totalHeight} = this.context;\n    setTransform(this.body, 0, firstRowPos.toFixed(0));\n    setTransform(this.bodySizer, 0, Math.max(0, totalHeight - 1).toFixed(0));\n  }\n\n  /**\n   * removes all rows and recreates the table\n   * @param {IAnimationContext} ctx optional animation context to create a transition between the previous and the current tables\n   * @returns {void} nothing\n   */\n  protected recreate(ctx?: IAnimationContext) {\n    this.abortAnimation();\n    if (ctx) {\n      return this.recreateAnimated(ctx);\n    }\n    return this.recreatePure();\n  }\n\n  private recreatePure() {\n    const context = this.context;\n\n    const scroller = this.bodyScroller;\n\n    //update first to avoid resetting scrollTop\n    this.updateOffset(0);\n\n    this.removeAll();\n    this.clearPool();\n\n    const {first, last, firstRowPos} = range(scroller.scrollTop, scroller.clientHeight, context.defaultRowHeight, context.exceptions, context.numberOfRows);\n\n    this.visible.first = this.visible.forcedFirst = first;\n    this.visible.last = this.visible.forcedLast = last;\n\n    if (first < 0) {\n      // empty\n      this.updateOffset(0);\n      return;\n    }\n    this.addAtBottom(first, last);\n    this.updateOffset(firstRowPos);\n  }\n\n\n  private recreateAnimated(ctx: IAnimationContext) {\n    const lookup = new Map<string, {n: HTMLElement, pos: number, i: number}>();\n    const prev = new KeyFinder(ctx.previous, ctx.previousKey);\n    const cur = new KeyFinder(this.context, ctx.currentKey);\n    const next = range(this.bodyScroller.scrollTop, this.bodyScroller.clientHeight, cur.context.defaultRowHeight, cur.context.exceptions, cur.context.numberOfRows);\n\n    {\n      const rows = <HTMLElement[]>Array.from(this.body.children);\n      const old = Object.assign({}, this.visible);\n      //store the current rows in a lookup and clear\n\n      clear(this.body);\n\n      prev.positions(old.first, Math.min(old.last, old.first + rows.length), this.visibleFirstRowPos, (i, key, pos) => {\n        const n = rows[i];\n        if (n) { // shouldn't happen that it is not there\n          lookup.set(key, {n, pos, i});\n        }\n        // else {\n        //  console.error(i, key, pos, rows);\n        //}\n      });\n    }\n\n    this.visible.first = this.visible.forcedFirst = next.first;\n    this.visible.last = this.visible.forcedLast = next.last;\n\n    const fragment = this.fragment;\n    const animation: IAnimationItem[] = [];\n\n    let nodeY = next.firstRowPos;\n    cur.positions(next.first, next.last, next.firstRowPos, (i, key, pos) => {\n      let node: HTMLElement;\n      let mode: EAnimationMode = EAnimationMode.UPDATE;\n      let previous: {\n        index: number | -1;\n        y: number;\n        height: number | null;\n      };\n      if (lookup.has(key)) {\n        // still visible\n        const item = lookup.get(key)!;\n        lookup.delete(key);\n\n        // update height\n\n        item.n.dataset.index = String(i);\n        node = this.proxy(item.n, this.updateRow(item.n, i));\n        previous = {\n          index: item.i,\n          y: item.pos,\n          height: prev.exceptionHeightOf(item.i, true)\n        };\n      } else {\n        // need a new row\n        const old = prev.posByKey(key);\n        // maybe not visible  before so keep in place\n        node = this.create(i);\n\n        mode = old.index < 0 ? EAnimationMode.SHOW : EAnimationMode.UPDATE_CREATE;\n        previous = {\n          index: old.index,\n          y: old.pos >= 0 ? old.pos : pos,\n          height: old.index < 0 ? cur.exceptionHeightOf(i, true) : prev.exceptionHeightOf(old.index, true)\n        };\n      }\n      animation.push({\n        node,\n        key,\n        mode,\n        previous,\n        nodeY,\n        nodeYCurrentHeight: pos,\n        current: {\n          index: i,\n          y: pos,\n          height: cur.exceptionHeightOf(i)\n        }\n      });\n      node.style.transform = `translate(0, ${nodeY - pos}px)`;\n      nodeY += previous.height! + (previous.index < 0 ? cur.padding(i) : prev.padding(previous.index));\n\n      fragment.appendChild(node);\n    });\n\n    let nodeYCurrentHeight = next.endPos;\n    // items that are going to be removed\n    lookup.forEach((item, key) => {\n      // calculate their next position\n      const r = cur.posByKey(key);\n\n      // maybe not visible anymore, keep in place\n      const nextPos = r.pos >= 0 ? r.pos : item.pos;\n      const node = item.n;\n      // located at addedPos\n      // should end up at nextPos\n      // was previously at item.pos\n      node.style.transform = `translate(0, ${item.pos - nodeY}px)`;\n      fragment.appendChild(node);\n\n      const prevHeight = prev.exceptionHeightOf(item.i, true);\n\n      animation.push({\n        node: item.n,\n        key,\n        mode: r.index < 0 ? EAnimationMode.HIDE : EAnimationMode.UPDATE_REMOVE,\n        previous: {\n          index: item.i,\n          y: item.pos,\n          height: prevHeight\n        },\n        nodeY,\n        nodeYCurrentHeight,\n        current: {\n          index: r.index,\n          y: nextPos,\n          height: r.index < 0 ? null : cur.exceptionHeightOf(r.index)\n        }\n      });\n      nodeYCurrentHeight += r.index < 0 ? cur.context.defaultRowHeight : (cur.exceptionHeightOf(r.index, true)! + cur.padding(r.index));\n      nodeY += prevHeight! + prev.padding(item.i);\n    });\n\n    this.updateOffset(next.firstRowPos);\n\n    this.animate(animation, ctx.phases || defaultPhases, prev, cur, fragment);\n  }\n\n  private animate(animation: IAnimationItem[], phases: IPhase[], previousFinder: KeyFinder, currentFinder: KeyFinder, fragment: DocumentFragment) {\n    if (animation.length <= 0) {\n      this.body.appendChild(fragment);\n      return;\n    }\n\n    let currentTimer: any = -1;\n    let actPhase = 0;\n\n    const executePhase = (phase: IPhase, items = animation) => {\n      items.forEach((anim) => phase.apply(anim, previousFinder, currentFinder));\n    };\n\n    const run = () => {\n      //dummy log for forcing dom update\n      console.assert(animation[0]!.node.offsetTop >= 0, 'dummy log for forcing dom update');\n      executePhase(phases[actPhase++]);\n\n      // shifted by one since already added through ++\n      if (actPhase < phases.length) {\n        // schedule the next one\n        const next = phases[actPhase]!;\n        currentTimer = self.setTimeout(run, next.delay);\n        return;\n      }\n\n      // last one\n      const body = this.body.classList;\n      Array.from(body).forEach((v) => {\n        if (v.startsWith(cssClass()) && v.endsWith('-animation')) {\n          body.remove(v);\n        }\n      });\n      // clean up\n      animation.forEach(({node, mode}) => {\n        if (mode !== EAnimationMode.UPDATE_REMOVE && mode !== EAnimationMode.HIDE) {\n          return;\n        }\n        node.remove();\n        node.style.transform = null;\n        this.recycle(node);\n      });\n      this.abortAnimation = () => undefined;\n      currentTimer = -1;\n    };\n\n    // execute all phases having a delay of zero\n    while (phases[actPhase].delay === 0) {\n      executePhase(phases[actPhase++]);\n    }\n    // after the initial one\n    const body = this.body;\n    this.body.appendChild(fragment);\n\n    const dummyAnimation: IAnimationItem[] = [];\n    animation = animation.filter((d) => {\n      if (noAnimationChange(d, previousFinder.context.defaultRowHeight, currentFinder.context.defaultRowHeight)) {\n        dummyAnimation.push(d);\n        return false;\n      }\n      return true;\n    });\n\n    if (dummyAnimation.length > 0) {\n      // execute all phases for them\n      phases.slice(actPhase).forEach((phase) => executePhase(phase, dummyAnimation));\n    }\n\n    if (animation.length === 0) {\n      return;\n    }\n\n    body.classList.add(CSS_CLASS_ROW_ANIMATION);\n    (new Set(animation.map((d) => d.mode))).forEach((mode) => {\n      // add class but map to UPDATE only\n      body.classList.add(cssClass(`${EAnimationMode[mode].toLowerCase().split('_')[0]}-animation`));\n    });\n\n    this.abortAnimation = () => {\n      if (currentTimer <= 0) {\n        return;\n      }\n      // abort by removing\n      clearTimeout(currentTimer);\n      currentTimer = -1;\n      // run the last phase\n      actPhase = phases.length - 1;\n      run();\n    };\n\n    // next tick such that DOM will be updated\n    currentTimer = self.setTimeout(run, phases[actPhase].delay);\n  }\n\n  /**\n   * clears the row pool used for faster creation\n   */\n  protected clearPool() {\n    // clear pool\n    this.pool.splice(0, this.pool.length);\n  }\n\n  /**\n   * triggers a revalidation of the current scrolling offest\n   */\n  protected revalidate() {\n    const scroller = this.bodyScroller;\n    this.onScrolledVertically(scroller.scrollTop, scroller.clientHeight, true);\n    this.updateOffset(this.visibleFirstRowPos);\n  }\n\n  /**\n   * scrolling vertically\n   * @param {number} scrollTop top scrolling\n   * @param {number} clientHeight visible height\n   * @param {boolean} isGoingDown hint whether the scrollTop increases\n   * @return {EScrollResult} full in case of a full rebuild or partial update\n   */\n  protected onScrolledVertically(scrollTop: number, clientHeight: number, isGoingDown: boolean): EScrollResult {\n    const shift = this.options.viewportOversize;\n\n    const shiftTop = Math.max(0, scrollTop - shift);\n\n    const scrollResult = this.onScrolledImpl(shiftTop, clientHeight + shift + (scrollTop - shiftTop));\n    for (const mixin of this.mixins) {\n      mixin.onScrolled(isGoingDown, scrollResult);\n    }\n    return scrollResult;\n  }\n\n  private shiftLast(current: number, currentDelta: number) {\n    const b = this.options.batchSize;\n    if (currentDelta >= b) {\n      return current;\n    }\n    const total = this.context.numberOfRows;\n    return Math.min(total - 1, current + (this.options.batchSize - currentDelta));\n  }\n\n  private shiftFirst(current: number, currentFirstRow: number, currentDelta: number) {\n    const b = this.options.batchSize;\n    if (currentDelta >= b || current <= 0) {\n      return {first: current, firstRowPos: currentFirstRow};\n    }\n    const first = Math.max(0, current - (this.options.batchSize - currentDelta));\n\n    const {exceptionsLookup, defaultRowHeight} = this.context;\n    let firstRowPos = currentFirstRow;\n    for (let i = first; i < current; ++i) {\n      if (exceptionsLookup.has(i)) {\n        firstRowPos -= exceptionsLookup.get(i)!;\n      } else {\n        firstRowPos -= defaultRowHeight;\n      }\n    }\n    return {first, firstRowPos};\n  }\n\n  private onScrolledImpl(scrollTop: number, clientHeight: number): EScrollResult {\n    const context = this.context;\n    let {first, last, firstRowPos} = range(scrollTop, clientHeight, context.defaultRowHeight, context.exceptions, context.numberOfRows);\n\n    const visible = this.visible;\n    visible.forcedFirst = first;\n    visible.forcedLast = last;\n\n    if ((first - visible.first) >= 0 && (last - visible.last) <= 0) {\n      //nothing to do\n      return EScrollResult.NONE;\n    }\n\n    let r: EScrollResult = EScrollResult.SOME;\n\n    let torecycle: HTMLElement[] | undefined;\n    let toadd: DocumentFragment | undefined;\n    let toaddBottom = false;\n\n    if (first > visible.last || last < visible.first) {\n      //no overlap, clean and draw everything\n      //console.log(`ff added: ${last - first + 1} removed: ${visibleLast - visibleFirst + 1} ${first}:${last} ${offset}`);\n      //removeRows(visibleFirst, visibleLast);\n\n      torecycle = this.removeAll(false);\n      toadd = this.addAtBottom(first, last, false);\n      toaddBottom = true;\n      r = EScrollResult.ALL;\n    } else if (first < visible.first) {\n      //some first rows missing and some last rows to much\n      //console.log(`up added: ${visibleFirst - first + 1} removed: ${visibleLast - last + 1} ${first}:${last} ${offset}`);\n      const toRemove = visible.last - (last + 1);\n      if (toRemove >= this.options.batchSize) {\n        torecycle = this.removeFromBottom(last + 1, visible.last, false);\n      } else {\n        last = visible.last;\n      }\n\n      const shift = this.shiftFirst(first, firstRowPos, visible.first - 1 - first);\n      first = shift.first;\n      firstRowPos = shift.firstRowPos;\n      toadd = this.addAtBeginning(first, visible.first - 1, false);\n      toaddBottom = false;\n      r = EScrollResult.SOME_TOP;\n    } else {\n      //console.log(`do added: ${last - visibleLast + 1} removed: ${first - visibleFirst + 1} ${first}:${last} ${offset}`);\n      //some last rows missing and some first rows to much\n      const toRemove = first - 1 - visible.first;\n      if (toRemove >= this.options.batchSize) {\n        torecycle = this.removeFromBeginning(visible.first, first - 1, false);\n      } else {\n        first = visible.first;\n        firstRowPos = this.visibleFirstRowPos;\n      }\n\n      last = this.shiftLast(last, last - visible.last + 1);\n\n      toadd = this.addAtBottom(visible.last + 1, last, false);\n      toaddBottom = true;\n      r = EScrollResult.SOME_BOTTOM;\n    }\n\n    visible.first = first;\n    visible.last = last;\n\n    this.updateOffset(firstRowPos);\n    this.manipulate(torecycle, toadd, toaddBottom);\n    return r;\n  }\n\n  private manipulate(toRecycle: HTMLElement[] | undefined, toAdd: DocumentFragment | undefined, bottom: boolean) {\n    if (toRecycle) {\n      for (const item of toRecycle) {\n        item.remove();\n        this.recycle(item);\n      }\n    }\n    if (!toAdd) {\n      return;\n    }\n    if (bottom) {\n      this.body.appendChild(toAdd);\n    } else {\n      this.body.insertBefore(toAdd, this.body.firstChild);\n    }\n  }\n}\n\nexport default ARowRenderer;\n\n\nexport function setTransform(elem: HTMLElement, x: number | string, y: number | string) {\n  const text = `translate(${x}px, ${y}px)`;\n  const anyelem = <any>elem;\n  if (anyelem.__transform__ === text) {\n    return;\n  }\n  anyelem.__transform__ = elem.style.transform = text;\n}\n","// import manually import './style.scss';\n\n/**\n * utility for custom generated CSS rules\n */\n\ninterface ICSSRule {\n  id: string;\n  selector: string;\n  style: Partial<CSSStyleDeclaration>;\n}\n\nfunction assignStyles(target: any, source: any) {\n  for (const key of Object.keys(source)) {\n    const v = <string>source[key];\n\n    if (!v.endsWith(' !important')) {\n      if (target[key] !== v) {\n        target[key] = v;\n      }\n      continue;\n    }\n\n    // handle special important case\n    const plain = v.slice(0, -' !important'.length);\n    if (target[key] === plain) {\n      continue;\n    }\n    target[key] = plain;\n    // see https://gist.github.com/youssman/745578062609e8acac9f\n    const hyphen = key.replace(/([a-zA-Z])(?=[A-Z])/g, '$1-').toLowerCase();\n    target.setProperty(hyphen, plain, 'important');\n  }\n}\n\nexport default class StyleManager {\n  private readonly rules: ICSSRule[] = [];\n  private readonly node: HTMLStyleElement;\n\n  private testVerifyTimeout = -1;\n\n  /**\n   * the parent element to append this managed style\n   * @param {HTMLElement} root\n   */\n  constructor(root: HTMLElement) {\n    this.node = root.ownerDocument!.createElement('style');\n    this.node.appendChild(root.ownerDocument!.createTextNode('')); // for webkit?\n    root.appendChild(this.node);\n  }\n\n  destroy() {\n    this.node.remove();\n  }\n\n  private verifySheet() {\n    const sheet = this.sheet;\n    if (!sheet) {\n      if (this.testVerifyTimeout >= 0) {\n        return;\n      }\n      // test till attached\n      this.testVerifyTimeout = self.setTimeout(() => {\n        this.testVerifyTimeout = -1;\n        this.verifySheet();\n      }, 20);\n      return;\n    }\n    const rules = sheet.cssRules;\n    if (rules.length === this.rules.length && this.rules.every((d, i) => (<CSSStyleRule>rules[i]).selectorText === d.selector)) {\n      // same\n      return;\n    }\n\n    console.warn('invalid sheet rules detected');\n\n    const l = rules.length;\n    for (let i = 0; i < l; ++i) {\n      sheet.deleteRule(i);\n    }\n\n    // create all\n    for (const rule of this.rules) {\n      const index = sheet.insertRule(`${rule.selector} {}`, sheet.cssRules.length);\n      const cssRule = <CSSStyleRule>sheet.cssRules[index];\n      rule.selector = cssRule.selectorText;\n      assignStyles(cssRule.style, rule.style);\n    }\n  }\n\n  private get sheet() {\n    return (<CSSStyleSheet | null>this.node.sheet);\n  }\n\n  private getSheetRule(index: number) {\n    const sheet = this.sheet;\n    return sheet ? <CSSStyleRule>sheet.cssRules[index] : null;\n  }\n\n  /**\n   * add a custom css rule\n   * @param {string} id unique id of the rule for later identification\n   * @param {string} selector the css selector\n   * @param {Partial<CSSStyleDeclaration>} style the style attributes\n   * @returns {string} the id again\n   */\n  addRule(id: string, selector: string, style: Partial<CSSStyleDeclaration>) {\n    this.verifySheet();\n    const sheet = this.sheet;\n    if (!sheet) {\n      // upon next update\n      this.rules.push({id, selector, style});\n      return;\n    }\n    const index = sheet.insertRule(`${selector} {}`, sheet.cssRules.length);\n    const rule = <CSSStyleRule>sheet.cssRules[index];\n    this.rules.push({id, selector: rule.selectorText, style});\n    assignStyles(rule.style, style);\n    return id;\n  }\n\n  /**\n   * updates or add a rule, see @addRule\n   * @param {string} id unique id of the rule for later identification\n   * @param {string} selector the css selector\n   * @param {Partial<CSSStyleDeclaration>} style the style attributes\n   * @returns {string} the id again\n   */\n  updateRule(id: string, selector: string, style: Partial<CSSStyleDeclaration>) {\n    this.verifySheet();\n    const index = this.rules.findIndex((d) => d.id === id);\n    if (index < 0) {\n      return this.addRule(id, selector, style);\n    }\n    const stored = this.rules[index];\n    stored.selector = selector;\n    stored.style = style;\n\n    const rule = this.getSheetRule(index);\n    if (rule) {\n      if (rule.selectorText.replace(/\\s/gm, '') !== selector.replace(/\\s/gm, '')) { //ignoring white space\n        rule.selectorText = selector;\n        stored.selector = rule.selectorText;\n      }\n      assignStyles(rule.style, style);\n    }\n    return id;\n  }\n\n  /**\n   * deletes the given rule by id\n   * @param {string} id the rule to delete\n   */\n  deleteRule(id: string) {\n    this.verifySheet();\n    const index = this.rules.findIndex((d) => d.id === id);\n    if (index < 0) {\n      return;\n    }\n    this.rules.splice(index, 1);\n    const sheet = this.sheet;\n    if (sheet) {\n      sheet.deleteRule(index);\n    }\n  }\n\n  /**\n   * get a list of all registered rule ids\n   * @returns {string[]}\n   */\n  protected get ruleNames() {\n    return this.rules.map((d) => d.id);\n  }\n}\n","import {addScroll} from '../internal';\nimport {cssClass, CSS_CLASS_BODY, CSS_CLASS_FOOTER, CSS_CLASS_HEADER, CSS_CLASS_SCROLLBAR_TESTER, CSS_CLASS_SHIFTED, CSS_CLASS_TBODY, CSS_CLASS_THEAD} from '../styles';\nimport StyleManager from './StyleManager';\n\nexport function setTemplate(root: HTMLElement, id: string) {\n  id = id.startsWith('#') ? id.slice(1) : id;\n  root.innerHTML = `\n  <header id=\"header-${id}\" class=\"${CSS_CLASS_HEADER} ${cssClass(`header-${id}`)}\">\n    <article class=\"${CSS_CLASS_THEAD} ${cssClass(`thead-${id}`)}\"></article>\n  </header>\n  <main id=\"body-${id}\" class=\"${CSS_CLASS_BODY} ${cssClass(`body-${id}`)}\">\n    <footer class=\"${CSS_CLASS_FOOTER}\">&nbsp;</footer>\n    <article class=\"${CSS_CLASS_TBODY} ${cssClass(`tbody-${id}`)}\"></article>\n  </main>`;\n  return root;\n}\n\n/**\n * column base interface\n */\nexport interface IColumn {\n  readonly index: number;\n  readonly id: string;\n  readonly width: number;\n  /**\n   * boolean flag whether when scrolling the column should be sticky\n   */\n  readonly frozen: boolean;\n}\n\ninterface ISelectors {\n  thead: string;\n  tbody: string;\n  tr: string;\n  th: string;\n  td: string;\n}\n\n/**\n * generates the HTML Ids used for the header and body article of a table\n * @param {string} tableId base table id\n * @param {boolean} asSelector flag whether to prepend with # for CSS selector\n * @return {ISelectors} the table ids used for header and body\n */\nexport function tableIds(tableId: string) {\n  return {\n    thead: `thead-${tableId}`,\n    tbody: `tbody-${tableId}`,\n    tr: `tr-${tableId}`,\n    th: `th-${tableId}`,\n    td: `td-${tableId}`\n  };\n}\n\nexport function tableCSSClasses(tableId: string) {\n  const ids = tableIds(tableId);\n  return {\n    thead: cssClass(ids.thead),\n    tbody: cssClass(ids.tbody),\n    tr: cssClass(ids.tr),\n    th: cssClass(ids.th),\n    td: cssClass(ids.td)\n  };\n}\n\n/**\n * utility for custom generated CSS rules with a focus on dynamically generated grid layouts\n */\nexport default class GridStyleManager extends StyleManager {\n\n  readonly id: string;\n\n  readonly ids: ISelectors;\n  readonly cssClasses: ISelectors;\n\n  constructor(root: HTMLElement, id: string) {\n    super(root);\n    this.id = id.startsWith('#') ? id.slice(1) : id;\n\n    this.ids = tableIds(this.id);\n    this.cssClasses = tableCSSClasses(this.id);\n\n    const headerScroller = <HTMLElement>root.getElementsByTagName('header')[0];\n    const bodyScroller = <HTMLElement>root.getElementsByTagName('main')[0];\n\n    // async since style needs to be added to dom first\n    self.setTimeout(() => {\n      const {width} = measureScrollbar(root);\n      this.updateRule('__scollBarFix2', `#header-${this.id} > article:last-of-type`, {\n        borderRight: `${width}px solid transparent`\n      });\n    }, 20);\n\n    let old = headerScroller.scrollLeft;\n\n    // update frozen and sync header with body\n    addScroll(bodyScroller, 'animation', (act) => {\n      const newValue = act.left;\n      if (old !== newValue) {\n        old = headerScroller.scrollLeft = newValue;\n      }\n      root.classList.toggle(CSS_CLASS_SHIFTED, act.left > 0);\n    });\n  }\n\n  /**\n   * updates the column widths and default row height for a table\n   * @param {number} defaultRowHeight\n   * @param {IColumn[]} columns\n   * @param {number} frozenShift shift frozen colums\n   * @param {string} tableId optional tableId in case of multiple tables within the same engine\n   * @param {string} unit\n   */\n  update(defaultRowHeight: number, columns: IColumn[], padding: (index: number) => number, frozenShift: number, tableId: string, unit: string = 'px') {\n    const ids = tableIds(tableId);\n    const selectors = tableCSSClasses(tableId);\n\n    const total = `${columns.reduce((a, b, i) => a + b.width + padding(i), 0)}${unit}`;\n\n    this.updateRule(`__heightsRule${selectors.tr}`, `.${selectors.tr}`, {\n      height: `${defaultRowHeight}px`,\n      width: total\n    });\n\n    this.updateRule(`__heightsRule${selectors.tbody}`, `#${ids.tbody}`, {\n      width: total\n    });\n\n    this.updateColumns(columns, padding, selectors, frozenShift, unit);\n  }\n\n  /**\n   * removes a given tableId if not needed anymore\n   * @param {string} tableId tableId to remove\n   */\n  remove(tableId: string) {\n    const selectors = tableCSSClasses(tableId);\n    this.deleteRule(`__heightsRule${selectors.tr}`);\n    this.deleteRule(`__heightsRule${selectors.tbody}`);\n\n    const prefix = `__col${selectors.td}_`;\n    const rules = this.ruleNames.reduce((a, b) => a + (b.startsWith(prefix) ? 1 : 0), 0);\n    // reset\n    for (let i = 0; i < rules; ++i) {\n      this.deleteRule(`${prefix}${i}`);\n    }\n  }\n\n  private updateColumns(columns: IColumn[], padding: (index: number) => number, cssSelectors: ISelectors, frozenShift: number, unit: string = 'px') {\n    const prefix = `__col${cssSelectors.td}_`;\n    const rules = new Set(this.ruleNames.filter((d) => d.startsWith(prefix)));\n\n    let acc = 0;\n    columns.forEach((c, i) => {\n      const th = `.${cssSelectors.th}[data-id=\"${c.id}\"]`;\n      const thStyles: Partial<CSSStyleDeclaration> = {\n        width: `${c.width}${unit}`\n      };\n      const td = `.${cssSelectors.td}[data-id=\"${c.id}\"]`;\n      const tdStyles: Partial<CSSStyleDeclaration> = {\n        transform: `translateX(${acc}${unit})`,\n        width: `${c.width}${unit}`\n      };\n\n      if (c.frozen) {\n        thStyles.left = `${acc}px`;\n\n        this.updateRule(`${prefix}${td}F`, `.${cssSelectors.td}.${CSS_CLASS_SHIFTED}[data-id=\"${c.id}\"]`, {\n          transform: `translateX(0)`,\n          left: `${acc + frozenShift}${unit}`\n        });\n        rules.delete(`${prefix}${td}F`);\n      }\n\n      this.updateRule(`${prefix}${th}`, th, thStyles);\n      rules.delete(`${prefix}${th}`);\n      this.updateRule(`${prefix}${td}`, td, tdStyles);\n      rules.delete(`${prefix}${td}`);\n      acc += c.width + padding(i);\n    });\n\n    rules.forEach((d) => this.deleteRule(d));\n  }\n}\n/**\n * based on Slick grid implementation\n * @param doc\n */\nfunction measureScrollbar(root: HTMLElement) {\n  const body = root.ownerDocument!.body;\n  body.insertAdjacentHTML('beforeend', `\n    <div class=\"${CSS_CLASS_SCROLLBAR_TESTER}\"><div></div></div>\n  `);\n  const elem = <HTMLElement>body.lastElementChild!;\n\n  const width = elem.offsetWidth - elem.clientWidth;\n  const height = elem.offsetHeight - elem.clientHeight;\n\n  elem.remove();\n\n  return {width, height};\n}\n","import {ABORTED, IAbortAblePromise, IAsyncUpdate, isAbortAble, isAsyncUpdate} from '../../abortAble';\nimport {isLoadingCell} from '../../ARowRenderer';\nimport {clear, IScrollInfo} from '../../internal';\nimport {isScrollEventWaiting} from '../../internal/scroll';\nimport {IExceptionContext, range, updateFrozen} from '../../logic';\nimport {EScrollResult, IMixin, IMixinAdapter, IMixinClass} from '../../mixin';\nimport {IColumn} from '../../style';\nimport GridStyleManager from '../../style/GridStyleManager';\nimport {cssClass, CSS_CLASS_FROZEN, CSS_CLASS_LOADING, CSS_CLASS_SHIFTED, CSS_CLASS_TD, CSS_CLASS_TH} from '../../styles';\n\nconst debug = false;\n\nexport interface ICellAdapterRenderContext<T extends IColumn> extends IExceptionContext {\n  readonly column: IExceptionContext;\n  readonly columns: T[];\n}\n\n/**\n * @internal\n */\nexport abstract class ACellAdapter<T extends IColumn> {\n  /**\n   * pool of cells per column\n   * @type {Array}\n   */\n  private readonly cellPool: HTMLElement[][] = [];\n  private readonly loading = new WeakMap<HTMLElement, IAbortAblePromise<void>>();\n\n\n  readonly visibleColumns = {\n    frozen: <number[]>[], // column indices that are visible even tho they would be out of range\n    first: 0,\n    forcedFirst: 0,\n    last: -1,\n    forcedLast: -1\n  };\n  visibleFirstColumnPos = 0;\n\n  private horizontallyShifted: boolean = false;\n  private readonly columnAdapter: IMixinAdapter;\n  private readonly columnMixins: IMixin[];\n\n  private readonly columnFragment: DocumentFragment;\n\n  constructor(protected readonly header: HTMLElement, protected readonly style: GridStyleManager, private readonly tableId: string, ...mixinClasses: IMixinClass[]) {\n\n    this.columnAdapter = this.createColumnAdapter();\n    this.columnMixins = mixinClasses.map((mixinClass) => new mixinClass(this.columnAdapter));\n\n    this.columnFragment = header.ownerDocument!.createDocumentFragment();\n  }\n\n  leftShift() {\n    const ctx = this.context;\n    const frozen = this.visibleColumns.frozen.reduce((a, d) => a + ctx.columns[d].width + ctx.column.padding(d), 0);\n    return this.visibleFirstColumnPos - frozen;\n  }\n\n  protected get headerScroller() {\n    return <HTMLElement>this.header.parentElement!;\n  }\n\n  addColumnMixin(mixinClass: IMixinClass, options?: any) {\n    this.columnMixins.push(new mixinClass(this.columnAdapter, options));\n  }\n\n  private createColumnAdapter(): IMixinAdapter {\n    const r: any = {\n      visible: this.visibleColumns,\n      addAtBeginning: this.addColumnAtStart.bind(this),\n      addAtBottom: this.addColumnAtEnd.bind(this),\n      removeFromBeginning: this.removeColumnFromStart.bind(this),\n      removeFromBottom: this.removeColumnFromEnd.bind(this),\n      updateOffset: this.updateColumnOffset.bind(this),\n      scroller: this.headerScroller,\n      syncFrozen: this.syncFrozen.bind(this),\n      isScrollEventWaiting: () => isScrollEventWaiting(this.headerScroller, 'animation')\n    };\n    Object.defineProperties(r, {\n      visibleFirstRowPos: {\n        get: () => this.visibleFirstColumnPos,\n        enumerable: true\n      },\n      context: {\n        get: () => this.context.column,\n        enumerable: true\n      },\n      scrollOffset: {\n        get: () => this.lastScrollInfo ? this.lastScrollInfo.left : 0,\n        enumerable: true\n      },\n      scrollTotal: {\n        get: () => this.lastScrollInfo ? this.lastScrollInfo.width : this.headerScroller.clientWidth,\n        enumerable: true\n      }\n    });\n    return r;\n  }\n\n  init() {\n    const context = this.context;\n    this.style.update(context.defaultRowHeight - context.padding(-1), context.columns, context.column.padding, 0, this.tableId);\n\n    context.columns.forEach(() => {\n      //init pool\n      this.cellPool.push([]);\n    });\n  }\n\n  onScrolledHorizontally(scrollLeft: number, clientWidth: number, isGoingRight: boolean) {\n    const scrollResult = this.onScrolledHorizontallyImpl(scrollLeft, clientWidth);\n    for (const mixin of this.columnMixins) {\n      mixin.onScrolled(isGoingRight, scrollResult);\n    }\n    return scrollResult;\n  }\n\n  /**\n   * the current render context, upon change `recreate` the whole table\n   * @returns {ICellRenderContext}\n   */\n  protected abstract get context(): ICellAdapterRenderContext<T>;\n\n  protected abstract get body(): HTMLElement;\n\n  protected abstract get lastScrollInfo(): IScrollInfo | null;\n\n  protected abstract createHeader(document: Document, column: T): HTMLElement | IAsyncUpdate<HTMLElement>;\n\n  protected abstract updateHeader(node: HTMLElement, column: T): HTMLElement | IAsyncUpdate<HTMLElement> | void;\n\n  protected abstract createCell(document: Document, index: number, column: T): HTMLElement | IAsyncUpdate<HTMLElement>;\n\n  protected abstract updateCell(node: HTMLElement, index: number, column: T): HTMLElement | IAsyncUpdate<HTMLElement> | void;\n\n  protected abstract forEachRow(callback: (row: HTMLElement, rowIndex: number) => void): void;\n\n  private removeColumnFromStart(from: number, to: number, frozenShift: number = this.visibleColumns.frozen.length) {\n    this.forEachRow((row: HTMLElement) => {\n      this.removeCellFromStart(row, from, to, frozenShift);\n    });\n    if (debug) {\n      this.verifyRows();\n    }\n  }\n\n  private removeCellFromStart(row: HTMLElement, from: number, to: number, frozenShift: number) {\n    for (let i = from; i <= to; ++i) {\n      const node = <HTMLElement>(frozenShift === 0 ? row.firstElementChild : row.children[frozenShift]);\n      node.remove();\n      this.recycleCell(node, i);\n    }\n    if (debug) {\n      verifyRow(row, -1, this.context.columns);\n    }\n  }\n\n  private removeColumnFromEnd(from: number, to: number) {\n    this.forEachRow((row: HTMLElement) => {\n      this.removeCellFromEnd(row, from, to);\n    });\n    if (debug) {\n      this.verifyRows();\n    }\n  }\n\n  private removeCellFromEnd(row: HTMLElement, from: number, to: number) {\n    for (let i = to; i >= from; --i) {\n      const node = <HTMLElement>row.lastElementChild;\n      node.remove();\n      this.recycleCell(node, i);\n    }\n    if (debug) {\n      verifyRow(row, -1, this.context.columns);\n    }\n  }\n\n  private removeFrozenCells(row: HTMLElement, columnIndices: number[], shift: number) {\n    for (const columnIndex of columnIndices) {\n      const node = <HTMLElement>row.children[shift]!;\n      node.remove();\n      this.recycleCell(node, columnIndex);\n    }\n    if (debug) {\n      verifyRow(row, -1, this.context.columns);\n    }\n  }\n\n  private removeFrozenColumns(columnIndices: number[], shift: number) {\n    this.forEachRow((row: HTMLElement) => {\n      this.removeFrozenCells(row, columnIndices, shift);\n    });\n    if (debug) {\n      this.verifyRows();\n    }\n  }\n\n  private removeAllColumns(includingFrozen: boolean) {\n    this.forEachRow((row: HTMLElement) => {\n      this.removeAllCells(row, includingFrozen);\n    });\n    if (debug) {\n      this.verifyRows();\n    }\n  }\n\n  private removeAllCells(row: HTMLElement, includingFrozen: boolean, shift = this.visibleColumns.first) {\n    const arr = <HTMLElement[]>Array.from(row.children);\n    const frozen = this.visibleColumns.frozen;\n    clear(row);\n\n    if (includingFrozen || frozen.length === 0) {\n      for (const i of frozen) {\n        this.recycleCell(arr.shift()!, i);\n      }\n    } else {\n      // have frozen and keep them, so readd them\n      for (const _ of frozen) {\n        row.appendChild(arr.shift()!);\n      }\n    }\n    arr.forEach((item, i) => {\n      this.recycleCell(item, i + shift);\n    });\n\n    if (debug) {\n      verifyRow(row, -1, this.context.columns);\n    }\n  }\n\n  private selectProxyCell(row: number, column: number, columns: T[]): {item: HTMLElement, ready: IAbortAblePromise<void> | void} {\n    const pool = this.cellPool[column];\n    const columnObj = columns[column];\n\n    let item: HTMLElement;\n    let ready: IAbortAblePromise<void> | void;\n    const pooled = pool.pop();\n\n    const r = pooled ? this.updateCell(pooled, row, columnObj) || pooled : this.createCell(this.header.ownerDocument!, row, columnObj);\n    if (isAsyncUpdate(r)) {\n      item = r.item;\n      ready = r.ready;\n    } else {\n      item = r;\n    }\n    if (item !== pooled) {\n      item.dataset.id = columnObj.id;\n      item.classList.add(CSS_CLASS_TD, this.style.cssClasses.td, cssClass(`td-${this.tableId}`));\n    }\n    this.updateShiftedState(item, columnObj);\n    return {item, ready};\n  }\n\n  handleCellReady(item: HTMLElement, ready: IAbortAblePromise<void>, column: number = -1) {\n    item.classList.add(CSS_CLASS_LOADING);\n    const abort = ready;\n    //lazy loading\n\n    this.loading.set(item, abort);\n    abort.then((result) => {\n      this.loading.delete(item);\n      item.classList.remove(CSS_CLASS_LOADING);\n      if (result === ABORTED && column >= 0) {\n        //aborted can recycle the real one\n        this.cellPool[column].push(item);\n      }\n    });\n    return item;\n  }\n\n  private selectCell(row: number, column: number, columns: T[]): HTMLElement {\n    const {item, ready} = this.selectProxyCell(row, column, columns);\n    if (!isAbortAble(ready)) {\n      return item;\n    }\n    return this.handleCellReady(item, ready, column);\n  }\n\n  protected updateShiftedState(node: HTMLElement, col: IColumn) {\n    node.classList.toggle(CSS_CLASS_SHIFTED, col.frozen && this.horizontallyShifted);\n  }\n\n  recycleCell(item: HTMLElement, column: number = -1) {\n    // check if the dom element is still being manipulated\n    if (this.loading.has(item)) {\n      const abort = this.loading.get(item)!;\n      abort.abort();\n    } else if (!isLoadingCell(item) && column >= 0) {\n      this.cellPool[column].push(item);\n    }\n  }\n\n  private addColumnAtStart(from: number, to: number, frozenShift: number = this.visibleColumns.frozen.length) {\n    const {columns} = this.context;\n    this.forEachRow((row: HTMLElement, rowIndex: number) => {\n      this.addCellAtStart(row, rowIndex, from, to, frozenShift, columns);\n    });\n    if (debug) {\n      this.verifyRows();\n    }\n  }\n\n  private addCellAtStart(row: HTMLElement, rowIndex: number, from: number, to: number, frozenShift: number, columns: T[]) {\n    if (debug) {\n      verifyRow(row, rowIndex, this.context.columns);\n    }\n    for (let i = to; i >= from; --i) {\n      const cell = this.selectCell(rowIndex, i, columns);\n      row.insertBefore(cell, frozenShift > 0 ? row.children[frozenShift] : row.firstChild);\n    }\n    if (debug) {\n      verifyRow(row, rowIndex, this.context.columns);\n    }\n  }\n\n  private insertFrozenCells(row: HTMLElement, rowIndex: number, columnIndices: number[], shift: number, columns: T[]) {\n    const before = row.children[shift];\n    for (const i of columnIndices) {\n      const cell = this.selectCell(rowIndex, i, columns);\n      if (before) {\n        row.insertBefore(cell, before);\n      } else {\n        row.appendChild(cell);\n      }\n    }\n  }\n\n  private insertFrozenColumns(columnIndices: number[], shift: number) {\n    const {columns} = this.context;\n    this.forEachRow((row: HTMLElement, rowIndex: number) => {\n      this.insertFrozenCells(row, rowIndex, columnIndices, shift, columns);\n    });\n  }\n\n  private addColumnAtEnd(from: number, to: number) {\n    const {columns} = this.context;\n    this.forEachRow((row: HTMLElement, rowIndex: number) => {\n      this.addCellAtEnd(row, rowIndex, from, to, columns);\n    });\n    if (debug) {\n      this.verifyRows();\n    }\n  }\n\n  private verifyRows() {\n    const {columns} = this.context;\n    this.forEachRow((row, rowIndex) => verifyRow(row, rowIndex, columns));\n  }\n\n  private addCellAtEnd(row: HTMLElement, rowIndex: number, from: number, to: number, columns: T[]) {\n    for (let i = from; i <= to; ++i) {\n      const cell = this.selectCell(rowIndex, i, columns);\n      row.appendChild(cell);\n    }\n    if (debug) {\n      verifyRow(row, rowIndex, this.context.columns);\n    }\n  }\n\n  updateHeaders() {\n    const {columns} = this.context;\n    Array.from(this.header.children).forEach((node: Element, i) => {\n      const base = <HTMLElement>node;\n      const col = columns[i];\n      const r = this.updateHeader(base, col);\n      let n: HTMLElement;\n      if (isAsyncUpdate(r)) {\n        n = this.handleCellReady(r.item, r.ready, -1);\n      } else {\n        n = r || base;\n      }\n      if (n === base) {\n        return;\n      }\n      n.dataset.id = col.id;\n      n.classList.add(CSS_CLASS_TH, this.style.cssClasses.th, cssClass(`th-${this.tableId}`));\n      this.header.replaceChild(base, n);\n    });\n  }\n\n  recreate(left: number, width: number) {\n    const context = this.context;\n\n    this.style.update(context.defaultRowHeight - context.padding(-1), context.columns, context.column.padding, -this.leftShift(), this.tableId);\n\n\n    this.clearPool();\n    // init pool\n    for (let i = this.cellPool.length; i < context.columns.length; ++i) {\n      this.cellPool.push([]);\n    }\n\n    //create all header columns\n    {\n      const fragment = this.columnFragment;\n      const document = fragment.ownerDocument!;\n\n      // create lookup cache to reuse headers\n      const ids = new Map<string, HTMLElement>();\n      while (this.header.lastChild) {\n        const c = <HTMLElement>this.header.lastChild;\n        this.header.removeChild(c);\n        ids.set(c.dataset.id!, c);\n      }\n\n      context.columns.forEach((col) => {\n        const existing = ids.get(col.id);\n        const r = existing ? this.updateHeader(existing, col) || existing : this.createHeader(document, col);\n        let n: HTMLElement;\n        if (isAsyncUpdate(r)) {\n          n = this.handleCellReady(r.item, r.ready, -1);\n        } else {\n          n = r;\n        }\n        if (n !== existing) {\n          n.dataset.id = col.id;\n          n.classList.add(CSS_CLASS_TH, this.style.cssClasses.th, cssClass(`th-${this.tableId}`));\n        }\n        fragment.appendChild(n);\n      });\n      this.header.appendChild(fragment);\n    }\n\n    const {first, last, firstRowPos} = range(left, width, context.column.defaultRowHeight, context.column.exceptions, context.column.numberOfRows);\n\n    this.visibleColumns.first = this.visibleColumns.forcedFirst = first;\n    this.visibleColumns.last = this.visibleColumns.forcedLast = last;\n    if (context.columns.some((c) => c.frozen)) {\n      const {target} = updateFrozen([], context.columns, first);\n      this.visibleColumns.frozen = target;\n    } else {\n      this.visibleColumns.frozen = [];\n    }\n    this.updateColumnOffset(firstRowPos);\n  }\n\n  clearPool() {\n    this.cellPool.forEach((p) => p.splice(0, p.length));\n  }\n\n  protected updateColumnOffset(firstColumnPos: number) {\n    const changed = firstColumnPos !== this.visibleFirstColumnPos;\n    this.visibleFirstColumnPos = firstColumnPos;\n    if (changed) {\n      const context = this.context;\n      this.style.update(context.defaultRowHeight - context.padding(-1), context.columns, context.column.padding, -this.leftShift(), this.tableId);\n    }\n  }\n\n  createRow(node: HTMLElement, rowIndex: number): void {\n    const {columns} = this.context;\n    const visible = this.visibleColumns;\n\n    if (visible.frozen.length > 0) {\n      for (const i of visible.frozen) {\n        const cell = this.selectCell(rowIndex, i, columns);\n        node.appendChild(cell);\n      }\n    }\n    for (let i = visible.first; i <= visible.last; ++i) {\n      const cell = this.selectCell(rowIndex, i, columns);\n      node.appendChild(cell);\n    }\n  }\n\n  updateRow(node: HTMLElement, rowIndex: number): void {\n    const {columns} = this.context;\n    const visible = this.visibleColumns;\n\n    //columns may not match anymore if it is a pooled item a long time ago\n\n    switch (node.childElementCount) {\n      case 0:\n        if (visible.frozen.length > 0) {\n          this.insertFrozenCells(node, rowIndex, visible.frozen, 0, columns);\n        }\n        this.addCellAtEnd(node, rowIndex, visible.first, visible.last, columns);\n        break;\n      case 1:\n        const old = <HTMLElement>node.firstElementChild;\n        const id = old.dataset.id!;\n        const columnIndex = columns.findIndex((c) => c.id === id);\n        node.removeChild(old);\n        if (columnIndex >= 0) {\n          this.recycleCell(old, columnIndex);\n        }\n\n        if (visible.frozen.length > 0) {\n          this.insertFrozenCells(node, rowIndex, visible.frozen, 0, columns);\n        }\n        this.addCellAtEnd(node, rowIndex, visible.first, visible.last, columns);\n        break;\n      default:\n        this.mergeColumns(node, rowIndex);\n        break;\n    }\n  }\n\n  private mergeColumns(node: HTMLElement, rowIndex: number) {\n    const {columns} = this.context;\n    const visible = this.visibleColumns;\n    const ids = new Map<string, HTMLElement>();\n\n    while (node.lastChild) {\n      const c = <HTMLElement>node.lastChild;\n      node.removeChild(c);\n      ids.set(c.dataset.id!, c);\n    }\n\n    const updateImpl = (i: number) => {\n      const col = columns[i];\n      const existing = ids.get(col.id);\n      if (!existing) {\n        const cell = this.selectCell(rowIndex, i, columns);\n        node.appendChild(cell);\n        return;\n      }\n      ids.delete(col.id);\n      const r = this.updateCell(existing, rowIndex, col) || existing;\n      let cell: HTMLElement;\n      if (isAsyncUpdate(r)) {\n        cell = this.handleCellReady(r.item, r.ready, i);\n      } else {\n        cell = r;\n      }\n      if (cell && cell !== existing) {\n        cell.dataset.id = col.id;\n        cell.classList.add(CSS_CLASS_TD, this.style.cssClasses.td, cssClass(`td-${this.tableId}`));\n      }\n      this.updateShiftedState(cell, col);\n      node.appendChild(cell);\n    };\n\n    for (const frozen of visible.frozen) {\n      updateImpl(frozen);\n    }\n    for (let i = visible.first; i <= visible.last; ++i) {\n      updateImpl(i);\n    }\n\n    if (ids.size === 0) {\n      return;\n    }\n\n    // recycle\n    const byId = new Map(columns.map((d, i) => <[string, number]>[d.id, i]));\n    ids.forEach((node, key) => {\n      const index = byId.get(key);\n      if (index != null && index >= 0) {\n        this.recycleCell(node, index);\n      }\n    });\n  }\n\n  private updateShiftedStates() {\n    if (!this.context.columns.some((d) => d.frozen)) {\n      return;\n    }\n    const shifted = this.horizontallyShifted;\n    const clazz = CSS_CLASS_SHIFTED;\n    if (shifted) {\n      const headers = Array.from(this.header.querySelectorAll(`.${CSS_CLASS_FROZEN}:not(.${clazz})`));\n      const bodies = Array.from(this.body.querySelectorAll(`.${CSS_CLASS_FROZEN}:not(.${clazz})`));\n      for (const item of headers) {\n        item.classList.add(clazz);\n      }\n      for (const item of bodies) {\n        item.classList.add(clazz);\n      }\n    } else {\n      const headers = Array.from(this.header.querySelectorAll(`.${CSS_CLASS_FROZEN}.${clazz}`));\n      const bodies = Array.from(this.body.querySelectorAll(`.${CSS_CLASS_FROZEN}.${clazz}`));\n      for (const item of headers) {\n        item.classList.remove(clazz);\n      }\n      for (const item of bodies) {\n        item.classList.remove(clazz);\n      }\n    }\n  }\n\n  private syncFrozen(first: number) {\n    const {columns} = this.context;\n    const visible = this.visibleColumns;\n\n    if (!columns.some((d) => d.frozen)) {\n      return 0;\n    }\n    if (first === 0) {\n      if (visible.frozen.length > 0) {\n        this.removeFrozenColumns(visible.frozen, 0);\n        visible.frozen = [];\n      }\n      return 0;\n    }\n    const old = visible.frozen.length;\n    const {target, added, removed} = updateFrozen(visible.frozen, columns, first);\n    if (removed.length > 0) {\n      this.removeFrozenColumns(removed, old - removed.length);\n    }\n    if (added.length > 0) {\n      this.insertFrozenColumns(added, old - removed.length);\n    }\n    visible.frozen = target;\n    return target.length;\n  }\n\n  private onScrolledHorizontallyImpl(scrollLeft: number, clientWidth: number): EScrollResult {\n    const shiftingChanged = this.horizontallyShifted !== scrollLeft > 0;\n    this.horizontallyShifted = scrollLeft > 0;\n\n    const {column} = this.context;\n    const {first, last, firstRowPos} = range(scrollLeft, clientWidth, column.defaultRowHeight, column.exceptions, column.numberOfRows);\n\n    const visible = this.visibleColumns;\n    visible.forcedFirst = first;\n    visible.forcedLast = last;\n\n    if ((first - visible.first) >= 0 && (last - visible.last) <= 0) {\n      //nothing to do\n      if (shiftingChanged) {\n        this.updateShiftedStates();\n      }\n      return EScrollResult.NONE;\n    }\n\n    let r: EScrollResult = EScrollResult.SOME;\n\n    const frozenShift = this.syncFrozen(first);\n\n    if (first > visible.last || last < visible.first) {\n      //no overlap, clean and draw everything\n      //console.log(`ff added: ${last - first + 1} removed: ${visibleLast - visibleFirst + 1} ${first}:${last} ${offset}`);\n      //removeRows(visibleFirst, visibleLast);\n      this.removeAllColumns(false);\n      this.addColumnAtEnd(first, last);\n      r = EScrollResult.ALL;\n    } else if (first < visible.first) {\n      //some first rows missing and some last rows to much\n      //console.log(`up added: ${visibleFirst - first + 1} removed: ${visibleLast - last + 1} ${first}:${last} ${offset}`);\n      this.removeColumnFromEnd(last + 1, visible.last);\n      this.updateShiftedStates();\n      this.addColumnAtStart(first, visible.first - 1, frozenShift);\n      r = EScrollResult.SOME_TOP;\n    } else {\n      //console.log(`do added: ${last - visibleLast + 1} removed: ${first - visibleFirst + 1} ${first}:${last} ${offset}`);\n      //some last rows missing and some first rows to much\n      this.removeColumnFromStart(visible.first, first - 1, frozenShift);\n      this.updateShiftedStates();\n      this.addColumnAtEnd(visible.last + 1, last);\n      r = EScrollResult.SOME_BOTTOM;\n    }\n\n    visible.first = first;\n    visible.last = last;\n\n    this.updateColumnOffset(firstRowPos);\n\n    return r;\n  }\n\n}\n\n/**\n * @internal\n */\nexport default ACellAdapter;\n\nfunction verifyRow(row: HTMLElement, index: number, columns: IColumn[]) {\n  const cols = <HTMLElement[]>Array.from(row.children);\n  //sort incrementally\n  if (cols.length <= 1) {\n    return;\n  }\n  const colObjs = cols.map((c) => columns.find((d) => d.id === c.dataset.id)!);\n  console.assert(colObjs.every((d) => Boolean(d)), 'all columns must exist', index);\n  console.assert(colObjs.every((d, i) => i === 0 || d.index >= colObjs[i - 1]!.index), 'all columns in ascending order', index);\n  console.assert((new Set(colObjs)).size === colObjs.length, 'unique columns', colObjs);\n}\n","import {IAbortAblePromise, IAsyncUpdate} from './abortAble';\nimport {IAnimationContext} from './animation';\nimport {ARowRenderer, IRowRendererOptions} from './ARowRenderer';\nimport {addScroll} from './internal';\nimport {EScrollResult, IMixinClass} from './mixin';\nimport {GridStyleManager, IColumn, setTemplate} from './style';\nimport {cssClass} from './styles';\nimport ACellAdapter, {ICellAdapterRenderContext} from './table/internal/ACellAdapter';\n\nexport {isLoadingCell} from './ARowRenderer';\nexport declare type ICellRenderContext<T extends IColumn> = ICellAdapterRenderContext<T>;\n\n/**\n * a @see ARowRenderer which manages multiple columns per row\n */\nexport abstract class ACellRenderer<T extends IColumn> extends ARowRenderer {\n\n  protected readonly style: GridStyleManager;\n\n  private readonly cell: ACellAdapter<T>;\n\n  constructor(protected readonly root: HTMLElement, htmlId: string, options: Partial<IRowRendererOptions> = {}) {\n    super(<HTMLElement>setTemplate(root, htmlId).querySelector('main > article'), options);\n    root.classList.add(cssClass(), 'lineup-engine');\n\n    this.style = new GridStyleManager(this.root, htmlId);\n\n    const that = this;\n\n    class LocalCell extends ACellAdapter<T> {\n      protected get context(): ICellAdapterRenderContext<T> {\n        return that.context;\n      }\n\n      protected get body() {\n        return that.body;\n      }\n\n      protected get lastScrollInfo() {\n        return that.lastScrollInfo;\n      }\n\n      protected createHeader(document: Document, column: T) {\n        return that.createHeader(document, column);\n      }\n\n      protected updateHeader(node: HTMLElement, column: T) {\n        return that.updateHeader(node, column);\n      }\n\n      protected createCell(document: Document, index: number, column: T) {\n        return that.createCell(document, index, column);\n      }\n\n      protected updateCell(node: HTMLElement, index: number, column: T) {\n        return that.updateCell(node, index, column);\n      }\n\n      protected updateColumnOffset(firstColumnPos: number) {\n        super.updateColumnOffset(firstColumnPos);\n        that.updateOffset(that.visibleFirstRowPos);\n      }\n\n      protected forEachRow(callback: (row: HTMLElement, rowIndex: number) => void) {\n        return that.forEachRow(callback);\n      }\n    }\n\n    this.cell = new LocalCell(this.header, this.style, this.style.id, ... (options.mixins || []));\n  }\n\n  protected get idPrefix() {\n    return this.style.id;\n  }\n\n  /**\n   * get the header root element\n   * @returns {HTMLElement}\n   */\n  protected get header() {\n    return <HTMLElement>this.root.querySelector('header > article');\n  }\n\n  /**\n   * get the header scrolling element, i.e its parent\n   * @returns {HTMLElement}\n   */\n  protected get headerScroller() {\n    return <HTMLElement>this.root.getElementsByTagName('header')[0];\n  }\n\n  protected get visibleColumns() {\n    return this.cell.visibleColumns;\n  }\n\n  protected get visibleFirstColumnPos() {\n    return this.cell.visibleFirstColumnPos;\n  }\n\n  /**\n   * add another column mixin\n   * @param {IMixinClass} mixinClass mixing class to instantiate\n   * @param options optional options\n   */\n  protected addColumnMixin(mixinClass: IMixinClass, options?: any) {\n    this.cell.addColumnMixin(mixinClass, options);\n  }\n\n  /**\n   * initialized this renderer\n   */\n  protected init() {\n\n    this.cell.init();\n\n    const scroller = <HTMLElement>this.body.parentElement;\n\n    let old = addScroll(scroller, this.options.async, (act) => {\n      if (Math.abs(old.left - act.left) < this.options.minScrollDelta && Math.abs(old.width - act.width) < this.options.minScrollDelta) {\n        return;\n      }\n      const isGoingRight = act.left > old.left;\n      old = act;\n      this.onScrolledHorizontally(act.left, act.width, isGoingRight);\n    });\n\n    super.init();\n  }\n\n  destroy() {\n    super.destroy();\n    this.root.remove();\n  }\n\n  /**\n   * will be called when scrolled horizontally\n   * @param {number} scrollLeft\n   * @param {number} clientWidth\n   * @param {boolean} isGoingRight\n   * @returns {EScrollResult}\n   */\n  protected onScrolledHorizontally(scrollLeft: number, clientWidth: number, isGoingRight: boolean): EScrollResult {\n    return this.cell.onScrolledHorizontally(scrollLeft, clientWidth, isGoingRight);\n  }\n\n  /**\n   * the current render context, upon change `recreate` the whole table\n   * @returns {ICellRenderContext}\n   */\n  protected abstract get context(): ICellRenderContext<T>;\n\n  /**\n   * create a new header node for the given column\n   * @param {Document} document document to create nodes of\n   * @param {T} column the column to create the header for\n   * @returns {HTMLElement} the node representing the header\n   */\n  protected abstract createHeader(document: Document, column: T): HTMLElement | IAsyncUpdate<HTMLElement>;\n\n  /**\n   * updates the given header node with the given column\n   * @param {HTMLElement} node node to update\n   * @param {T} column the column to represents\n   * @returns {HTMLElement | void} an optional new replacement node for the header\n   */\n  protected abstract updateHeader(node: HTMLElement, column: T): HTMLElement | IAsyncUpdate<HTMLElement> | void;\n\n  /**\n   * create a new cell node fo the given row index and column\n   * @param {Document} document document the create nodes of\n   * @param {number} index the current row index\n   * @param {T} column the current column\n   * @returns {HTMLElement} the node representing the cell\n   */\n  protected abstract createCell(document: Document, index: number, column: T): HTMLElement | IAsyncUpdate<HTMLElement>;\n\n  /**\n   * updates the given cell node with the given row index and column\n   * @param {HTMLElement} node node to update\n   * @param {number} index row index to use\n   * @param {T} column column to use\n   * @returns {HTMLElement | void} an optional new replacement node for the header\n   */\n  protected abstract updateCell(node: HTMLElement, index: number, column: T): HTMLElement | IAsyncUpdate<HTMLElement> | void;\n\n  /**\n   * trigger to update all headers\n   */\n  protected updateHeaders() {\n    this.cell.updateHeaders();\n  }\n\n  protected handleCellReady(item: HTMLElement, ready: IAbortAblePromise<void>, column: number = -1) {\n    return this.cell.handleCellReady(item, ready, column);\n  }\n\n  protected recycleCell(item: HTMLElement, column: number = -1) {\n    this.cell.recycleCell(item, column);\n  }\n\n  /**\n   * triggers to update all column widths\n   */\n  protected updateColumnWidths() {\n    const context = this.context;\n    this.style.update(context.defaultRowHeight - context.padding(-1), context.columns, context.column.padding, -this.cell.leftShift(), this.idPrefix);\n  }\n\n  protected updateSizer(firstRowPos: number) {\n    const ctx = this.context;\n    const totalHeight = ctx.totalHeight;\n    const totalWidth = ctx.column.totalHeight;\n\n    this.updateShifts(firstRowPos, this.cell.leftShift());\n    this.bodySizer.style.transform = `translate(${Math.max(0, totalWidth - 1).toFixed(0)}px, ${Math.max(0, totalHeight - 1).toFixed(0)}px)`;\n  }\n\n  protected updateShifts(top: number, left: number) {\n    this.body.style.transform = `translate(${left.toFixed(0)}px, ${top.toFixed(0)}px)`;\n  }\n\n  /**\n   * triggers to recreate the whole table\n   * @param {IAnimationContext} ctx optional animation context\n   */\n  protected recreate(ctx?: IAnimationContext) {\n    const scroller = this.bodyScroller;\n    const oldLeft = scroller.scrollLeft;\n    this.cell.recreate(oldLeft, scroller.clientWidth);\n\n    super.recreate(ctx);\n    // restore left\n    scroller.scrollLeft = oldLeft;\n  }\n\n  protected clearPool() {\n    super.clearPool();\n    this.cell.clearPool();\n  }\n\n  protected createRow(node: HTMLElement, rowIndex: number): void {\n    this.cell.createRow(node, rowIndex);\n  }\n\n  protected updateRow(node: HTMLElement, rowIndex: number): void {\n    this.cell.updateRow(node, rowIndex);\n  }\n}\n\nexport default ACellRenderer;\n","import {range} from '../logic';\nimport {EScrollResult, IMixin, IMixinAdapter} from './IMixin';\n\nexport interface IPrefetchRendererOptions {\n  /**\n   * number of rows to prefetch\n   * @default 20\n   */\n  readonly prefetchRows: number;\n  /**\n   * number of rows extra before cleaning them up\n   * @default 10\n   */\n  readonly cleanUpRows: number;\n  /**\n   * delay to trigger a prefetch or clean up\n   * @default 200ms\n   */\n  readonly delay: number;\n}\n\n/**\n * mixin that prefetches rows depending on the scrolling direction for faster rendering\n */\nexport default class PrefetchMixin implements IMixin {\n  private prefetchTimeout: number = -1;\n  private cleanupTimeout: number = -1;\n\n  private readonly options: IPrefetchRendererOptions = {\n    prefetchRows: 20,\n    cleanUpRows: 10,\n    delay: 200\n  };\n\n  constructor(private readonly adapter: IMixinAdapter, options?: Partial<IPrefetchRendererOptions>) {\n    Object.assign(this.options, options);\n    return this;\n  }\n\n\n  private prefetchDown() {\n    this.prefetchTimeout = -1;\n    if (this.adapter.isScrollEventWaiting()) {\n      return;\n    }\n    const context = this.adapter.context;\n    const nextLast = Math.min(this.adapter.visible.forcedLast + this.options.prefetchRows, context.numberOfRows - 1);\n    // add some rows in advance\n    if (this.adapter.visible.last === nextLast && this.adapter.visible.last >= (this.adapter.visible.forcedLast + this.options.prefetchRows)) {\n      return;\n    }\n\n    this.adapter.addAtBottom(this.adapter.visible.last + 1, nextLast);\n    //console.log('prefetch', visibleFirst, visibleLast + 1, '=>', nextLast, ranking.children.length);\n    this.adapter.visible.last = nextLast;\n  }\n\n  private prefetchUp() {\n    this.prefetchTimeout = -1;\n    if (this.adapter.isScrollEventWaiting() || this.adapter.visible.first <= (this.adapter.visible.forcedFirst - this.options.prefetchRows!)) {\n      return;\n    }\n    const context = this.adapter.context;\n    const fakeOffset = Math.max(this.adapter.scrollOffset - this.options.prefetchRows! * context.defaultRowHeight, 0);\n    const height = this.adapter.scrollTotal;\n    const {first, firstRowPos} = range(fakeOffset, height, context.defaultRowHeight, context.exceptions, context.numberOfRows);\n\n    if (first === this.adapter.visible.first) {\n      return;\n    }\n\n    const frozenShift = this.adapter.syncFrozen ? this.adapter.syncFrozen(first) : 0;\n\n    this.adapter.addAtBeginning(first, this.adapter.visible.first - 1, frozenShift);\n    //console.log('prefetch up ', visibleFirst, '=>', first, visibleLast, ranking.children.length);\n    this.adapter.visible.first = first;\n\n    this.adapter.updateOffset(firstRowPos);\n  }\n\n  private triggerPrefetch(isGoingDown: boolean) {\n    if (this.prefetchTimeout >= 0) {\n      clearTimeout(this.prefetchTimeout);\n    }\n\n    const prefetchDownPossible = this.adapter.visible.last < (this.adapter.visible.forcedLast + this.options.prefetchRows);\n    const prefetchUpPossible = this.adapter.visible.first > (this.adapter.visible.forcedFirst - this.options.prefetchRows);\n\n    const isLast = this.adapter.visible.last === this.adapter.context.numberOfRows;\n    const isFirst = this.adapter.visible.first === 0;\n\n    if ((isGoingDown && !prefetchDownPossible && !isLast) || (!isGoingDown && !prefetchUpPossible && !isFirst)) {\n      return;\n    }\n\n    // go down if we are already at the top, too\n    const op = (isGoingDown || isFirst) ? this.prefetchDown.bind(this) : this.prefetchUp.bind(this);\n\n    this.prefetchTimeout = self.setTimeout(op, this.options.delay);\n  }\n\n  private cleanUpTop(first: number) {\n    this.cleanupTimeout = -1;\n    if (this.adapter.isScrollEventWaiting()) {\n      return;\n    }\n    const newFirst = Math.max(0, first - this.options.cleanUpRows);\n\n    if (newFirst <= this.adapter.visible.first) {\n      return;\n    }\n\n    //console.log('cleanup top');\n    const frozenShift = this.adapter.syncFrozen ? this.adapter.syncFrozen(newFirst) : 0;\n\n    this.adapter.removeFromBeginning(this.adapter.visible.first, newFirst - 1, frozenShift);\n    const context = this.adapter.context;\n    //console.log('cleanup up ', visibleFirst, '=>', newFirst, visibleLast, ranking.children.length);\n    let shift = (newFirst - this.adapter.visible.first) * context.defaultRowHeight;\n    if (context.exceptions.length > 0) {\n      for (let i = this.adapter.visible.first; i < newFirst; ++i) {\n        if (context.exceptionsLookup.has(i)) {\n          shift += context.exceptionsLookup.get(i)! - context.defaultRowHeight;\n        }\n      }\n    }\n    this.adapter.visible.first = newFirst;\n    this.adapter.updateOffset(this.adapter.visibleFirstRowPos + shift);\n\n    this.prefetchDown();\n  }\n\n  private cleanUpBottom(last: number) {\n    this.cleanupTimeout = -1;\n    const newLast = last + this.options.cleanUpRows;\n    if (this.adapter.visible.last <= newLast) {\n      return;\n    }\n    //console.log('cleanup bottom');\n    this.adapter.removeFromBottom(newLast + 1, this.adapter.visible.last);\n    this.adapter.visible.last = newLast;\n\n    this.prefetchUp();\n  }\n\n  private triggerCleanUp(first: number, last: number, isGoingDown: boolean) {\n    if (this.cleanupTimeout >= 0) {\n      clearTimeout(this.cleanupTimeout);\n    }\n    if ((isGoingDown && (first - this.options.cleanUpRows) <= this.adapter.visible.first) || (!isGoingDown && this.adapter.visible.last <= (last + this.options.cleanUpRows))) {\n      return;\n    }\n\n    this.cleanupTimeout = self.setTimeout(isGoingDown ? this.cleanUpTop.bind(this) : this.cleanUpBottom.bind(this), this.options.delay, isGoingDown ? first : last);\n  }\n\n  onScrolled(isGoingDown: boolean, scrollResult: EScrollResult) {\n    if (this.adapter.isScrollEventWaiting()) {\n      return;\n    }\n    if (scrollResult !== EScrollResult.ALL && this.options.cleanUpRows > 0) {\n      this.triggerCleanUp(this.adapter.visible.forcedFirst, this.adapter.visible.forcedLast, isGoingDown);\n    }\n    if (scrollResult !== EScrollResult.NONE && this.options.prefetchRows > 0) {\n      this.triggerPrefetch(isGoingDown);\n    }\n  }\n}\n","import {IAbortAblePromise, IAsyncUpdate} from '../abortAble';\nimport {IAnimationContext} from '../animation';\nimport ARowRenderer, {IRowRendererOptions, setTransform} from '../ARowRenderer';\nimport {EScrollResult, IMixinClass} from '../mixin';\nimport {IColumn} from '../style';\nimport GridStyleManager from '../style/GridStyleManager';\nimport {CSS_CLASS_HIDDEN, CSS_CLASS_LOADING} from '../styles';\nimport ACellAdapter, {ICellAdapterRenderContext} from './internal/ACellAdapter';\nimport {ITableSection} from './MultiTableRowRenderer';\n\nexport declare type ITableCellRenderContext<T extends IColumn> = ICellAdapterRenderContext<T>;\n\n/**\n * base class for a cell renderer as table section\n */\nexport abstract class ACellTableSection<T extends IColumn> extends ARowRenderer implements ITableSection {\n  private readonly cell: ACellAdapter<T>;\n\n  constructor(public readonly header: HTMLElement, public readonly body: HTMLElement, protected readonly tableId: string, protected readonly style: GridStyleManager, options: Partial<IRowRendererOptions> = {}) {\n    super(body, options);\n\n    const that = this;\n\n    class LocalCell extends ACellAdapter<T> {\n      protected get context(): ICellAdapterRenderContext<T> {\n        return that.context;\n      }\n\n      protected get body() {\n        return that.body;\n      }\n\n      protected get lastScrollInfo() {\n        return that.lastScrollInfo;\n      }\n\n      protected createHeader(document: Document, column: T) {\n        return that.createHeader(document, column);\n      }\n\n      protected updateHeader(node: HTMLElement, column: T) {\n        return that.updateHeader(node, column);\n      }\n\n      protected createCell(document: Document, index: number, column: T) {\n        return that.createCell(document, index, column);\n      }\n\n      protected updateColumnOffset(firstColumnPos: number) {\n        super.updateColumnOffset(firstColumnPos);\n        that.updateOffset(that.visibleFirstRowPos);\n      }\n\n      protected updateCell(node: HTMLElement, index: number, column: T) {\n        return that.updateCell(node, index, column);\n      }\n\n      protected forEachRow(callback: (row: HTMLElement, rowIndex: number) => void) {\n        return that.forEachRow(callback);\n      }\n    }\n\n    this.cell = new LocalCell(this.header, this.style, tableId, ...(options.mixins || []));\n  }\n\n  protected addColumnMixin(mixinClass: IMixinClass, options?: any) {\n    this.cell.addColumnMixin(mixinClass, options);\n  }\n\n  protected get idPrefix() {\n    return this.tableId;\n  }\n\n  abstract get id(): string;\n\n  get width() {\n    return this.context.column.totalHeight;\n  }\n\n  protected get visibleColumns() {\n    return this.cell.visibleColumns;\n  }\n\n  protected get visibleFirstColumnPos() {\n    return this.cell.visibleFirstColumnPos;\n  }\n\n  get height() {\n    return this.context.totalHeight;\n  }\n\n  get hidden() {\n    return this.header.classList.contains(CSS_CLASS_LOADING);\n  }\n\n  protected updateSizer(firstRowPos: number) {\n    this.updateShifts(firstRowPos, this.cell.leftShift());\n    // no sizer update since centrally managed\n  }\n\n  protected updateShifts(top: number, _left: number) {\n    setTransform(this.body, 0 /*left.toFixed(0)*/, top.toFixed(0));\n  }\n\n  set hidden(value: boolean) {\n    const old = this.hidden;\n    if (old === value) {\n      return;\n    }\n    this.header.classList.toggle(CSS_CLASS_LOADING, value);\n    this.body.classList.toggle(CSS_CLASS_LOADING, value);\n    this.header.classList.toggle(CSS_CLASS_HIDDEN, value);\n    this.body.classList.toggle(CSS_CLASS_HIDDEN, value);\n    this.onVisibilityChanged(!value);\n  }\n\n  /**\n   * hook when the visibility changes\n   * @param {boolean} _visible current visibility\n   */\n  protected onVisibilityChanged(_visible: boolean) {\n    // hook\n  }\n\n  hide() {\n    this.hidden = true;\n  }\n\n  show(scrollLeft: number, clientWidth: number, isGoingRight: boolean) {\n    const wasHidden = this.hidden;\n    this.hidden = false;\n    if (wasHidden) { // full update\n      this.revalidate();\n    } else {\n      this.onScrolledHorizontally(scrollLeft, clientWidth, isGoingRight);\n    }\n  }\n\n  init() {\n    this.hide(); // hide by default\n    this.cell.init();\n    super.init();\n  }\n\n  destroy() {\n    super.destroy();\n    this.header.remove();\n    this.style.remove(this.tableId);\n  }\n\n  protected onScrolledVertically(scrollTop: number, clientHeight: number, isGoingDown: boolean): EScrollResult {\n    if (this.hidden) {\n      return EScrollResult.NONE;\n    }\n    return super.onScrolledVertically(scrollTop, clientHeight, isGoingDown);\n  }\n\n  protected onScrolledHorizontally(scrollLeft: number, clientWidth: number, isGoingRight: boolean) {\n    const r = this.cell.onScrolledHorizontally(scrollLeft, clientWidth, isGoingRight);\n    this.updateSizer(this.visibleFirstRowPos);\n    return r;\n  }\n\n  /**\n   * the current render context, upon change `recreate` the whole table\n   * @returns {ITableCellRenderContext}\n   */\n  protected abstract get context(): ITableCellRenderContext<T>;\n\n  /**\n   * create a new header node for the given column\n   * @param {Document} document document to create nodes of\n   * @param {T} column the column to create the header for\n   * @returns {HTMLElement} the node representing the header\n   */\n  protected abstract createHeader(document: Document, column: T): HTMLElement | IAsyncUpdate<HTMLElement>;\n\n  /**\n   * updates the given header node with the given column\n   * @param {HTMLElement} node node to update\n   * @param {T} column the column to represents\n   * @returns {HTMLElement | void} an optional new replacement node for the header\n   */\n  protected abstract updateHeader(node: HTMLElement, column: T): HTMLElement | IAsyncUpdate<HTMLElement> | void;\n\n  /**\n   * create a new cell node fo the given row index and column\n   * @param {Document} document document the create nodes of\n   * @param {number} index the current row index\n   * @param {T} column the current column\n   * @returns {HTMLElement} the node representing the cell\n   */\n  protected abstract createCell(document: Document, index: number, column: T): HTMLElement | IAsyncUpdate<HTMLElement>;\n\n  /**\n   * updates the given cell node with the given row index and column\n   * @param {HTMLElement} node node to update\n   * @param {number} index row index to use\n   * @param {T} column column to use\n   * @returns {HTMLElement | void} an optional new replacement node for the header\n   */\n  protected abstract updateCell(node: HTMLElement, index: number, column: T): HTMLElement | IAsyncUpdate<HTMLElement> | void;\n\n\n  /**\n   * triggers updating the header\n   */\n  protected updateHeaders() {\n    this.cell.updateHeaders();\n  }\n\n  protected handleCellReady(item: HTMLElement, ready: IAbortAblePromise<void>, column: number = -1) {\n    return this.cell.handleCellReady(item, ready, column);\n  }\n\n  protected recycleCell(item: HTMLElement, column: number = -1) {\n    this.cell.recycleCell(item, column);\n  }\n\n  /**\n   * trigger an update all all column widths\n   */\n  protected updateColumnWidths() {\n    const context = this.context;\n    this.style.update(context.defaultRowHeight - context.padding(-1), context.columns, context.column.padding, -this.cell.leftShift(), this.tableId);\n  }\n\n  protected recreate(ctx?: IAnimationContext) {\n    const scroller = this.bodyScroller;\n    const oldLeft = scroller.scrollLeft;\n    this.cell.recreate(oldLeft, scroller.clientWidth);\n\n    super.recreate(ctx);\n    // restore left\n    scroller.scrollLeft = oldLeft;\n  }\n\n  protected clearPool() {\n    super.clearPool();\n    this.cell.clearPool();\n  }\n\n  protected createRow(node: HTMLElement, rowIndex: number): void {\n    this.cell.createRow(node, rowIndex);\n    node.classList.add(this.style.cssClasses.tr);\n  }\n\n  protected updateRow(node: HTMLElement, rowIndex: number): void {\n    this.cell.updateRow(node, rowIndex);\n  }\n}\n\nexport default ACellTableSection;\n","import {setTransform} from '../ARowRenderer';\nimport {addScroll, defaultMode, IDelayedMode} from '../internal';\nimport {GridStyleManager, tableCSSClasses, tableIds} from '../style';\nimport {cssClass, CSS_CLASS_BODY, CSS_CLASS_FOOTER, CSS_CLASS_HEADER, CSS_CLASS_MULTI, CSS_CLASS_TBODY, CSS_CLASS_THEAD} from '../styles';\n\n/**\n * basic interface of a table section\n */\nexport interface ITableSection {\n  readonly id: string;\n  readonly width: number;\n  readonly height: number;\n  readonly header: HTMLElement;\n  readonly body: HTMLElement;\n\n  init(): void;\n\n  /**\n   * show the section\n   * @param {number} left visible left margin\n   * @param {number} width visible width\n   * @param {boolean} isGoingRight whether it was a shift to the right\n   */\n  show(left: number, width: number, isGoingRight: boolean): void;\n\n  hide(): void;\n\n  destroy(): void;\n}\n\nexport interface ITableFactory<T extends ITableSection> {\n  (header: HTMLElement, body: HTMLElement, tableId: string, style: GridStyleManager, ...extras: any[]): T;\n}\n\nexport interface ISeparatorFactory<T extends ITableSection> {\n  (header: HTMLElement, body: HTMLElement, style: GridStyleManager, ...extras: any[]): T;\n}\n\nexport interface IMultiTableRowRendererOptions {\n  /**\n   * column padding to use between columns\n   * @default 0\n   */\n  columnPadding: number;\n  /**\n   * async update on scrolling\n   * animation -> use requestAnimationFrame\n   * sync -> execute within scroll listener\n   * {number} -> execute within this delay using setTimeout\n   * @default is chrome ? animation else 0\n   */\n  async: IDelayedMode;\n\n  /**\n   * minimal number of pixel the scrollbars has to move\n   * @default 30\n   */\n  minScrollDelta: number;\n}\n\n/**\n * manager of multiple columns separated by separators each an own row renderer\n */\nexport default class MultiTableRowRenderer {\n\n  readonly style: GridStyleManager;\n  private tableId = 0;\n\n  private readonly sections: ITableSection[] = [];\n\n  private readonly options: Readonly<IMultiTableRowRendererOptions> = {\n    columnPadding: 0,\n    async: defaultMode,\n    minScrollDelta: 30\n  };\n\n  constructor(public readonly node: HTMLElement, htmlId: string, options: Partial<IMultiTableRowRendererOptions> = {}) {\n    Object.assign(this.options, options);\n    htmlId = htmlId.startsWith('#') ? htmlId.slice(1) : htmlId;\n    node.id = htmlId;\n    node.innerHTML = `<header id=\"header-${htmlId}\" class=\"${CSS_CLASS_HEADER} ${cssClass(`header-${htmlId}`)}\">\n      <footer class=\"${CSS_CLASS_FOOTER} ${cssClass(`footer-${htmlId}`)}\">&nbsp;</footer>\n    </header>\n    <main id=\"body-${htmlId}\" class=\"${CSS_CLASS_BODY} ${cssClass(`body-${htmlId}`)}\">\n      <footer class=\"${CSS_CLASS_FOOTER}\">&nbsp;</footer>\n    </main>`;\n    node.classList.add(cssClass(), CSS_CLASS_MULTI, 'lineup-engine');\n\n    this.style = new GridStyleManager(this.node, htmlId);\n\n    let old = addScroll(this.main, this.options.async, (act) => {\n      if (Math.abs(old.left - act.left) < this.options.minScrollDelta && Math.abs(old.width - act.width) < this.options.minScrollDelta) {\n        return;\n      }\n      const isGoingRight = act.left > old.left;\n      old = act;\n      this.onScrolledHorizontally(act.left, act.width, isGoingRight);\n    });\n  }\n\n  private update() {\n    this.onScrolledHorizontally(this.main.scrollLeft, this.main.clientWidth, false);\n\n    let offset = 0;\n    this.sections.forEach((s) => {\n      s.body.style.left = s.header.style.left = `${offset}px`;\n      offset += s.width + this.options.columnPadding;\n    });\n  }\n\n  private onScrolledHorizontally(scrollLeft: number, clientWidth: number, isGoingRight: boolean) {\n    let offset = 0;\n    const scrollEnd = scrollLeft + clientWidth;\n    this.sections.forEach((s) => {\n      const end = offset + s.width;\n      if (end < scrollLeft || offset > scrollEnd) {\n        s.hide();\n      } else {\n        s.show(Math.max(0, scrollLeft - offset), Math.min(scrollEnd - offset, s.width), isGoingRight);\n      }\n\n      offset = end + this.options.columnPadding;\n    });\n\n    this.updateOffset();\n  }\n\n  private updateOffset() {\n    const headerFooter = this.header.getElementsByTagName('footer')[0]!;\n    const bodyFooter = this.main.getElementsByTagName('footer')[0]!;\n\n    const maxHeight = Math.max(0, ...this.sections.map((d) => d.height));\n    const total = this.sections.reduce((a, c) => a + c.width + this.options.columnPadding, 0);\n\n    setTransform(headerFooter, total, 0);\n    setTransform(bodyFooter, total, maxHeight);\n  }\n\n  destroy() {\n    this.sections.forEach((d) => d.destroy());\n    this.node.remove();\n  }\n\n  private get doc() {\n    return this.node.ownerDocument!;\n  }\n\n  private get header() {\n    return <HTMLElement>this.node.getElementsByTagName('header')[0];\n  }\n\n  private get main() {\n    return <HTMLElement>this.node.getElementsByTagName('main')[0];\n  }\n\n  /**\n   * push another table to this instance\n   * @param {ITableFactory<T extends ITableSection>} factory factory for the table\n   * @param extras additional arguments to provide for the factory\n   * @returns {T} the table instance\n   */\n  pushTable<T extends ITableSection>(factory: ITableFactory<T>, ...extras: any[]) {\n    const header = this.doc.createElement('article');\n    const body = this.doc.createElement('article');\n\n    const tableId = `${this.node.id}T${this.tableId++}`;\n    const ids = tableIds(tableId);\n    const cssClasses = tableCSSClasses(tableId);\n\n    header.id = ids.thead;\n    header.classList.add(CSS_CLASS_THEAD, cssClasses.thead);\n    body.id = ids.tbody;\n    body.classList.add(CSS_CLASS_TBODY, cssClasses.tbody);\n    this.header.insertBefore(header, this.header.lastElementChild); //before the footer\n    this.main.appendChild(body);\n\n    const table = factory(header, body, tableId, this.style, ...extras);\n    table.init();\n    this.sections.push(table);\n    this.update();\n    return table;\n  }\n\n  /**\n   * push another separator to the manager\n   * @param {ISeparatorFactory<T extends ITableSection>} factory the factory to create the separator\n   * @param extras optional additional arguments\n   * @returns {T} the new created separator\n   */\n  pushSeparator<T extends ITableSection>(factory: ISeparatorFactory<T>, ...extras: any[]) {\n    const header = this.doc.createElement('section');\n    const body = this.doc.createElement('section');\n    header.classList.add(cssClass('header-separator'));\n    body.classList.add(cssClass('separator'));\n    this.header.insertBefore(header, this.header.lastElementChild); //before the footer\n    this.main.appendChild(body);\n\n    const separator = factory(header, body, this.style, ...extras);\n    separator.init();\n    this.sections.push(separator);\n    this.update();\n    return separator;\n  }\n\n  /**\n   * removes a given table section\n   * @param {ITableSection} section section to remove\n   * @returns {boolean} successful flag\n   */\n  remove(section: ITableSection) {\n    const index = this.sections.indexOf(section);\n    if (index < 0) {\n      return false;\n    }\n    this.sections.splice(index, 1);\n    section.destroy();\n    this.update();\n    return true;\n  }\n\n  clear() {\n    this.sections.splice(0, this.sections.length).forEach((s) => s.destroy());\n    this.update();\n  }\n\n  /**\n   * triggers and update because of a change in width of one or more table sections\n   */\n  widthChanged() {\n    this.update();\n  }\n\n}\n","import './style.scss';\nexport * from '.';\n\ndeclare const __VERSION__: string;\ndeclare const __BUILD_ID__: string;\n\nexport const version = __VERSION__;\nexport const buildId = __BUILD_ID__;\n"],"sourceRoot":""}