{"version":3,"sources":["webpack://lineupengine/webpack/universalModuleDefinition","webpack://lineupengine/webpack/bootstrap","webpack://lineupengine/./src/abortAble.ts","webpack://lineupengine/./node_modules/tslib/tslib.es6.js","webpack://lineupengine/./src/animation/KeyFinder.ts","webpack://lineupengine/./src/animation/index.ts","webpack://lineupengine/./src/internal/scroll.ts","webpack://lineupengine/./src/internal/index.ts","webpack://lineupengine/./src/logic.ts","webpack://lineupengine/./src/mixin/IMixin.ts","webpack://lineupengine/./src/styles/index.ts","webpack://lineupengine/./src/ARowRenderer.ts","webpack://lineupengine/./src/style/StyleManager.ts","webpack://lineupengine/./src/style/GridStyleManager.ts","webpack://lineupengine/./src/table/internal/ACellAdapter.ts","webpack://lineupengine/./src/ACellRenderer.ts","webpack://lineupengine/./src/mixin/PrefetchMixin.ts","webpack://lineupengine/./src/table/ACellTableSection.ts","webpack://lineupengine/./src/table/MultiTableRowRenderer.ts","webpack://lineupengine/./src/bundle.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","isPromiseLike","then","ABORTED","thenFactory","loader","isAborted","abort","onfulfilled","_onrejected","loaded","loadedOrAborted","res","abortAble","aborted","aborter","Promise","resolve","race","abortAbleFetch","input","init","controller","AbortController","reject","fetch","assign","signal","catch","error","DOMException","abortAbleAll","values","all","_i","values_1","length","v","isAbortAble","isAsyncUpdate","update","ready","abortAbleResolveNow","extendStatics","b","setPrototypeOf","__proto__","Array","__extends","__","this","constructor","EAnimationMode","KeyFinder","context","_this","cache","lastFilled","key2index","Map","exceptions","forEach","e","index","y","set","findValidStart","before","undefined","posByKey","has","pos","fillCacheTillKey","defaultRowHeight","cached","start","fillCache","heightOf","first","last","offset","callback","lookup","exceptionsLookup","exceptionHeightOf","returnDefault","padding","target","numberOfRows","positions","NO_CHANGE_DELTA","noAnimationChange","_a","previousHeight","currentHeight","previous","nodeY","current","prev","height","curr","UPDATE","Math","abs","defaultPhases","delay","apply","node","dataset","animation","toLowerCase","style","transform","SHOW","opacity","HIDE","UPDATE_REMOVE","defaultMode","ScrollHandler","sync","handler","timer","numbers","handleAnimationImpl","handle","addEventListener","handleAnimation","handleTimeouts","passive","asInfo","info","left","top","requestAnimationFrame","size","self","setTimeout","scrollLeft","scrollTop","width","clientWidth","clientHeight","push","remove","concat","from","some","indexOf","splice","isWaiting","addScroll","scroller","__le_scroller__","isScrollEventWaiting","clear","lastChild","removeChild","EScrollResult","RowHeightException","uniformContext","rowHeight","rowPadding","keys","totalHeight","nonUniformContext","rowHeights","NaN","isNaN","sorted","sort","a","mostFrequent","mostFrequentValue","acc","between","randomContext","minRowHeight","maxRowHeight","ratio","seed","Date","now","actSeed","random","x","sin","floor","round","range","heightExceptions","firstRowPos","endPos","y2","offset2","indexShift","min","max","calc","offsetShift","isGuess","shifted2","console","assert","lastPos","rest","visible","closest","heightExceptions_1","item","firstException","lastException","ceil","frozenDelta","clength","tlength","added","removed","common","slice","updateFrozen","old","columns","oldLast","pop","frozen","PREFIX","cssClass","suffix","CSS_CLASS_LOADING","CSS_CLASS_FROZEN","CSS_CLASS_HIDDEN","CSS_CLASS_MULTI","CSS_CLASS_EVEN","CSS_CLASS_SHIFTED","CSS_CLASS_SCROLLBAR_TESTER","CSS_CLASS_HEADER","CSS_CLASS_BODY","CSS_CLASS_FOOTER","CSS_CLASS_THEAD","CSS_CLASS_TBODY","CSS_CLASS_TR","CSS_CLASS_TH","CSS_CLASS_TD","CSS_CLASS_SCROLLING","CSS_CLASS_ROW_ANIMATION","isLoadingCell","classList","contains","ARowRenderer_ARowRenderer","ARowRenderer","body","options","pool","loadingPool","loading","WeakMap","forcedFirst","forcedLast","visibleFirstRowPos","scrollListener","lastScrollInfo","abortAnimation","async","minScrollDelta","mixins","scrollingHint","batchSize","striped","viewportOversize","adapter","createAdapter","map","mixinClass","fragment","ownerDocument","createDocumentFragment","addMixin","addAtBeginning","addAtBottom","removeFromBeginning","removeFromBottom","updateOffset","bodyScroller","defineProperties","scrollOffset","scrollTotal","parentElement","parent","sizer","children","find","tagName","createElement","add","idPrefix","insertBefore","firstChild","act","isGoingDown","onScrolledVertically","recreate","destroy","cleanUp","select","result","updateRow","createRow","String","toggle","selectProxy","proxy","recycle","real","replaceChild","delete","_b","ex","removeAll","perform","torecycle","lastElementChild","items","appendChild","forEachRow","inplace","rows","row","to","fromBeginning","nextSibling","previousSibling","updateSizer","setTransform","toFixed","bodySizer","ctx","recreateAnimated","recreatePure","clearPool","animation_KeyFinder","previousKey","cur","currentKey","next","rows_1","UPDATE_CREATE","nodeYCurrentHeight","nextPos","prevHeight","animate","phases","previousFinder","currentFinder","currentTimer","actPhase","executePhase","phase","anim","run","offsetTop","startsWith","endsWith","dummyAnimation","filter","Set","split","clearTimeout","revalidate","shift","shiftTop","scrollResult","onScrolledImpl","onScrolled","shiftLast","currentDelta","total","shiftFirst","currentFirstRow","NONE","toadd","SOME","toaddBottom","ALL","SOME_TOP","SOME_BOTTOM","manipulate","toRecycle","toAdd","bottom","toRecycle_1","src_ARowRenderer","elem","text","anyelem","__transform__","assignStyles","source","plain","hyphen","replace","setProperty","StyleManager","rules","testVerifyTimeout","createTextNode","verifySheet","sheet","cssRules","every","selectorText","selector","warn","deleteRule","rule","insertRule","cssRule","getSheetRule","addRule","id","updateRule","findIndex","stored","setTemplate","innerHTML","tableIds","tableId","thead","tbody","tr","th","td","tableCSSClasses","ids","_super","GridStyleManager","cssClasses","headerScroller","getElementsByTagName","insertAdjacentHTML","offsetWidth","offsetHeight","measureScrollbar","borderRight","newValue","frozenShift","unit","selectors","reduce","updateColumns","prefix","ruleNames","cssSelectors","thStyles","tdStyles","style_StyleManager","internal_ACellAdapter","ACellAdapter","header","mixinClasses","arguments","cellPool","visibleColumns","visibleFirstColumnPos","horizontallyShifted","columnAdapter","createColumnAdapter","columnMixins","columnFragment","leftShift","column","addColumnMixin","addColumnAtStart","addColumnAtEnd","removeColumnFromStart","removeColumnFromEnd","updateColumnOffset","syncFrozen","onScrolledHorizontally","isGoingRight","onScrolledHorizontallyImpl","removeCellFromStart","firstElementChild","recycleCell","removeCellFromEnd","removeFrozenCells","columnIndices","columnIndices_1","columnIndex","removeFrozenColumns","removeAllColumns","includingFrozen","removeAllCells","arr","frozen_1","frozen_2","selectProxyCell","columnObj","pooled","updateCell","createCell","updateShiftedState","handleCellReady","selectCell","col","rowIndex","addCellAtStart","cell","insertFrozenCells","columnIndices_2","insertFrozenColumns","addCellAtEnd","verifyRows","verifyRow","updateHeaders","base","updateHeader","fragment_1","document_1","ids_1","existing","createHeader","firstColumnPos","changed","childElementCount","id_1","mergeColumns","updateImpl","cell_1","byId","updateShiftedStates","shifted","clazz","headers","querySelectorAll","bodies","headers_1","bodies_1","headers_2","_c","bodies_2","shiftingChanged","cols","colObjs","Boolean","ACellRenderer_ACellRenderer","ACellRenderer","htmlId","querySelector","style_GridStyleManager","that","LocalCell","document","updateColumnWidths","totalWidth","updateShifts","oldLeft","PrefetchMixin","prefetchTimeout","cleanupTimeout","prefetchRows","cleanUpRows","prefetchDown","nextLast","prefetchUp","triggerPrefetch","prefetchDownPossible","prefetchUpPossible","isLast","isFirst","op","cleanUpTop","newFirst","cleanUpBottom","newLast","triggerCleanUp","ACellTableSection_ACellTableSection","ACellTableSection","hidden","onVisibilityChanged","_left","_visible","hide","show","wasHidden","MultiTableRowRenderer","sections","columnPadding","main","scrollEnd","end","headerFooter","bodyFooter","maxHeight","pushTable","extras","doc","table","pushSeparator","separator","section","widthChanged","__webpack_exports__","version","buildId","mixin_PrefetchMixin","table_MultiTableRowRenderer"],"mappings":";;;CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,IACA,mBAAAG,eAAAC,IACAD,OAAA,GAAAH,GACA,iBAAAC,QACAA,QAAA,aAAAD,IAEAD,EAAA,aAAAC,IARA,CASCK,OAAA,WACD,mBCTA,IAAAC,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAP,QAGA,IAAAC,EAAAI,EAAAE,GAAA,CACAC,EAAAD,EACAE,GAAA,EACAT,QAAA,IAUA,OANAU,EAAAH,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAQ,GAAA,EAGAR,EAAAD,QA0DA,OArDAM,EAAAM,EAAAF,EAGAJ,EAAAO,EAAAR,EAGAC,EAAAQ,EAAA,SAAAd,EAAAe,EAAAC,GACAV,EAAAW,EAAAjB,EAAAe,IACAG,OAAAC,eAAAnB,EAAAe,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CV,EAAAgB,EAAA,SAAAtB,GACA,oBAAAuB,eAAAC,aACAN,OAAAC,eAAAnB,EAAAuB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAnB,EAAA,cAAiDyB,OAAA,KAQjDnB,EAAAoB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAnB,EAAAmB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFAxB,EAAAgB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAnB,EAAAQ,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAvB,EAAA2B,EAAA,SAAAhC,GACA,IAAAe,EAAAf,KAAA2B,WACA,WAA2B,OAAA3B,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAK,EAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD7B,EAAAgC,EAAA,GAIAhC,IAAAiC,EAAA,gEClFO,SAASC,EAAcF,GAC5B,OAAY,MAALA,GAAaA,GAAuB,mBAAXA,EAAEG,KAmC7B,IAAMC,EAAUnB,OAAO,WAE9B,SAASoB,EAAeC,EAAiCC,EAA0BC,GAmBjF,OAlBA,SAAuDC,EAA4FC,GAYjJ,MAAO,CACLP,KAAME,EAZWC,EAAOH,KAAK,SAACQ,GAC9B,IAAMC,EAAkBL,IAAcH,EAAUO,EAC1CE,EAAMJ,EAAcA,EAAYG,GAAwBA,EAE9D,OAAIV,EAAcW,GACTA,EAAIV,KAAK,SAACnB,GACf,OAAOuB,IAAcH,EAAUpB,IAG5BuB,IAAcH,EAAUS,IAGDN,EAAWC,GACzCA,MAAKA,EACLD,UAASA,IAWA,SAASO,EAAaR,GACnC,IAAIS,EAAwC,KACtCR,EAAY,WAAM,OAAY,OAAZQ,GAClBC,EAAU,IAAIC,QAAgB,SAACC,GAAY,OAAAH,EAAUG,IACrDV,EAAQ,WACG,MAAXO,IAGJA,EAAQX,GACRW,EAAU,OAKZ,MAAO,CACLZ,KAAME,EAHKY,QAAQE,KAAiB,CAACH,EAASV,IAGtBC,EAAWC,GACnCA,MAAKA,EACLD,UAASA,GAKN,SAASa,EAAeC,EAAoBC,GACjD,IAAMC,EAAa,IAAIC,gBAEjBL,EAAO,IAAIF,QAA2B,SAACC,EAASO,GACpD,IAAMzC,EAAI0C,MAAML,EAAOzC,OAAO+C,OAAO,CAACC,OAAQL,EAAWK,QAASN,GAAQ,KAC1EtC,EAAEmB,KAAKe,GACPlC,EAAE6C,MAAM,SAACC,GACHA,aAAiBC,aACnBb,EAAQd,GAERqB,EAAOK,OAKPtB,EAAQe,EAAWf,MAAMd,KAAK6B,GAC9BhB,EAAY,WAAM,OAAAgB,EAAWK,OAAOb,SAE1C,MAAO,CACLZ,KAAME,EAAYc,EAAMZ,EAAWC,GACnCA,MAAKA,EACLD,UAASA,GAmBN,SAASyB,EAAaC,GAC3B,IAAM3B,EAASW,QAAQiB,IAAID,GACvBlB,EAAwC,KACtCR,EAAY,WAAM,OAAY,OAAZQ,GAClBC,EAAU,IAAIC,QAAgB,SAACC,GAAY,OAAAH,EAAUG,IACrDV,EAAQ,WACZ,GAAe,MAAXO,EAAJ,CAGAA,EAAQX,GACR,IAAgB,IAAA+B,EAAA,EAAAC,EAAAH,EAAAE,EAAAC,EAAAC,OAAAF,IAAQ,CAAnB,IAAMG,EAACF,EAAAD,GACNI,EAAYD,IACdA,EAAE9B,QAGNO,EAAU,OAIZ,MAAO,CACLZ,KAAME,EAHKY,QAAQE,KAAmB,CAACH,EAASV,IAGxBC,EAAWC,GACnCA,MAAKA,EACLD,UAASA,GASN,SAASgC,EAAYzB,GAC1B,OAAoB,MAAbA,GAAqBA,GAAuC,mBAAnBA,EAAUX,MAAkD,mBAApBW,EAAUN,MAI7F,SAASgC,EAAiBC,GAC/B,OAAOA,SAA2CA,GAAUF,EAA8BE,EAAQC,OAM7F,SAASC,EAAuBxD,GAerC,MAAO,CACLgB,KAfF,SAAuDM,EAA4FC,GACjJ,IAAMG,EAAMJ,EAAcA,EAAYtB,GAAcA,EACpD,OAAIoD,EAAY1B,GACPA,EAELX,EAAcW,GACTC,EAAUD,GAEZ,CACLV,KAAWwC,EAA8B9B,GACzCL,MAAO,aACPD,UAAW,WAAM,YAKnBC,MAAO,aACPD,UAAW,WAAM;;;;;;;;;;;;;;gFC5KrB,IAAAqC,EAAA,SAAApE,EAAAqE,GAIA,OAHAD,EAAAhE,OAAAkE,gBACA,CAAUC,UAAA,cAAgBC,OAAA,SAAAxE,EAAAqE,GAAsCrE,EAAAuE,UAAAF,IAChE,SAAArE,EAAAqE,GAAyB,QAAA7C,KAAA6C,IAAA9C,eAAAC,KAAAxB,EAAAwB,GAAA6C,EAAA7C,MACzBxB,EAAAqE,IAGO,SAAAI,EAAAzE,EAAAqE,GAEP,SAAAK,IAAmBC,KAAAC,YAAA5E,EADnBoE,EAAApE,EAAAqE,GAEArE,EAAAsB,UAAA,OAAA+C,EAAAjE,OAAAY,OAAAqD,IAAAK,EAAApD,UAAA+C,EAAA/C,UAAA,IAAAoD,GCrBA,ICGYG,IDHZ,WAUE,SAAAC,EAA4BC,EAA4C9D,GAAxE,IAAA+D,EAAAL,KAA4BA,KAAAI,UAA4CJ,KAAA1D,MATvD0D,KAAAM,MAAkB,GAC3BN,KAAAO,WAAa,EACJP,KAAAQ,UAAY,IAAIC,IAQ/BT,KAAKI,QAAQM,WAAWC,QAAQ,SAACC,GAC/BP,EAAKC,MAAMM,EAAEC,OAASD,EAAEE,EACxBT,EAAKG,UAAUO,IAAIzE,EAAIsE,EAAEC,OAAQD,EAAEC,SA0IzC,OAtIUV,EAAAxD,UAAAqE,eAAR,SAAuBC,GACrB,IAAK,IAAIlG,EAAIkG,EAAS,EAAGlG,GAAK,IAAKA,EACjC,QAAsBmG,IAAlBlB,KAAKM,MAAMvF,GACb,OAAOA,EAGX,OAAQ,GAQVoF,EAAAxD,UAAAwE,SAAA,SAAS7E,GACP,GAAI0D,KAAKQ,UAAUY,IAAI9E,GAAM,CAC3B,IAAMuE,EAAQb,KAAKQ,UAAU5E,IAAIU,GACjC,MAAO,CAACuE,MAAKA,EAAEQ,IAAKrB,KAAKqB,IAAIR,IAE/B,OAAOb,KAAKsB,iBAAiBhF,IAQ/B6D,EAAAxD,UAAA0E,IAAA,SAAIR,GACF,GAAuC,IAAnCb,KAAKI,QAAQM,WAAWxB,OAE1B,OAAO2B,EAAQb,KAAKI,QAAQmB,iBAE9B,IAAMC,EAASxB,KAAKM,MAAMO,GAC1B,QAAeK,IAAXM,EACF,OAAOA,EAIT,IAAMC,EAAQzB,KAAKgB,eAAeH,GAMlC,OALIY,EAAQ,EACVzB,KAAK0B,UAAU,EAAGb,EAAO,GAEzBb,KAAK0B,UAAUD,EAAQ,EAAGZ,EAAOb,KAAKM,MAAMmB,GAASzB,KAAK2B,SAASF,IAE9DzB,KAAKM,MAAMO,IAGZV,EAAAxD,UAAA+E,UAAR,SAAkBE,EAAeC,EAAcC,EAAgBC,GAC7D,GAAIF,GAAQ7B,KAAKO,WAAjB,CAEE,IAAKwB,EACH,OAEF,IAAK,IAAIhH,EAAI6G,EAAO7G,GAAK8G,IAAQ9G,EAC/BgH,EAAShH,EAAGiF,KAAK1D,IAAIvB,GAAIiF,KAAKM,MAAMvF,QAIxC,KAAIsG,EAAMS,EACV,IAAS/G,EAAI6G,EAAO7G,GAAK8G,IAAQ9G,EAAG,CAClCiF,KAAKM,MAAMvF,GAAKsG,EAChB,IAAM/E,EAAM0D,KAAK1D,IAAIvB,GACrBiF,KAAKQ,UAAUO,IAAIzE,EAAKvB,GACpBgH,GACFA,EAAShH,EAAGuB,EAAK+E,GAEnBA,GAAOrB,KAAK2B,SAAS5G,MASzBoF,EAAAxD,UAAAgF,SAAA,SAASd,GACP,IAAMmB,EAAShC,KAAKI,QAAQ6B,iBAC5B,OAAOD,EAAOZ,IAAIP,GAASmB,EAAOpG,IAAIiF,GAAUb,KAAKI,QAAQmB,kBAS/DpB,EAAAxD,UAAAuF,kBAAA,SAAkBrB,EAAesB,QAAA,IAAAA,OAAA,GAC/B,IAAMC,EAAUpC,KAAKI,QAAQgC,QAAQvB,GAC/BmB,EAAShC,KAAKI,QAAQ6B,iBAC5B,OAAID,EAAOZ,IAAIP,GACNmB,EAAOpG,IAAIiF,GAAUuB,EAEvBD,EAAgBnC,KAAKI,QAAQmB,iBAAmBa,EAAU,MAQnEjC,EAAAxD,UAAAyF,QAAA,SAAQvB,GACN,OAAOb,KAAKI,QAAQgC,QAAQvB,IAGtBV,EAAAxD,UAAA2E,iBAAR,SAAyBe,GAEvB,IADA,IAAIhB,EAAM,EACDtG,EAAIiF,KAAKO,WAAYxF,EAAIiF,KAAKI,QAAQkC,eAAgBvH,IAAKiF,KAAKO,WAAY,CACnF,IAAMnF,EAAI4E,KAAKM,MAAMvF,GACrB,QAAUmG,IAAN9F,EAAJ,CAKA,IAAMkB,EAAM0D,KAAK1D,IAAIvB,GAGrB,GAFAiF,KAAKM,MAAMvF,GAAKsG,EAChBrB,KAAKQ,UAAUO,IAAIzE,EAAKvB,GACpBuB,IAAQ+F,EACV,MAAO,CAACxB,MAAO9F,EAAGsG,IAAGA,GAEvBA,GAAOrB,KAAK2B,SAAS5G,QAVnBsG,EAAMjG,EAAI4E,KAAK2B,SAAS5G,GAY5B,MAAO,CAAC8F,OAAQ,EAAGQ,KAAM,IAU3BlB,EAAAxD,UAAA4F,UAAA,SAAUX,EAAeC,EAAcC,EAAgBC,GACrD/B,KAAK0B,UAAUE,EAAOC,EAAMC,EAAQC,IAExC5B,EAvJA,ICGA,SAAYD,GAIVA,IAAA,mBAIAA,IAAA,iCAIAA,IAAA,iCAIAA,IAAA,eAIAA,IAAA,eApBF,CAAYA,MAAc,KA2D1B,IAAMsC,EAAkB,EAEjB,SAASC,EAAkBC,EAAkDC,EAAwBC,OAAzEC,EAAAH,EAAAG,SAAU3G,EAAAwG,EAAAxG,KAAM4G,EAAAJ,EAAAI,MAAOC,EAAAL,EAAAK,QAElDC,EAA0B,MAAnBH,EAASI,OAAiBN,EAAiBE,EAASI,OAC3DC,EAAyB,MAAlBH,EAAQE,OAAiBL,EAAgBG,EAAQE,OAC9D,OAAO/G,IAASgE,EAAeiD,QAAWC,KAAKC,IAAIR,EAAS/B,EAAIgC,IAAUN,GAAqBY,KAAKC,IAAIL,EAAOE,IAASV,EAuB1H,IAEac,EAAgB,CAC3B,CACEC,MAAO,EACPC,MAAA,SAAMd,OAACxG,EAAAwG,EAAAxG,KAAM2G,EAAAH,EAAAG,SAAUC,EAAAJ,EAAAI,MAAOC,EAAAL,EAAAK,QAASU,EAAAf,EAAAe,KACrCA,EAAKC,QAAQC,UAAYzD,EAAehE,GAAM0H,cAC9CH,EAAKI,MAAMC,UAAY,iBAAgBjB,EAAS/B,EAAIgC,GAAK,MACrD5G,IAASgE,EAAe6D,KAE1BN,EAAKI,MAAMZ,OAA4B,OAAnBF,EAAQE,OAAqBF,EAAQE,OAAM,KAAO,KAEtEQ,EAAKI,MAAMZ,OAAYJ,EAASI,OAAM,KAExCQ,EAAKI,MAAMG,QAAU9H,IAASgE,EAAe6D,KAAO,IAAO7H,IAASgE,EAAe+D,KAAO,IAAM,OAGpG,CACEV,MAAO,GACPC,MAAA,SAAMd,OAACxG,EAAAwG,EAAAxG,KAAM6G,EAAAL,EAAAK,QAASD,EAAAJ,EAAAI,MAAOW,EAAAf,EAAAe,KAE3BA,EAAKI,MAAMC,UAAa5H,IAASgE,EAAe+D,MAAQ/H,IAASgE,EAAegE,cAAiB,iBAAgBnB,EAAQjC,EAAIgC,GAAK,MAAQ,KACtI5G,IAASgE,EAAe+D,OAC1BR,EAAKI,MAAMZ,OAA4B,OAAnBF,EAAQE,OAAqBF,EAAQE,OAAM,KAAO,MAExEQ,EAAKI,MAAMG,QAAU9H,IAASgE,EAAe6D,KAAO,IAAO7H,IAASgE,EAAe+D,KAAO,IAAM,OAGpG,CACEV,MA7BuB,KA8BvBC,MAAA,SAAMd,OAACe,EAAAf,EAAAe,YACEA,EAAKC,QAAQC,UACpBF,EAAKI,MAAMG,QAAU,KACrBP,EAAKI,MAAMC,UAAY,QC7HhBK,EAA4B,YAuBzC,IAAAC,EAAA,WAYE,SAAAA,EAA6BX,GAA7B,IAAApD,EAAAL,KAA6BA,KAAAyD,OAXZzD,KAAAqE,KARV,CACLC,QAAS,GACTtB,KAAM,KACNuB,OAAQ,GAMOvE,KAAA2D,UATV,CACLW,QAAS,GACTtB,KAAM,KACNuB,OAAQ,GAOOvE,KAAAwE,QAAU,IAAI/D,IAiDdT,KAAAyE,oBAAsB,WACR,IAAzBpE,EAAKsD,UAAUY,QAGnBlE,EAAKqE,OAAOrE,EAAKsD,WACjBtD,EAAKsD,UAAUY,OAAS,IA1CxBd,EAAKkB,iBAAiB,SAAU,WAQ1BtE,EAAKgE,KAAKC,QAAQpF,OAAS,GAC7BmB,EAAKqE,OAAOrE,EAAKgE,MAEnBhE,EAAKuE,kBACLvE,EAAKwE,kBACJ,CACCC,SAAS,IAiGjB,OAtHErJ,OAAAC,eAAI0I,EAAAzH,UAAA,UAAO,KAAX,WACE,OAAOqD,KAAK+E,0CAwBNX,EAAAzH,UAAA+H,OAAR,SAAeJ,GACb,IAAMU,EAAOhF,KAAK+C,QAClB,KAAIuB,EAAQtB,MAASI,KAAKC,IAAI2B,EAAKC,KAAOX,EAAQtB,KAAKiC,MAAQ7B,KAAKC,IAAI2B,EAAKE,IAAMZ,EAAQtB,KAAKkC,KAAQ,GAAxG,CAGAZ,EAAQtB,KAAOgC,EACf,IAAgB,IAAAhG,EAAA,EAAA0D,EAAA4B,EAAQA,QAARtF,EAAA0D,EAAAxD,OAAAF,IAAiB,EAC/BlC,EADU4F,EAAA1D,IACRgG,MAIEZ,EAAAzH,UAAAiI,gBAAR,YACgC,IAA1B5E,KAAK2D,UAAUY,OAAkD,IAAlCvE,KAAK2D,UAAUW,QAAQpF,SAG1Dc,KAAK2D,UAAUY,MAAQ,EACvBY,sBAAsBnF,KAAKyE,uBAWrBL,EAAAzH,UAAAkI,eAAR,eAAAxE,EAAAL,KAC4B,IAAtBA,KAAKwE,QAAQY,MAIjBpF,KAAKwE,QAAQ7D,QAAQ,SAAC2D,EAAS9H,GACE,IAA3B8H,EAAQA,QAAQpF,SAGpBoF,EAAQC,MAAQc,KAAKC,WAAW,WAC9BjF,EAAKqE,OAAOJ,GACZA,EAAQC,OAAS,GAChB/H,OAIP4H,EAAAzH,UAAAoI,OAAA,WACE,MAAO,CACLE,KAAMjF,KAAKyD,KAAK8B,WAChBL,IAAKlF,KAAKyD,KAAK+B,UACfC,MAAOzF,KAAKyD,KAAKiC,YACjBzC,OAAQjD,KAAKyD,KAAKkC,eAItBvB,EAAAzH,UAAAiJ,KAAA,SAAK1J,EAAoBoI,GAQvB,OAPoB,iBAATpI,IACJ8D,KAAKwE,QAAQpD,IAAIlF,IACpB8D,KAAKwE,QAAQzD,IAAI7E,EA/FhB,CACLoI,QAAS,GACTtB,KAAM,KACNuB,OAAQ,IA8FNvE,KAAKwE,QAAQ5I,IAAIM,GAAOoI,QAAQsB,KAAKtB,IAG/BpI,GACN,IAAK,OACH8D,KAAKqE,KAAKC,QAAQsB,KAAKtB,GACvB,MACF,IAAK,YACHtE,KAAK2D,UAAUW,QAAQsB,KAAKtB,KAMlCF,EAAAzH,UAAAkJ,OAAA,SAAOvB,GAGL,MAFa,CAACtE,KAAKqE,KAAMrE,KAAK2D,WAAWmC,OAAOjG,MAAMkG,KAAK/F,KAAKwE,QAAQ1F,WAE5DkH,KAAK,SAAC3K,GAChB,IAAMwF,EAAQxF,EAAEiJ,QAAQ2B,QAAQ3B,GAIhC,OAHIzD,GAAS,GACXxF,EAAEiJ,QAAQ4B,OAAOrF,EAAO,GAEnBA,GAAS,KAIpBuD,EAAAzH,UAAAwJ,UAAA,SAAUjK,GACR,OAAQA,GACN,IAAK,YACH,OAAO8D,KAAK2D,UAAUY,OAAS,EACjC,IAAK,OACH,OAAO,EACT,QACE,OAAOvE,KAAKwE,QAAQpD,IAAIlF,IAAS8D,KAAKwE,QAAQ5I,IAAIM,GAAOqI,OAAS,IAG1EH,EA9HA,GAmIO,SAASgC,EAAUC,EAAuBnK,EAAoBoI,GAExD+B,EAAUC,kBACbD,EAAUC,gBAAkB,IAAIlC,EAAciC,IAEtD,IAAMvJ,EAAyBuJ,EAAUC,gBAEzC,OADAxJ,EAAE8I,KAAK1J,EAAMoI,GACNxH,EAAEiI,SAMJ,SAASwB,EAAqBF,EAAuBnK,GAC1D,QAAWmK,EAAUC,iBAGUD,EAAUC,gBAChCH,UAAUjK,GCzKd,SAASsK,EAAsB/C,GACpC,KAAOA,EAAKgD,WACVhD,EAAKiD,YAAYjD,EAAKgD,WAExB,OAAOhD,ECWT,ICjBYkD,EDiBZC,EAAA,WACE,SAAAA,EAA4B/F,EAA+BC,EAA2BmC,GAA1DjD,KAAAa,QAA+Bb,KAAAc,IAA2Bd,KAAAiD,SAOxF,OAHExH,OAAAC,eAAIkL,EAAAjK,UAAA,KAAE,KAAN,WACE,OAAOqD,KAAKc,EAAId,KAAKiD,wCAEzB2D,EARA,GA6DO,SAASC,EAAevE,EAAsBwE,EAAmBC,GAQtE,YARsE,IAAAA,MAAA,GAQ/D,CACLrG,WAAY,GACZuB,iBARuB,CACvB+E,KAAM,WAAM,SAAGlI,UACflD,IAAK,WAAM,OAAAkL,GACX1F,IAAK,WAAM,UACXgE,KAAM,GAKN6B,YAAa3E,GAVfwE,GAAaC,GAWXzE,aAAYA,EACZf,iBAAkBuF,EAClB1E,QAAS,WAAM,OAAA2E,IAsCZ,SAASG,EAAkBC,EAAkF5F,EAAgCwF,QAAhC,IAAAxF,MAAA6F,UAAgC,IAAAL,MAAA,GAClJ,IAAM9E,EAAmB,IAAIxB,IACvBC,EAAoC,GAEpC0B,EAAgC,mBAAf2E,EAA4BA,EAAa,WAAM,OAAQA,GAE1EM,MAAM9F,KACRA,EApCJ,SAA2BzC,GACzB,IAAMkD,EAAS,IAAIvB,IAInB,GAHA3B,EAAO6B,QAAQ,SAAC3E,GACdgG,EAAOjB,IAAI/E,GAAQgG,EAAOpG,IAAII,IAAU,GAAK,KAE3B,IAAhBgG,EAAOoD,KACT,OAAO,GAGT,IAAMkC,EAASzH,MAAMkG,KAAK/D,GAAQuF,KAAK,SAACC,EAAG9H,GACzC,OAAI8H,EAAE,KAAO9H,EAAE,GACNA,EAAE,GAAK8H,EAAE,GAEXA,EAAE,GAAK9H,EAAE,KAEZ+H,EAAeH,EAAO,GAAG,GAC/B,OAAqB,IAAjBG,EACKH,EAAOpI,OAAS,EAAIoI,EAAO,GAAG,GAAK,GAErCG,EAiBcC,CAAkBP,IAGvC5F,GAAoBa,GAAS,GAE7B,IAAIY,GAAQ,EAAG2E,EAAM,EAAGV,EAAc,EAAG3E,EAAe,EAgBxD,OAfA6E,EAAWxG,QAAQ,SAACsC,EAAQpC,GAI1B,GAHAoC,GAAUb,EAAQvB,GAClBoG,GAAehE,EACfX,IACIW,IAAW1B,EAAf,CAIAU,EAAiBlB,IAAIF,EAAOoC,GAC5B,IAAM2E,GAAW/G,EAAQmC,EAAO,GAAKzB,EACrCyB,EAAOnC,EACP,IAAMC,EAAI6G,EAAMC,EAChBD,EAAM7G,EAAImC,EACVvC,EAAWkF,KAAK,IAAIgB,EAAmB/F,EAAOC,EAAGmC,OAE5C,CAAChB,iBAAgBA,EAAEvB,WAAUA,EAAEuG,YAAWA,EAAE1F,iBAAgBA,EAAEe,aAAYA,EAAEF,QAAOA,GAarF,SAASyF,EAAcvF,EAAsBf,EAA0BuG,EAAkBC,EAAsCC,EAAaC,QAArE,IAAAH,MAAA,QAAkB,IAAAC,MAAkC,GAAnBxG,QAAuB,IAAAyG,MAAA,SAAa,IAAAC,MAAOC,KAAKC,OAC7J,IAAIC,EAAUH,EACRI,EAAS,WACb,IAAMC,EAA0B,IAAtBlF,KAAKmF,IAAIH,KACnB,OAAOE,EAAIlF,KAAKoF,MAAMF,IAiBxB,OAAOpB,EAAkB,CAACvG,QALV,SAACoB,GACf,IAAK,IAAIlB,EAAQ,EAAGA,EAAQyB,IAAgBzB,EAC1CkB,EATWsG,IACFL,EAEFF,EAAe1E,KAAKqF,MAAMJ,KAAYN,EAAeD,IAEvDvG,EAIcV,KAGaU,GA+B/B,SAASmH,EAAMlD,EAAmBG,EAAsBmB,EAAmB6B,EAAyCrG,GACzH,GAAqB,IAAjBA,EACF,MAAO,CAACV,MAAO,EAAGC,MAAO,EAAG+G,YAAa,EAAGC,OAAQ,GAEtD,GAAqB,IAAjBvG,EACF,MAAO,CACLV,MAAO,EACPC,KAAM,EACN+G,YAAa,EACbC,OAAoC,IAA5BF,EAAiBzJ,OAAe4H,EAAY6B,EAAiB,GAAGG,IAG5E,IAAMhH,EAAS0D,EACTuD,EAAUjH,EAAS6D,EAEzB,SAASM,EAAQ5E,EAAa2H,GAC5B,OAAO5F,KAAK6F,IAAI3G,EAAe,EAAG0G,EAAa5F,KAAK8F,IAAI,EAAG9F,KAAKoF,MAAMnH,EAAMyF,KAG9E,SAASqC,EAAKC,EAAqBJ,EAAoBK,QAAA,IAAAA,OAAA,GACrD,IACMC,EAAWP,EAAUK,EAErBxH,EAAQqE,EAHEnE,EAASsH,EAGMJ,GACzBnH,EAAOoE,EAAQqD,EAAUN,GAEzBJ,EAAcQ,GAAexH,EAAQoH,GAAclC,EACnD+B,EAASO,GAAevH,EAAO,EAAImH,GAAclC,EAMvD,OADAyC,QAAQC,QAAQH,KAAaT,EAAc9G,GAAW+G,EAASE,GAAWlH,EAAOS,EAAe,GAAK,QAAS+G,EAAST,EAAaC,EAAQ/G,EAAQiH,EAASC,EAAYI,GAClK,CAACxH,MAAKA,EAAEC,KAAIA,EAAE+G,YAAWA,EAAEC,OAAMA,GAG1C,IAAMhN,EAAIsN,EAAK,EAAG,GAAG,GACrB,GAAgC,IAA5BR,EAAiBzJ,OAEnB,OAAOrD,EAET,GAAIA,EAAEgG,KAAO8G,EAAiB,GAAG9H,MAG/B,OAAOhF,EAET,GAAIA,EAAEgG,OAAS8G,EAAiB,GAAG9H,OAAS8H,EAAiB,GAAG1F,OAAS6D,EACvE,OAAOrL,OAAO+C,OAAO3C,EAAG,CAACgN,OAAQF,EAAiB,GAAGG,KAIvD,IAAMW,EAAUd,EAAiBA,EAAiBzJ,OAAS,GAC3D,GAAI4C,GAAU2H,EAAQ3I,EAAG,CACvB,IAAM4I,EAAOP,EAAKM,EAAQX,GAAIW,EAAQ5I,MAAQ,GAC9C,OAAIiB,EAAS2H,EAAQX,GAEZrN,OAAO+C,OAAOkL,EAAM,CAAC9H,MAAO6H,EAAQ5I,MAAO+H,YAAaa,EAAQ3I,IAElE4I,EAKT,IAFA,IAAMC,EAAiC,GACnCC,EAAUjB,EAAiB,GACZ3J,EAAA,EAAA6K,EAAAlB,EAAA3J,EAAA6K,EAAA3K,OAAAF,IAAkB,CAAhC,IAAM8K,EAAID,EAAA7K,GACN8B,EAAAgJ,EAAAhJ,EAAGgI,EAAAgB,EAAAhB,GACV,GAAIhI,GAAKiI,EACP,MAEED,GAAMhH,EACR8H,EAAUE,EAGZH,EAAQ/D,KAAKkE,GAGf,GAAuB,IAAnBH,EAAQzK,OAEV,OAAOiK,EAAKS,EAAQd,GAAIc,EAAQ/I,MAAQ,GAKxC,IAAMkJ,EAAiBJ,EAAQ,GACzBK,EAAgBL,EAAQA,EAAQzK,OAAS,GAEzC0C,EAAQwB,KAAK8F,IAAI,EAAGa,EAAelJ,MAAQuC,KAAK8F,IAAI,EAAG9F,KAAK6G,MAAMF,EAAejJ,EAAIgB,GAAUgF,KACjGjF,EAAOmI,EAAcnJ,MACrBkI,GAAWiB,EAAclB,KAC3BjH,EAAOoE,EAAQ8C,EAAUiB,EAAclB,GAAIkB,EAAcnJ,MAAQ,IAEnE,IAAM+H,EAAcmB,EAAejJ,GAAKiJ,EAAelJ,MAAQe,GAASkF,EAClE+B,EAASmB,EAAclB,IAAMjH,EAAOmI,EAAcnJ,OAASiG,EAKjE,OADAyC,QAAQC,OAAOZ,GAAe9G,IAAW+G,GAAUE,GAAWlH,IAASS,EAAe,GAAI,QAASsG,EAAaC,EAAQ/G,EAAQiH,EAASgB,EAAgBC,GAClJ,CAACpI,MAAKA,EAAEC,KAAIA,EAAE+G,YAAWA,EAAEC,OAAMA,GAKrC,SAASqB,EAAYnH,EAAmBV,GAC7C,IAAM8H,EAAUpH,EAAQ7D,OAClBkL,EAAU/H,EAAOnD,OACvB,GAAgB,IAAZiL,EACF,MAAO,CAACE,MAAOhI,EAAQiI,QAAS,GAAIC,OAAQ,GAE9C,GAAgB,IAAZH,EACF,MAAO,CAACC,MAAO,GAAIC,QAASvH,EAASwH,OAAQ,GAE/C,GAAIJ,IAAYC,EACd,MAAO,CAACC,MAAO,GAAIC,QAAS,GAAIC,OAAQJ,GAE1C,IAAMG,EAAUvH,EAAQyH,MAAMpH,KAAK6F,IAAImB,EAASD,IAEhD,MAAO,CAACE,MADMhI,EAAOmI,MAAMpH,KAAK6F,IAAImB,EAASD,IAC9BG,QAAOA,EAAEC,OAAQJ,EAAUG,EAAQpL,QAG7C,SAASuL,EAAaC,EAAeC,EAA8B/I,GAKxE,IAJA,IAAMgJ,EAAyB,IAAfF,EAAIxL,OAAe,EAAIwL,EAAIA,EAAIxL,OAAS,GAAK,EACvDmL,EAAkB,GAClBC,EAAoB,GAEjBvP,EAAI2P,EAAIxL,OAAS,EAAGnE,GAAK,IAAKA,EAAG,CAExC,KADc2P,EAAI3P,IACL6G,GAIX,MAHA0I,EAAQ1E,KAAK8E,EAAIG,OAOrB,IAAS9P,EAAI6P,EAAS7P,EAAI6G,IAAS7G,EAC7B4P,EAAQ5P,GAAG+P,SACbT,EAAMzE,KAAK7K,GACX2P,EAAI9E,KAAK7K,IAGb,MAAO,CAACsH,OAAQqI,EAAKL,MAAKA,EAAEC,QAAOA,IC1WrC,SAAY3D,GAIVA,IAAA,eAIAA,IAAA,aAIAA,IAAA,eAIAA,IAAA,6BAIAA,IAAA,uBApBF,CAAYA,MAAa,KCFzB,IAAMoE,EAAS,KAMR,SAASC,EAASC,GACvB,OAAKA,EAGKF,EAAM,IAAIE,EAFXF,EAKJ,IAAMG,EAAoBF,EAAS,WAC7BG,EAAmBH,EAAS,UAC5BI,EAAmBJ,EAAS,UAC5BK,EAAkBL,EAAS,SAC3BM,EAAiBN,EAAS,QAC1BO,EAAoBP,EAAS,WAC7BQ,EAA6BR,EAAS,oBAEtCS,EAAmBT,EAAS,UAC5BU,EAAiBV,EAAS,QAC1BW,EAAmBX,EAAS,UAE5BY,EAAkBZ,EAAS,SAC3Ba,EAAkBb,EAAS,SAE3Bc,EAAed,EAAS,MACxBe,EAAef,EAAS,MACxBgB,EAAehB,EAAS,MAExBiB,EAAsBjB,EAAS,aAC/BkB,EAA0BlB,EAAS,iBCzBzC,SAASmB,EAAc1I,GAC5B,OAAOA,EAAK2I,UAAUC,SAASnB,GAkDjC,IAAAoB,EAAA,WAuCE,SAAAC,EAA+BC,EAAmBC,GAAlD,IAAApM,EAAAL,UAAkD,IAAAyM,MAAA,IAAnBzM,KAAAwM,OAtCdxM,KAAA0M,KAAsB,GACtB1M,KAAA2M,YAA6B,GAC7B3M,KAAA4M,QAAU,IAAIC,QAOZ7M,KAAA2J,QAAU,CAC3B/H,MAAO,EACPkL,YAAa,EACbjL,MAAO,EACPkL,YAAa,GAML/M,KAAAgN,mBAAqB,EAIvBhN,KAAAiN,eAAsD,KACpDjN,KAAAkN,eAAqC,KAEvClN,KAAAmN,eAA6B,aAElBnN,KAAAyM,QAAyC,CAC1DW,MAAOjJ,EACPkJ,eAAgB,GAChBC,OAAQ,GACRC,eAAe,EACfC,UAAW,GACXC,SAAS,EACTC,iBAAkB,KAIlB1N,KAAK2N,QAAU3N,KAAK4N,gBACpBnS,OAAO+C,OAAOwB,KAAKyM,QAASA,GAC5BzM,KAAKsN,OAAStN,KAAKyM,QAAQa,OAAOO,IAAI,SAACC,GAAe,WAAIA,EAAWzN,EAAKsN,WAE1E3N,KAAK+N,SAAWvB,EAAKwB,cAAeC,yBAowBxC,OA1vBY1B,EAAA5P,UAAAuR,SAAV,SAAmBJ,EAAyBrB,GAC1CzM,KAAKsN,OAAO1H,KAAK,IAAIkI,EAAW9N,KAAK2N,QAASlB,KAGxCF,EAAA5P,UAAAiR,cAAR,eAAAvN,EAAAL,KACQnE,EAAS,CACb8N,QAAS3J,KAAK2J,QACdwE,eAAgBnO,KAAKmO,eAAe5R,KAAKyD,MACzCoO,YAAapO,KAAKoO,YAAY7R,KAAKyD,MACnCqO,oBAAqBrO,KAAKqO,oBAAoB9R,KAAKyD,MACnDsO,iBAAkBtO,KAAKsO,iBAAiB/R,KAAKyD,MAC7CuO,aAAcvO,KAAKuO,aAAahS,KAAKyD,MACrCuG,qBAAsB,WAAM,OAAAA,EAAqBlG,EAAKmO,aAAcnO,EAAKoM,QAAQW,SAoBnF,OAlBA3R,OAAOgT,iBAAiB5S,EAAG,CACzBmR,mBAAoB,CAClBpR,IAAK,WAAM,OAAAyE,EAAK2M,oBAChBrR,YAAY,GAEdyE,QAAS,CACPxE,IAAK,WAAM,OAAAyE,EAAKD,SAChBzE,YAAY,GAEd+S,aAAc,CACZ9S,IAAK,WAAM,OAAAyE,EAAK6M,eAAiB7M,EAAK6M,eAAehI,IAAM,GAC3DvJ,YAAY,GAEdgT,YAAa,CACX/S,IAAK,WAAM,OAAAyE,EAAK6M,eAAiB7M,EAAK6M,eAAejK,OAAS5C,EAAKmO,aAAa7I,cAChFhK,YAAY,KAGTE,GAOTJ,OAAAC,eAAc6Q,EAAA5P,UAAA,eAAY,KAA1B,WACE,OAAoBqD,KAAKwM,KAAKoC,+CAGhCnT,OAAAC,eAAc6Q,EAAA5P,UAAA,YAAS,KAAvB,WACE,IAAMkS,EAAS7O,KAAKwO,aACdM,EAAwBjP,MAAMkG,KAAK8I,EAAOE,UAAWC,KAAK,SAAC3T,GAAM,MAA4B,WAA5BA,EAAE4T,QAAQrL,gBACjF,GAAIkL,EACF,OAAOA,EAET,IAAMhS,EAAI+R,EAAOb,cAAekB,cAAc,UAG9C,OAFApS,EAAEsP,UAAU+C,IAAIxD,EAAkBX,EAAS,UAAUhL,KAAKoP,WAC1DP,EAAOQ,aAAavS,EAAG+R,EAAOS,YACvBxS,mCA6BCyP,EAAA5P,UAAAwB,KAAV,eAAAkC,EAAAL,KACQqG,EAAWrG,KAAKwO,aAElB9D,EAAMtE,EAAUC,EAAUrG,KAAKyM,QAAQW,MAAOpN,KAAKiN,eAAiB,SAACsC,GAEvE,GADAlP,EAAK6M,eAAiBqC,IAClBnM,KAAKC,IAAIqH,EAAIxF,IAAMqK,EAAIrK,KAAO7E,EAAKoM,QAAQY,gBAAkBjK,KAAKC,IAAIqH,EAAIzH,OAASsM,EAAItM,QAAU5C,EAAKoM,QAAQY,gBAAlH,CAGA,IAAMmC,EAAcD,EAAIrK,IAAMwF,EAAIxF,IAClCwF,EAAM6E,EACNlP,EAAKoP,qBAAqBF,EAAIrK,IAAKqK,EAAItM,OAAQuM,GAC3CnP,EAAKoM,QAAQc,eACflN,EAAKmM,KAAKJ,UAAUvG,OAAOoG,MAG3BjM,KAAKyM,QAAQc,eACfnH,EAAUC,EAAU,YAAa,WAAM,OAAAhG,EAAKmM,KAAKJ,UAAU+C,IAAIlD,KAEjEjM,KAAK0P,YAOPnD,EAAA5P,UAAAgT,QAAA,WLxCK,IAAsBtJ,EAAuB/B,EAAvB+B,EKyCZrG,KAAKwO,aLzC8BlK,EKyChBtE,KAAKiN,eLxC7B5G,EAAUC,iBACID,EAAUC,gBAAiBT,OAAOvB,GKwCxDtE,KAAKwM,KAAK3G,UAGG0G,EAAAqD,QAAf,SAAuB9F,GACrBA,EAAKjG,MAAMZ,OAAS,MAGdsJ,EAAA5P,UAAAkT,OAAR,SAAehP,GACb,IAAIiJ,EACAgG,EAiBJ,OAhBI9P,KAAK0M,KAAKxN,OAAS,GACrB4K,EAAO9J,KAAK0M,KAAK7B,MACjBiF,EAAS9P,KAAK+P,UAAUjG,EAAMjJ,IACrBb,KAAK2M,YAAYzN,OAAS,IACnC4K,EAAO9J,KAAK2M,YAAY9B,OACnBuB,UAAUvG,OAAOqF,GACtB4E,EAAS9P,KAAKgQ,UAAUlG,EAAMjJ,MAE9BiJ,EAAO9J,KAAKwM,KAAKwB,cAAekB,cAAc,QACzC9C,UAAU+C,IAAIrD,EAAcd,EAAS,MAAMhL,KAAKoP,WACrDU,EAAS9P,KAAKgQ,UAAUlG,EAAMjJ,IAEhCiJ,EAAKpG,QAAQ7C,MAAQoP,OAAOpP,GACxBb,KAAKyM,QAAQgB,SACf3D,EAAKsC,UAAU8D,OAAO5E,EAAgBzK,EAAQ,GAAM,GAE/C,CAACiJ,KAAIA,EAAEgG,OAAMA,IAGdvD,EAAA5P,UAAAwT,YAAR,WACE,IAAIC,EAOJ,OANIpQ,KAAK2M,YAAYzN,OAAS,EAC5BkR,EAAQpQ,KAAK2M,YAAY9B,OAEzBuF,EAAQpQ,KAAKwM,KAAKwB,cAAekB,cAAc,QACzC9C,UAAU+C,IAAIjE,EAAmBY,EAAcd,EAAS,MAAMhL,KAAKoP,WAEpEgB,GAGD7D,EAAA5P,UAAA0T,QAAR,SAAgBvG,IACdyC,EAAaqD,QAAQ9F,GAEjB9J,KAAK4M,QAAQxL,IAAI0I,IACL9J,KAAK4M,QAAQhR,IAAIkO,GACzBzM,QAEN2C,KAAK0M,KAAK9G,KAAKkE,IAIXyC,EAAA5P,UAAAyT,MAAR,SAActG,EAAmBgG,GAAjC,IAAAzP,EAAAL,KACE,IAAKZ,EAAY0Q,GACf,OAAOhG,EAET,IAAMzM,EAAQyS,EAGRQ,EAAOxG,EACPsG,EAAQpQ,KAAKmQ,cA4BnB,OA1BAC,EAAM1M,QAAQ7C,MAAQyP,EAAK5M,QAAQ7C,MACnCuP,EAAMvM,MAAMZ,OAASqN,EAAKzM,MAAMZ,OAEhCjD,KAAK4M,QAAQ7L,IAAIqP,EAAO/S,GACxBA,EAAML,KAAK,SAAC8S,GACNA,IAAW7S,GAEbsP,EAAaqD,QAAQU,GACrBjQ,EAAKqM,KAAK9G,KAAK0K,IAGfjQ,EAAKmM,KAAK+D,aAAaD,EAAMF,GAE/B/P,EAAKuM,QAAQ4D,OAAOJ,GACpB7D,EAAaqD,QAAQQ,GACrB/P,EAAKsM,YAAY/G,KAAKwK,IACrB,WAGD7D,EAAaqD,QAAQU,GACrBjQ,EAAKqM,KAAK9G,KAAK0K,GAEfjQ,EAAKuM,QAAQ4D,OAAOJ,GACpB7D,EAAaqD,QAAQQ,GACrB/P,EAAKsM,YAAY/G,KAAKwK,KAEjBA,GAGD7D,EAAA5P,UAAAN,OAAR,SAAewE,GACP,IAAA6B,EAAA1C,KAAA6P,OAAAhP,GAACiJ,EAAApH,EAAAoH,KAAMgG,EAAApN,EAAAoN,OAEPW,EAAAzQ,KAAAI,QAACsQ,EAAAD,EAAAxO,iBAAsBG,EAAAqO,EAAArO,QAK7B,OAJIsO,EAAGtP,IAAIP,KACTiJ,EAAKjG,MAAMZ,OAAYyN,EAAG9U,IAAIiF,GAAUuB,EAAQvB,GAAM,MAGjDb,KAAKoQ,MAAMtG,EAAMgG,IAGlBvD,EAAA5P,UAAAgU,UAAR,SAAkBC,QAAA,IAAAA,OAAA,GAChB,IAAMlR,EAAIM,KAAKwM,KACf,IAAKoE,EACH,OAAsB/Q,MAAMkG,KAAKrG,EAAEqP,UAGrC,IADA,IAAM8B,EAA2B,GAC1BnR,EAAEoR,kBAAkB,CACzB,IAAM/V,EAAiB2E,EAAEoR,iBACzBpR,EAAEgH,YAAY3L,GACdiF,KAAKqQ,QAAQtV,GACb8V,EAAUjL,KAAK7K,GAEjB,OAAO8V,GAOCtE,EAAA5P,UAAA2C,OAAV,eAAAe,EAAAL,KACQ4B,EAAQ5B,KAAK2J,QAAQ/H,MACrBmM,EAAW/N,KAAK+N,SAChBgD,EAAuBlR,MAAMkG,KAAK/F,KAAKwM,KAAKuC,UAClDvI,EAAMxG,KAAKwM,MACXuE,EAAMpQ,QAAQ,SAACmJ,EAAmB/O,GAChC,GAAIsF,EAAKuM,QAAQxL,IAAI0I,GAEnBiE,EAASiD,YAAYlH,OAFvB,CAKA,IAAMzM,EAAQgD,EAAK0P,UAAUjG,EAAM/O,EAAI6G,GAEvCmM,EAASiD,YAAY3Q,EAAK+P,MAAMtG,EAAMzM,OAExC2C,KAAKwM,KAAKwE,YAAYjD,IAQdxB,EAAA5P,UAAAsU,WAAV,SAAqBlP,EAAwDmP,GAA7E,IAAA7Q,EAAAL,UAA6E,IAAAkR,OAAA,GAC3E,IAAMC,EAAsBtR,MAAMkG,KAAK/F,KAAKwM,KAAKuC,UAC3ChB,EAAW/N,KAAK+N,SACjBmD,GACH1K,EAAMxG,KAAKwM,MAEb2E,EAAKxQ,QAAQ,SAACyQ,EAAkBvQ,GACzBsL,EAAciF,IAAkC,kBAA1BA,EAAI1N,QAAQC,WAA2D,SAA1ByN,EAAI1N,QAAQC,WAElF5B,EAASqP,EAAKvQ,EAAQR,EAAKsJ,QAAQ/H,OAEhCsP,GACHnD,EAASiD,YAAYI,KAGpBF,GACHlR,KAAKwM,KAAKwE,YAAYjD,IAIlBxB,EAAA5P,UAAA0R,oBAAR,SAA4BtI,EAAcsL,EAAYT,GACpD,YADoD,IAAAA,OAAA,GAC7C5Q,KAAK6F,OAAOE,EAAMsL,GAAI,EAAMT,IAG7BrE,EAAA5P,UAAA2R,iBAAR,SAAyBvI,EAAcsL,EAAYT,GACjD,YADiD,IAAAA,OAAA,GAC1C5Q,KAAK6F,OAAOE,EAAMsL,GAAI,EAAOT,IAG9BrE,EAAA5P,UAAAkJ,OAAR,SAAeE,EAAcsL,EAAYC,EAAwBV,GAC/D,QAD+D,IAAAA,OAAA,KAC3DS,EAAKtL,GAAT,CAOA,IAJA,IAAMrG,EAAIM,KAAKwM,KACTqE,EAA2B,GAE7BtB,EAAoB+B,EAAgB5R,EAAE4P,WAAa5P,EAAE+G,UAChD1L,EAAIgL,EAAMhL,GAAKsW,IAAMtW,EAAG,CAC/B,IAAM+O,EAAOyF,EACbA,EAAoB+B,EAAgB/B,EAAIgC,YAAchC,EAAIiC,gBAEtDZ,IACFlR,EAAEgH,YAAYoD,GACd9J,KAAKqQ,QAAQvG,IAEf+G,EAAUjL,KAAKkE,GAGjB,OAAO+G,IAGDtE,EAAA5P,UAAAwR,eAAR,SAAuBpI,EAAcsL,EAAYT,GAC/C,QAD+C,IAAAA,OAAA,KAC3CS,EAAKtL,GAAT,CAIA,IAAMgI,EAAW/N,KAAK+N,SACtB,GAAIhI,IAASsL,IAAMT,EAAnB,CAIA,IAAK,IAAI7V,EAAIgL,EAAMhL,GAAKsW,IAAMtW,EAC5BgT,EAASiD,YAAYhR,KAAK3D,OAAOtB,IAKnC,OAHI6V,GACF5Q,KAAKwM,KAAK6C,aAAatB,EAAU/N,KAAKwM,KAAK8C,YAEtCvB,EATL/N,KAAKwM,KAAK6C,aAAarP,KAAK3D,OAAO0J,GAAO/F,KAAKwM,KAAK8C,cAYhD/C,EAAA5P,UAAAyR,YAAR,SAAoBrI,EAAcsL,EAAYT,GAC5C,QAD4C,IAAAA,OAAA,KACxCS,EAAKtL,GAAT,CAIA,GAAIA,IAASsL,IAAMT,EAAnB,CAKA,IADA,IAAM7C,EAAW/N,KAAK+N,SACbhT,EAAIgL,EAAMhL,GAAKsW,IAAMtW,EAC5BgT,EAASiD,YAAYhR,KAAK3D,OAAOtB,IAKnC,OAHI6V,GACF5Q,KAAKwM,KAAKwE,YAAYjD,GAEjBA,EAVL/N,KAAKwM,KAAKwE,YAAYhR,KAAK3D,OAAO0J,MAa5BwG,EAAA5P,UAAA4R,aAAV,SAAuB3F,GACrB5I,KAAKgN,mBAAqBpE,EAE1B5I,KAAKyR,YAAY7I,IAGT2D,EAAA5P,UAAA8U,YAAV,SAAsB7I,GACb,IAAA3B,EAAAjH,KAAAI,QAAA6G,YACPyK,GAAa1R,KAAKwM,KAAM,EAAG5D,EAAY+I,QAAQ,IAC/CD,GAAa1R,KAAK4R,UAAW,EAAGxO,KAAK8F,IAAI,EAAGjC,EAAc,GAAG0K,QAAQ,KAQ7DpF,EAAA5P,UAAA+S,SAAV,SAAmBmC,GAEjB,OADA7R,KAAKmN,iBACD0E,EACK7R,KAAK8R,iBAAiBD,GAExB7R,KAAK+R,gBAGNxF,EAAA5P,UAAAoV,aAAR,WACE,IAAM3R,EAAUJ,KAAKI,QAEfiG,EAAWrG,KAAKwO,aAGtBxO,KAAKuO,aAAa,GAElBvO,KAAK2Q,YACL3Q,KAAKgS,YAEC,IAAAtP,EAAAgG,EAAArC,EAAAb,UAAAa,EAAAV,aAAAvF,EAAAmB,iBAAAnB,EAAAM,WAAAN,EAAAkC,cAACV,EAAAc,EAAAd,MAAOC,EAAAa,EAAAb,KAAM+G,EAAAlG,EAAAkG,YAEpB5I,KAAK2J,QAAQ/H,MAAQ5B,KAAK2J,QAAQmD,YAAclL,EAChD5B,KAAK2J,QAAQ9H,KAAO7B,KAAK2J,QAAQoD,WAAalL,EAE1CD,EAAQ,EAEV5B,KAAKuO,aAAa,IAGpBvO,KAAKoO,YAAYxM,EAAOC,GACxB7B,KAAKuO,aAAa3F,KAIZ2D,EAAA5P,UAAAmV,iBAAR,SAAyBD,GAAzB,IAAAxR,EAAAL,KACQgC,EAAS,IAAIvB,IACbuC,EAAO,IAAIiP,EAAUJ,EAAIhP,SAAUgP,EAAIK,aACvCC,EAAM,IAAIF,EAAUjS,KAAKI,QAASyR,EAAIO,YACtCC,EAAO3J,EAAM1I,KAAKwO,aAAahJ,UAAWxF,KAAKwO,aAAa7I,aAAcwM,EAAI/R,QAAQmB,iBAAkB4Q,EAAI/R,QAAQM,WAAYyR,EAAI/R,QAAQkC,cAG1IgQ,EAAsBzS,MAAMkG,KAAK/F,KAAKwM,KAAKuC,UAC3CrE,EAAMjP,OAAO+C,OAAO,GAAIwB,KAAK2J,SAGnCnD,EAAMxG,KAAKwM,MAEXxJ,EAAKT,UAAUmI,EAAI9I,MAAOwB,KAAK6F,IAAIyB,EAAI7I,KAAM6I,EAAI9I,MAAQ0Q,EAAKpT,QAASc,KAAKgN,mBAAoB,SAACjS,EAAGuB,EAAK+E,GACvG,IAAM7E,EAAI8V,EAAKvX,GACXyB,GACFwF,EAAOjB,IAAIzE,EAAK,CAACE,EAACA,EAAE6E,IAAGA,EAAEtG,EAACA,MAQhCiF,KAAK2J,QAAQ/H,MAAQ5B,KAAK2J,QAAQmD,YAAcuF,EAAKzQ,MACrD5B,KAAK2J,QAAQ9H,KAAO7B,KAAK2J,QAAQoD,WAAasF,EAAKxQ,KAEnD,IAAMkM,EAAW/N,KAAK+N,SAChBpK,EAA8B,GAEhCb,EAAQuP,EAAKzJ,YACjBuJ,EAAI5P,UAAU8P,EAAKzQ,MAAOyQ,EAAKxQ,KAAMwQ,EAAKzJ,YAAa,SAAC7N,EAAGuB,EAAK+E,GAC9D,IAAIoC,EAEAZ,EADA3G,EAAuBgE,EAAeiD,OAM1C,GAAInB,EAAOZ,IAAI9E,GAAM,CAEnB,IAAMwN,EAAO9H,EAAOpG,IAAIU,GACxB0F,EAAOwO,OAAOlU,GAIdwN,EAAKtN,EAAEkH,QAAQ7C,MAAQoP,OAAOlV,GAC9B0I,EAAOpD,EAAK+P,MAAMtG,EAAKtN,EAAG6D,EAAK0P,UAAUjG,EAAKtN,EAAGzB,IACjD8H,EAAW,CACThC,MAAOiJ,EAAK/O,EACZ+F,EAAGgJ,EAAKzI,IACR4B,OAAQD,EAAKd,kBAAkB4H,EAAK/O,GAAG,QAEpC,CAEL,IAAM2P,EAAM1H,EAAK7B,SAAS7E,GAE1BmH,EAAOpD,EAAKhE,OAAOtB,GAEnBmB,EAAOwO,EAAI7J,MAAQ,EAAIX,EAAe6D,KAAO7D,EAAeqS,cAC5D1P,EAAW,CACThC,MAAO6J,EAAI7J,MACXC,EAAG4J,EAAIrJ,KAAO,EAAIqJ,EAAIrJ,IAAMA,EAC5B4B,OAAQyH,EAAI7J,MAAQ,EAAIsR,EAAIjQ,kBAAkBnH,GAAG,GAAQiI,EAAKd,kBAAkBwI,EAAI7J,OAAO,IAG/F8C,EAAUiC,KAAK,CACbnC,KAAIA,EACJnH,IAAGA,EACHJ,KAAIA,EACJ2G,SAAQA,EACRC,MAAKA,EACL0P,mBAAoBnR,EACpB0B,QAAS,CACPlC,MAAO9F,EACP+F,EAAGO,EACH4B,OAAQkP,EAAIjQ,kBAAkBnH,MAGlC0I,EAAKI,MAAMC,UAAY,iBAAgBhB,EAAQzB,GAAG,MAClDyB,GAASD,EAASI,QAAWJ,EAAShC,MAAQ,EAAIsR,EAAI/P,QAAQrH,GAAKiI,EAAKZ,QAAQS,EAAShC,QAEzFkN,EAASiD,YAAYvN,KAGvB,IAAI+O,EAAqBH,EAAKxJ,OAE9B7G,EAAOrB,QAAQ,SAACmJ,EAAMxN,GAEpB,IAAMT,EAAIsW,EAAIhR,SAAS7E,GAGjBmW,EAAU5W,EAAEwF,KAAO,EAAIxF,EAAEwF,IAAMyI,EAAKzI,IACpCoC,EAAOqG,EAAKtN,EAIlBiH,EAAKI,MAAMC,UAAY,iBAAgBgG,EAAKzI,IAAMyB,GAAK,MACvDiL,EAASiD,YAAYvN,GAErB,IAAMiP,EAAa1P,EAAKd,kBAAkB4H,EAAK/O,GAAG,GAElD4I,EAAUiC,KAAK,CACbnC,KAAMqG,EAAKtN,EACXF,IAAGA,EACHJ,KAAML,EAAEgF,MAAQ,EAAIX,EAAe+D,KAAO/D,EAAegE,cACzDrB,SAAU,CACRhC,MAAOiJ,EAAK/O,EACZ+F,EAAGgJ,EAAKzI,IACR4B,OAAQyP,GAEV5P,MAAKA,EACL0P,mBAAkBA,EAClBzP,QAAS,CACPlC,MAAOhF,EAAEgF,MACTC,EAAG2R,EACHxP,OAAQpH,EAAEgF,MAAQ,EAAI,KAAOsR,EAAIjQ,kBAAkBrG,EAAEgF,UAGzD2R,GAAsB3W,EAAEgF,MAAQ,EAAIsR,EAAI/R,QAAQmB,iBAAoB4Q,EAAIjQ,kBAAkBrG,EAAEgF,OAAO,GAASsR,EAAI/P,QAAQvG,EAAEgF,OAC1HiC,GAAS4P,EAAc1P,EAAKZ,QAAQ0H,EAAK/O,KAG3CiF,KAAKuO,aAAa8D,EAAKzJ,aAEvB5I,KAAK2S,QAAQhP,EAAWkO,EAAIe,QAAUtP,EAAeN,EAAMmP,EAAKpE,IAG1DxB,EAAA5P,UAAAgW,QAAR,SAAgBhP,EAA6BiP,EAAkBC,EAA2BC,EAA0B/E,GAApH,IAAA1N,EAAAL,KACE,GAAI2D,EAAUzE,QAAU,EACtBc,KAAKwM,KAAKwE,YAAYjD,OADxB,CA8CA,IAzCA,IAAIgF,GAAqB,EACrBC,EAAW,EAETC,EAAe,SAACC,EAAenC,QAAA,IAAAA,MAAApN,GACnCoN,EAAMpQ,QAAQ,SAACwS,GAAS,OAAAD,EAAM1P,MAAM2P,EAAMN,EAAgBC,MAGtDM,EAAM,WAMV,GAJA7J,QAAQC,OAAO7F,EAAU,GAAIF,KAAK4P,WAAa,EAAG,oCAClDJ,EAAaL,EAAOI,MAGhBA,EAAWJ,EAAO1T,OAAtB,CAEE,IAAMmT,EAAOO,EAAOI,GACpBD,EAAe1N,KAAKC,WAAW8N,EAAKf,EAAK9O,WAH3C,CAQA,IAAMiJ,EAAOnM,EAAKmM,KAAKJ,UACvBvM,MAAMkG,KAAKyG,GAAM7L,QAAQ,SAACxB,GACpBA,EAAEmU,WAAWtI,MAAe7L,EAAEoU,SAAS,eACzC/G,EAAK3G,OAAO1G,KAIhBwE,EAAUhD,QAAQ,SAAC+B,OAACe,EAAAf,EAAAe,KAAMvH,EAAAwG,EAAAxG,KACpBA,IAASgE,EAAegE,eAAiBhI,IAASgE,EAAe+D,OAGrER,EAAKoC,SACLpC,EAAKI,MAAMC,UAAY,KACvBzD,EAAKgQ,QAAQ5M,MAEfpD,EAAK8M,eAAiB,aACtB4F,GAAgB,IAIgB,IAA3BH,EAAOI,GAAUzP,OACtB0P,EAAaL,EAAOI,MAGtB,IAAMxG,EAAOxM,KAAKwM,KAClBxM,KAAKwM,KAAKwE,YAAYjD,GAEtB,IAAMyF,EAAmC,GACzC7P,EAAYA,EAAU8P,OAAO,SAACpY,GAC5B,OAAIoH,EAAkBpH,EAAGwX,EAAezS,QAAQmB,iBAAkBuR,EAAc1S,QAAQmB,oBACtFiS,EAAe5N,KAAKvK,IACb,KAKPmY,EAAetU,OAAS,GAE1B0T,EAAOpI,MAAMwI,GAAUrS,QAAQ,SAACuS,GAAU,OAAAD,EAAaC,EAAOM,KAGvC,IAArB7P,EAAUzE,SAIdsN,EAAKJ,UAAU+C,IAAIjD,GACnB,IAAKwH,IAAI/P,EAAUkK,IAAI,SAACxS,GAAM,OAAAA,EAAEa,QAAQyE,QAAQ,SAACzE,GAE/CsQ,EAAKJ,UAAU+C,IAAInE,EAAY9K,EAAehE,GAAM0H,cAAc+P,MAAM,KAAK,GAAE,iBAGjF3T,KAAKmN,eAAiB,WAChB4F,GAAgB,IAIpBa,aAAab,GACbA,GAAgB,EAEhBC,EAAWJ,EAAO1T,OAAS,EAC3BkU,MAIFL,EAAe1N,KAAKC,WAAW8N,EAAKR,EAAOI,GAAUzP,UAM7CgJ,EAAA5P,UAAAqV,UAAV,WAEEhS,KAAK0M,KAAKxG,OAAO,EAAGlG,KAAK0M,KAAKxN,SAMtBqN,EAAA5P,UAAAkX,WAAV,WACE,IAAMxN,EAAWrG,KAAKwO,aACtBxO,KAAKyP,qBAAqBpJ,EAASb,UAAWa,EAASV,cAAc,GACrE3F,KAAKuO,aAAavO,KAAKgN,qBAUfT,EAAA5P,UAAA8S,qBAAV,SAA+BjK,EAAmBG,EAAsB6J,GAMtE,IALA,IAAMsE,EAAQ9T,KAAKyM,QAAQiB,iBAErBqG,EAAW3Q,KAAK8F,IAAI,EAAG1D,EAAYsO,GAEnCE,EAAehU,KAAKiU,eAAeF,EAAUpO,EAAemO,GAAStO,EAAYuO,IACnE/U,EAAA,EAAA0D,EAAA1C,KAAKsN,OAALtO,EAAA0D,EAAAxD,OAAAF,IAAa,CAAjB0D,EAAA1D,GACRkV,WAAW1E,EAAawE,GAEhC,OAAOA,GAGDzH,EAAA5P,UAAAwX,UAAR,SAAkBpR,EAAiBqR,GAEjC,GAAIA,GADMpU,KAAKyM,QAAQe,UAErB,OAAOzK,EAET,IAAMsR,EAAQrU,KAAKI,QAAQkC,aAC3B,OAAOc,KAAK6F,IAAIoL,EAAQ,EAAGtR,GAAW/C,KAAKyM,QAAQe,UAAY4G,KAGzD7H,EAAA5P,UAAA2X,WAAR,SAAmBvR,EAAiBwR,EAAyBH,GAE3D,GAAIA,GADMpU,KAAKyM,QAAQe,WACEzK,GAAW,EAClC,MAAO,CAACnB,MAAOmB,EAAS6F,YAAa2L,GAMvC,IAJA,IAAM3S,EAAQwB,KAAK8F,IAAI,EAAGnG,GAAW/C,KAAKyM,QAAQe,UAAY4G,IAExD1R,EAAA1C,KAAAI,QAAC6B,EAAAS,EAAAT,iBAAkBV,EAAAmB,EAAAnB,iBACrBqH,EAAc2L,EACTxZ,EAAI6G,EAAO7G,EAAIgI,IAAWhI,EAC7BkH,EAAiBb,IAAIrG,GACvB6N,GAAe3G,EAAiBrG,IAAIb,GAEpC6N,GAAerH,EAGnB,MAAO,CAACK,MAAKA,EAAEgH,YAAWA,IAGpB2D,EAAA5P,UAAAsX,eAAR,SAAuBzO,EAAmBG,GACxC,IAAMvF,EAAUJ,KAAKI,QACjBsC,EAAAgG,EAAAlD,EAAAG,EAAAvF,EAAAmB,iBAAAnB,EAAAM,WAAAN,EAAAkC,cAACV,EAAAc,EAAAd,MAAOC,EAAAa,EAAAb,KAAM+G,EAAAlG,EAAAkG,YAEZe,EAAU3J,KAAK2J,QAIrB,GAHAA,EAAQmD,YAAclL,EACtB+H,EAAQoD,WAAalL,EAEhBD,EAAQ+H,EAAQ/H,OAAU,GAAMC,EAAO8H,EAAQ9H,MAAS,EAE3D,OAAO8E,EAAc6N,KAGvB,IAEI3D,EACA4D,EAHA5Y,EAAmB8K,EAAc+N,KAIjCC,GAAc,EAElB,GAAI/S,EAAQ+H,EAAQ9H,MAAQA,EAAO8H,EAAQ/H,MAKzCiP,EAAY7Q,KAAK2Q,WAAU,GAC3B8D,EAAQzU,KAAKoO,YAAYxM,EAAOC,GAAM,GACtC8S,GAAc,EACd9Y,EAAI8K,EAAciO,SACb,GAAIhT,EAAQ+H,EAAQ/H,MAAO,CAGf+H,EAAQ9H,MAAQA,EAAO,IACxB7B,KAAKyM,QAAQe,UAC3BqD,EAAY7Q,KAAKsO,iBAAiBzM,EAAO,EAAG8H,EAAQ9H,MAAM,GAE1DA,EAAO8H,EAAQ9H,KAGjB,IAAMiS,EAAQ9T,KAAKsU,WAAW1S,EAAOgH,EAAae,EAAQ/H,MAAQ,EAAIA,GACtEA,EAAQkS,EAAMlS,MACdgH,EAAckL,EAAMlL,YACpB6L,EAAQzU,KAAKmO,eAAevM,EAAO+H,EAAQ/H,MAAQ,GAAG,GACtD+S,GAAc,EACd9Y,EAAI8K,EAAckO,aACb,CAGYjT,EAAQ,EAAI+H,EAAQ/H,OACrB5B,KAAKyM,QAAQe,UAC3BqD,EAAY7Q,KAAKqO,oBAAoB1E,EAAQ/H,MAAOA,EAAQ,GAAG,IAE/DA,EAAQ+H,EAAQ/H,MAChBgH,EAAc5I,KAAKgN,oBAGrBnL,EAAO7B,KAAKmU,UAAUtS,EAAMA,EAAO8H,EAAQ9H,KAAO,GAElD4S,EAAQzU,KAAKoO,YAAYzE,EAAQ9H,KAAO,EAAGA,GAAM,GACjD8S,GAAc,EACd9Y,EAAI8K,EAAcmO,YAQpB,OALAnL,EAAQ/H,MAAQA,EAChB+H,EAAQ9H,KAAOA,EAEf7B,KAAKuO,aAAa3F,GAClB5I,KAAK+U,WAAWlE,EAAW4D,EAAOE,GAC3B9Y,GAGD0Q,EAAA5P,UAAAoY,WAAR,SAAmBC,EAAsCC,EAAqCC,GAC5F,GAAIF,EACF,IAAmB,IAAAhW,EAAA,EAAAmW,EAAAH,EAAAhW,EAAAmW,EAAAjW,OAAAF,IAAW,CAAzB,IAAM8K,EAAIqL,EAAAnW,GACb8K,EAAKjE,SACL7F,KAAKqQ,QAAQvG,GAGZmL,IAGDC,EACFlV,KAAKwM,KAAKwE,YAAYiE,GAEtBjV,KAAKwM,KAAK6C,aAAa4F,EAAOjV,KAAKwM,KAAK8C,cAG9C/C,EAhzBA,GAkzBe6I,EAAA,EAGR,SAAS1D,GAAa2D,EAAmB/M,EAAoBxH,GAClE,IAAMwU,EAAO,aAAahN,EAAC,OAAOxH,EAAC,MAC7ByU,EAAeF,EACjBE,EAAQC,gBAAkBF,IAG9BC,EAAQC,cAAgBH,EAAKxR,MAAMC,UAAYwR,GC72BjD,SAASG,GAAapT,EAAaqT,GACjC,IAAkB,IAAA1W,EAAA,EAAA0D,EAAAjH,OAAOuL,KAAK0O,GAAZ1W,EAAA0D,EAAAxD,OAAAF,IAAqB,CAAlC,IAAM1C,EAAGoG,EAAA1D,GACNG,EAAYuW,EAAOpZ,GAEzB,GAAK6C,EAAEoU,SAAS,eAAhB,CAQA,IAAMoC,EAAQxW,EAAEqL,MAAM,GAAI,cAActL,QACxC,GAAImD,EAAO/F,KAASqZ,EAApB,CAGAtT,EAAO/F,GAAOqZ,EAEd,IAAMC,EAAStZ,EAAIuZ,QAAQ,uBAAwB,OAAOjS,cAC1DvB,EAAOyT,YAAYF,EAAQD,EAAO,mBAd5BtT,EAAO/F,KAAS6C,IAClBkD,EAAO/F,GAAO6C,IAiBtB,kBAUE,SAAA4W,EAAY1b,GATK2F,KAAAgW,MAAoB,GAG7BhW,KAAAiW,mBAAqB,EAO3BjW,KAAKyD,KAAOpJ,EAAK2T,cAAekB,cAAc,SAC9ClP,KAAKyD,KAAKuN,YAAY3W,EAAK2T,cAAekI,eAAe,KACzD7b,EAAK2W,YAAYhR,KAAKyD,MA6H1B,OA1HEsS,EAAApZ,UAAAgT,QAAA,WACE3P,KAAKyD,KAAKoC,UAGJkQ,EAAApZ,UAAAwZ,YAAR,eAAA9V,EAAAL,KACQoW,EAAQpW,KAAKoW,MACnB,GAAKA,EAAL,CAWA,IAAMJ,EAAQI,EAAMC,SACpB,GAAIL,EAAM9W,SAAWc,KAAKgW,MAAM9W,SAAUc,KAAKgW,MAAMM,MAAM,SAACjb,EAAGN,GAAM,OAAeib,EAAMjb,GAAIwb,eAAiBlb,EAAEmb,WAAjH,CAKAjN,QAAQkN,KAAK,gCAGb,IADA,IAAMzb,EAAIgb,EAAM9W,OACPnE,EAAI,EAAGA,EAAIC,IAAKD,EACvBqb,EAAMM,WAAW3b,GAInB,IAAmB,IAAAiE,EAAA,EAAA0D,EAAA1C,KAAKgW,MAALhX,EAAA0D,EAAAxD,OAAAF,IAAY,CAA1B,IAAM2X,EAAIjU,EAAA1D,GACP6B,EAAQuV,EAAMQ,WAAcD,EAAKH,SAAQ,MAAOJ,EAAMC,SAASnX,QAC/D2X,EAAwBT,EAAMC,SAASxV,GAC7C8V,EAAKH,SAAWK,EAAQN,aACxBd,GAAaoB,EAAQhT,MAAO8S,EAAK9S,aA7BnC,CACE,GAAI7D,KAAKiW,mBAAqB,EAC5B,OAGFjW,KAAKiW,kBAAoB5Q,KAAKC,WAAW,WACvCjF,EAAK4V,mBAAqB,EAC1B5V,EAAK8V,eACJ,MAyBP1a,OAAAC,eAAYqa,EAAApZ,UAAA,QAAK,KAAjB,WACE,OAA8BqD,KAAKyD,KAAK2S,uCAGlCL,EAAApZ,UAAAma,aAAR,SAAqBjW,GACnB,IAAMuV,EAAQpW,KAAKoW,MACnB,OAAOA,EAAsBA,EAAMC,SAASxV,GAAS,MAUvDkV,EAAApZ,UAAAoa,QAAA,SAAQC,EAAYR,EAAkB3S,GACpC7D,KAAKmW,cACL,IAAMC,EAAQpW,KAAKoW,MACnB,GAAKA,EAAL,CAKA,IAAMvV,EAAQuV,EAAMQ,WAAcJ,EAAQ,MAAOJ,EAAMC,SAASnX,QAC1DyX,EAAqBP,EAAMC,SAASxV,GAG1C,OAFAb,KAAKgW,MAAMpQ,KAAK,CAACoR,GAAEA,EAAER,SAAUG,EAAKJ,aAAc1S,MAAKA,IACvD4R,GAAakB,EAAK9S,MAAOA,GAClBmT,EAPLhX,KAAKgW,MAAMpQ,KAAK,CAACoR,GAAEA,EAAER,SAAQA,EAAE3S,MAAKA,KAiBxCkS,EAAApZ,UAAAsa,WAAA,SAAWD,EAAYR,EAAkB3S,GACvC7D,KAAKmW,cACL,IAAMtV,EAAQb,KAAKgW,MAAMkB,UAAU,SAAC7b,GAAM,OAAAA,EAAE2b,KAAOA,IACnD,GAAInW,EAAQ,EACV,OAAOb,KAAK+W,QAAQC,EAAIR,EAAU3S,GAEpC,IAAMsT,EAASnX,KAAKgW,MAAMnV,GAC1BsW,EAAOX,SAAWA,EAClBW,EAAOtT,MAAQA,EAEf,IAAM8S,EAAO3W,KAAK8W,aAAajW,GAQ/B,OAPI8V,IACEA,EAAKJ,aAAaV,QAAQ,OAAQ,MAAQW,EAASX,QAAQ,OAAQ,MACrEc,EAAKJ,aAAeC,EACpBW,EAAOX,SAAWG,EAAKJ,cAEzBd,GAAakB,EAAK9S,MAAOA,IAEpBmT,GAOTjB,EAAApZ,UAAA+Z,WAAA,SAAWM,GACThX,KAAKmW,cACL,IAAMtV,EAAQb,KAAKgW,MAAMkB,UAAU,SAAC7b,GAAM,OAAAA,EAAE2b,KAAOA,IACnD,KAAInW,EAAQ,GAAZ,CAGAb,KAAKgW,MAAM9P,OAAOrF,EAAO,GACzB,IAAMuV,EAAQpW,KAAKoW,MACfA,GACFA,EAAMM,WAAW7V,KAQrBpF,OAAAC,eAAcqa,EAAApZ,UAAA,YAAS,KAAvB,WACE,OAAOqD,KAAKgW,MAAMnI,IAAI,SAACxS,GAAM,OAAAA,EAAE2b,sCAEnCjB,EA1IA,GC/BO,SAASqB,GAAY/c,EAAmB2c,GAU7C,OATAA,EAAKA,EAAG1D,WAAW,KAAO0D,EAAGxM,MAAM,GAAKwM,EACxC3c,EAAKgd,UAAY,0BACIL,EAAE,YAAYvL,EAAgB,IAAIT,EAAS,UAAUgM,GAAK,2BAC3DpL,EAAe,IAAIZ,EAAS,SAASgM,GAAK,+CAE7CA,EAAE,YAAYtL,EAAc,IAAIV,EAAS,QAAQgM,GAAK,0BACpDrL,EAAgB,0CACfE,EAAe,IAAIb,EAAS,SAASgM,GAAK,0BAEvD3c,EA8BF,SAASid,GAASC,GACvB,MAAO,CACLC,MAAO,SAASD,EAChBE,MAAO,SAASF,EAChBG,GAAI,MAAMH,EACVI,GAAI,MAAMJ,EACVK,GAAI,MAAML,GAIP,SAASM,GAAgBN,GAC9B,IAAMO,EAAMR,GAASC,GACrB,MAAO,CACLC,MAAOxM,EAAS8M,EAAIN,OACpBC,MAAOzM,EAAS8M,EAAIL,OACpBC,GAAI1M,EAAS8M,EAAIJ,IACjBC,GAAI3M,EAAS8M,EAAIH,IACjBC,GAAI5M,EAAS8M,EAAIF,KAOrB,gBAAAG,GAOE,SAAAC,EAAY3d,EAAmB2c,GAA/B,IAAA3W,EACE0X,EAAA7c,KAAA8E,KAAM3F,IAAK2F,KACXK,EAAK2W,GAAKA,EAAG1D,WAAW,KAAO0D,EAAGxM,MAAM,GAAKwM,EAE7C3W,EAAKyX,IAAMR,GAASjX,EAAK2W,IACzB3W,EAAK4X,WAAaJ,GAAgBxX,EAAK2W,IAEvC,IAAMkB,EAA8B7d,EAAK8d,qBAAqB,UAAU,GAClE3J,EAA4BnU,EAAK8d,qBAAqB,QAAQ,GAGpE9S,KAAKC,WAAW,WACP,IAAAG,EAsGb,SAA0BpL,GACxB,IAAMmS,EAAOnS,EAAK2T,cAAexB,KACjCA,EAAK4L,mBAAmB,YAAa,qBACrB5M,EAA0B,2BAE1C,IAAM6J,EAAoB7I,EAAKsE,iBAEzBrL,EAAQ4P,EAAKgD,YAAchD,EAAK3P,YAChCzC,EAASoS,EAAKiD,aAAejD,EAAK1P,aAIxC,OAFA0P,EAAKxP,SAEE,CAACJ,MAAKA,EAAExC,OAAMA,GAlHVsV,CAAAle,GAAAoL,MACPpF,EAAK4W,WAAW,iBAAkB,WAAW5W,EAAK2W,GAAE,0BAA2B,CAC7EwB,YAAgB/S,EAAK,0BAEtB,IAEH,IAAIiF,EAAMwN,EAAe3S,kBAGzBa,EAAUoI,EAAc,YAAa,SAACe,GACpC,IAAMkJ,EAAWlJ,EAAItK,KACjByF,IAAQ+N,IACV/N,EAAMwN,EAAe3S,WAAakT,GAEpCpe,EAAK+R,UAAU8D,OAAO3E,EAAmBgE,EAAItK,KAAO,OAkF1D,OAnH8CnF,EAAAkY,EAAAD,GA6C5CC,EAAArb,UAAA2C,OAAA,SAAOiC,EAA0BoJ,EAAoBvI,EAAoCsW,EAAqBnB,EAAiBoB,QAAA,IAAAA,MAAA,MAC7H,IAAMb,EAAMR,GAASC,GACfqB,EAAYf,GAAgBN,GAE5BlD,EAAQ,GAAG1J,EAAQkO,OAAO,SAACrR,EAAG9H,EAAG3E,GAAM,OAAAyM,EAAI9H,EAAE+F,MAAQrD,EAAQrH,IAAI,GAAK4d,EAE5E3Y,KAAKiX,WAAW,gBAAgB2B,EAAUlB,GAAM,IAAIkB,EAAUlB,GAAM,CAClEzU,OAAW1B,EAAgB,KAC3BkE,MAAO4O,IAGTrU,KAAKiX,WAAW,gBAAgB2B,EAAUnB,MAAS,IAAIK,EAAIL,MAAS,CAClEhS,MAAO4O,IAGTrU,KAAK8Y,cAAcnO,EAASvI,EAASwW,EAAWF,EAAaC,IAO/DX,EAAArb,UAAAkJ,OAAA,SAAO0R,GACL,IAAMqB,EAAYf,GAAgBN,GAClCvX,KAAK0W,WAAW,gBAAgBkC,EAAUlB,IAC1C1X,KAAK0W,WAAW,gBAAgBkC,EAAUnB,OAK1C,IAHA,IAAMsB,EAAS,QAAQH,EAAUhB,GAAE,IAC7B5B,EAAQhW,KAAKgZ,UAAUH,OAAO,SAACrR,EAAG9H,GAAM,OAAA8H,GAAK9H,EAAE4T,WAAWyF,GAAU,EAAI,IAAI,GAEzEhe,EAAI,EAAGA,EAAIib,IAASjb,EAC3BiF,KAAK0W,WAAW,GAAGqC,EAAShe,IAIxBid,EAAArb,UAAAmc,cAAR,SAAsBnO,EAAoBvI,EAAoC6W,EAA0BP,EAAqBC,GAA7H,IAAAtY,EAAAL,UAA6H,IAAA2Y,MAAA,MAC3H,IAAMI,EAAS,QAAQE,EAAarB,GAAE,IAChC5B,EAAQ,IAAItC,IAAI1T,KAAKgZ,UAAUvF,OAAO,SAACpY,GAAM,OAAAA,EAAEiY,WAAWyF,MAE5DpR,EAAM,EACVgD,EAAQhK,QAAQ,SAACvF,EAAGL,GAClB,IAAM4c,EAAK,IAAIsB,EAAatB,GAAE,aAAavc,EAAE4b,GAAE,KACzCkC,EAAyC,CAC7CzT,MAAO,GAAGrK,EAAEqK,MAAQkT,GAEhBf,EAAK,IAAIqB,EAAarB,GAAE,aAAaxc,EAAE4b,GAAE,KACzCmC,EAAyC,CAC7CrV,UAAW,cAAc6D,EAAMgR,EAAI,IACnClT,MAAO,GAAGrK,EAAEqK,MAAQkT,GAGlBvd,EAAE0P,SACJoO,EAASjU,KAAU0C,EAAG,KAEtBtH,EAAK4W,WAAW,GAAG8B,EAASnB,EAAE,IAAK,IAAIqB,EAAarB,GAAE,IAAIrM,EAAiB,aAAanQ,EAAE4b,GAAE,KAAM,CAChGlT,UAAW,gBACXmB,KAAM,IAAG0C,EAAM+Q,GAAcC,IAE/B3C,EAAMxF,OAAO,GAAGuI,EAASnB,EAAE,MAG7BvX,EAAK4W,WAAW,GAAG8B,EAASpB,EAAMA,EAAIuB,GACtClD,EAAMxF,OAAO,GAAGuI,EAASpB,GACzBtX,EAAK4W,WAAW,GAAG8B,EAASnB,EAAMA,EAAIuB,GACtCnD,EAAMxF,OAAO,GAAGuI,EAASnB,GACzBjQ,GAAOvM,EAAEqK,MAAQrD,EAAQrH,KAG3Bib,EAAMrV,QAAQ,SAACtF,GAAM,OAAAgF,EAAKqW,WAAWrb,MAEzC2c,EAnHA,CAA8CoB,IC1D9C,IAgpBeC,GAtoBf,WAwBE,SAAAC,EAA+BC,EAAwC1V,EAA0C0T,OAAjH,IAAAlX,EAAAL,KAAkIwZ,EAAA,GAAAxa,EAAA,EAAAA,EAAAya,UAAAva,OAAAF,IAAAwa,EAAAxa,EAAA,GAAAya,UAAAza,GAAnGgB,KAAAuZ,SAAwCvZ,KAAA6D,QAA0C7D,KAAAuX,UAnBhGvX,KAAA0Z,SAA4B,GAC5B1Z,KAAA4M,QAAU,IAAIC,QAGtB7M,KAAA2Z,eAAiB,CACxB7O,OAAkB,GAClBlJ,MAAO,EACPkL,YAAa,EACbjL,MAAO,EACPkL,YAAa,GAEf/M,KAAA4Z,sBAAwB,EAEhB5Z,KAAA6Z,qBAA+B,EAQrC7Z,KAAK8Z,cAAgB9Z,KAAK+Z,sBAC1B/Z,KAAKga,aAAeR,EAAa3L,IAAI,SAACC,GAAe,WAAIA,EAAWzN,EAAKyZ,iBAEzE9Z,KAAKia,eAAiBV,EAAOvL,cAAeC,yBAomBhD,OAjmBEqL,EAAA3c,UAAAud,UAAA,WACE,IAAMrI,EAAM7R,KAAKI,QACX0K,EAAS9K,KAAK2Z,eAAe7O,OAAO+N,OAAO,SAACrR,EAAGnM,GAAM,OAAAmM,EAAIqK,EAAIlH,QAAQtP,GAAGoK,MAAQoM,EAAIsI,OAAO/X,QAAQ/G,IAAI,GAC7G,OAAO2E,KAAK4Z,sBAAwB9O,GAGtCrP,OAAAC,eAAc4d,EAAA3c,UAAA,iBAAc,KAA5B,WACE,OAAoBqD,KAAKuZ,OAAO3K,+CAGlC0K,EAAA3c,UAAAyd,eAAA,SAAetM,EAAyBrB,GACtCzM,KAAKga,aAAapU,KAAK,IAAIkI,EAAW9N,KAAK8Z,cAAerN,KAGpD6M,EAAA3c,UAAAod,oBAAR,eAAA1Z,EAAAL,KACQnE,EAAS,CACb8N,QAAS3J,KAAK2Z,eACdxL,eAAgBnO,KAAKqa,iBAAiB9d,KAAKyD,MAC3CoO,YAAapO,KAAKsa,eAAe/d,KAAKyD,MACtCqO,oBAAqBrO,KAAKua,sBAAsBhe,KAAKyD,MACrDsO,iBAAkBtO,KAAKwa,oBAAoBje,KAAKyD,MAChDuO,aAAcvO,KAAKya,mBAAmBle,KAAKyD,MAC3CqG,SAAUrG,KAAKkY,eACfwC,WAAY1a,KAAK0a,WAAWne,KAAKyD,MACjCuG,qBAAsB,WAAM,OAAAA,EAAqBlG,EAAK6X,eAAgB,eAoBxE,OAlBAzc,OAAOgT,iBAAiB5S,EAAG,CACzBmR,mBAAoB,CAClBpR,IAAK,WAAM,OAAAyE,EAAKuZ,uBAChBje,YAAY,GAEdyE,QAAS,CACPxE,IAAK,WAAM,OAAAyE,EAAKD,QAAQ+Z,QACxBxe,YAAY,GAEd+S,aAAc,CACZ9S,IAAK,WAAM,OAAAyE,EAAK6M,eAAiB7M,EAAK6M,eAAejI,KAAO,GAC5DtJ,YAAY,GAEdgT,YAAa,CACX/S,IAAK,WAAM,OAAAyE,EAAK6M,eAAiB7M,EAAK6M,eAAezH,MAAQpF,EAAK6X,eAAexS,aACjF/J,YAAY,KAGTE,GAGTyd,EAAA3c,UAAAwB,KAAA,eAAAkC,EAAAL,KACQI,EAAUJ,KAAKI,QACrBJ,KAAK6D,MAAMvE,OAAOc,EAAQmB,iBAAmBnB,EAAQgC,SAAS,GAAIhC,EAAQuK,QAASvK,EAAQ+Z,OAAO/X,QAAS,EAAGpC,KAAKuX,SAEnHnX,EAAQuK,QAAQhK,QAAQ,WAEtBN,EAAKqZ,SAAS9T,KAAK,OAIvB0T,EAAA3c,UAAAge,uBAAA,SAAuBpV,EAAoBG,EAAqBkV,GAE9D,IADA,IAAM5G,EAAehU,KAAK6a,2BAA2BtV,EAAYG,GAC7C1G,EAAA,EAAA0D,EAAA1C,KAAKga,aAALhb,EAAA0D,EAAAxD,OAAAF,IAAmB,CAAvB0D,EAAA1D,GACRkV,WAAW0G,EAAc5G,GAEjC,OAAOA,GAuBDsF,EAAA3c,UAAA4d,sBAAR,SAA8BxU,EAAcsL,EAAYqH,GAAxD,IAAArY,EAAAL,UAAwD,IAAA0Y,MAAsB1Y,KAAK2Z,eAAe7O,OAAO5L,QACvGc,KAAKiR,WAAW,SAACG,GACf/Q,EAAKya,oBAAoB1J,EAAKrL,EAAMsL,EAAIqH,MAOpCY,EAAA3c,UAAAme,oBAAR,SAA4B1J,EAAkBrL,EAAcsL,EAAYqH,GACtE,IAAK,IAAI3d,EAAIgL,EAAMhL,GAAKsW,IAAMtW,EAAG,CAC/B,IAAM0I,EAAqC,IAAhBiV,EAAoBtH,EAAI2J,kBAAoB3J,EAAIrC,SAAS2J,GACpFjV,EAAKoC,SACL7F,KAAKgb,YAAYvX,EAAM1I,KAOnBue,EAAA3c,UAAA6d,oBAAR,SAA4BzU,EAAcsL,GAA1C,IAAAhR,EAAAL,KACEA,KAAKiR,WAAW,SAACG,GACf/Q,EAAK4a,kBAAkB7J,EAAKrL,EAAMsL,MAO9BiI,EAAA3c,UAAAse,kBAAR,SAA0B7J,EAAkBrL,EAAcsL,GACxD,IAAK,IAAItW,EAAIsW,EAAItW,GAAKgL,IAAQhL,EAAG,CAC/B,IAAM0I,EAAoB2N,EAAIN,iBAC9BrN,EAAKoC,SACL7F,KAAKgb,YAAYvX,EAAM1I,KAOnBue,EAAA3c,UAAAue,kBAAR,SAA0B9J,EAAkB+J,EAAyBrH,GACnE,IAA0B,IAAA9U,EAAA,EAAAoc,EAAAD,EAAAnc,EAAAoc,EAAAlc,OAAAF,IAAe,CAApC,IAAMqc,EAAWD,EAAApc,GACdyE,EAAoB2N,EAAIrC,SAAS+E,GACvCrQ,EAAKoC,SACL7F,KAAKgb,YAAYvX,EAAM4X,KAOnB/B,EAAA3c,UAAA2e,oBAAR,SAA4BH,EAAyBrH,GAArD,IAAAzT,EAAAL,KACEA,KAAKiR,WAAW,SAACG,GACf/Q,EAAK6a,kBAAkB9J,EAAK+J,EAAerH,MAOvCwF,EAAA3c,UAAA4e,iBAAR,SAAyBC,GAAzB,IAAAnb,EAAAL,KACEA,KAAKiR,WAAW,SAACG,GACf/Q,EAAKob,eAAerK,EAAKoK,MAOrBlC,EAAA3c,UAAA8e,eAAR,SAAuBrK,EAAkBoK,EAA0B1H,GAAnE,IAAAzT,EAAAL,UAAmE,IAAA8T,MAAQ9T,KAAK2Z,eAAe/X,OAC7F,IAAM8Z,EAAqB7b,MAAMkG,KAAKqL,EAAIrC,UACpCjE,EAAS9K,KAAK2Z,eAAe7O,OAGnC,GAFAtE,EAAM4K,GAEFoK,GAAqC,IAAlB1Q,EAAO5L,OAC5B,IAAgB,IAAAF,EAAA,EAAA2c,EAAA7Q,EAAA9L,EAAA2c,EAAAzc,OAAAF,IAAQ,CAAnB,IAAMjE,EAAC4gB,EAAA3c,GACVgB,KAAKgb,YAAYU,EAAI5H,QAAU/Y,QAIjC,IAAgB,IAAA2H,EAAA,EAAAkZ,EAAA9Q,EAAApI,EAAAkZ,EAAA1c,OAAAwD,IAAQ,CAAZkZ,EAAAlZ,GACV0O,EAAIJ,YAAY0K,EAAI5H,SAGxB4H,EAAI/a,QAAQ,SAACmJ,EAAM/O,GACjBsF,EAAK2a,YAAYlR,EAAM/O,EAAI+Y,MAQvBwF,EAAA3c,UAAAkf,gBAAR,SAAwBzK,EAAa+I,EAAgBxP,GACnD,IAGIb,EACAvK,EAJEmN,EAAO1M,KAAK0Z,SAASS,GACrB2B,EAAYnR,EAAQwP,GAIpB4B,EAASrP,EAAK7B,MAEdhP,EAAIkgB,EAAS/b,KAAKgc,WAAWD,EAAQ3K,EAAK0K,IAAcC,EAAS/b,KAAKic,WAAWjc,KAAKuZ,OAAOvL,cAAgBoD,EAAK0K,GAYxH,OAXIzc,EAAcxD,IAChBiO,EAAOjO,EAAEiO,KACTvK,EAAQ1D,EAAE0D,OAEVuK,EAAOjO,EAELiO,IAASiS,IACXjS,EAAKpG,QAAQsT,GAAK8E,EAAU9E,GAC5BlN,EAAKsC,UAAU+C,IAAInD,EAAchM,KAAK6D,MAAMoU,WAAWL,GAAI5M,EAAS,MAAMhL,KAAKuX,WAEjFvX,KAAKkc,mBAAmBpS,EAAMgS,GACvB,CAAChS,KAAIA,EAAEvK,MAAKA,IAGrB+Z,EAAA3c,UAAAwf,gBAAA,SAAgBrS,EAAmBvK,EAAgC4a,GAAnE,IAAA9Z,EAAAL,UAAmE,IAAAma,OAAkB,GACnFrQ,EAAKsC,UAAU+C,IAAIjE,GACnB,IAAM7N,EAAQkC,EAYd,OATAS,KAAK4M,QAAQ7L,IAAI+I,EAAMzM,GACvBA,EAAML,KAAK,SAAC8S,GACVzP,EAAKuM,QAAQ4D,OAAO1G,GACpBA,EAAKsC,UAAUvG,OAAOqF,GAClB4E,IAAW7S,GAAWkd,GAAU,GAElC9Z,EAAKqZ,SAASS,GAAQvU,KAAKkE,KAGxBA,GAGDwP,EAAA3c,UAAAyf,WAAR,SAAmBhL,EAAa+I,EAAgBxP,GACxC,IAAAjI,EAAA1C,KAAA6b,gBAAAzK,EAAA+I,EAAAxP,GAACb,EAAApH,EAAAoH,KAAMvK,EAAAmD,EAAAnD,MACb,OAAKH,EAAYG,GAGVS,KAAKmc,gBAAgBrS,EAAMvK,EAAO4a,GAFhCrQ,GAKDwP,EAAA3c,UAAAuf,mBAAV,SAA6BzY,EAAmB4Y,GAC9C5Y,EAAK2I,UAAU8D,OAAO3E,EAAmB8Q,EAAIvR,QAAU9K,KAAK6Z,sBAG9DP,EAAA3c,UAAAqe,YAAA,SAAYlR,EAAmBqQ,SAAA,IAAAA,OAAkB,GAE3Cna,KAAK4M,QAAQxL,IAAI0I,IACL9J,KAAK4M,QAAQhR,IAAIkO,GACzBzM,SACI8O,EAAcrC,IAASqQ,GAAU,GAC3Cna,KAAK0Z,SAASS,GAAQvU,KAAKkE,IAIvBwP,EAAA3c,UAAA0d,iBAAR,SAAyBtU,EAAcsL,EAAYqH,GAAnD,IAAArY,EAAAL,UAAmD,IAAA0Y,MAAsB1Y,KAAK2Z,eAAe7O,OAAO5L,QAC3F,IAAAyL,EAAA3K,KAAAI,QAAAuK,QACP3K,KAAKiR,WAAW,SAACG,EAAkBkL,GACjCjc,EAAKkc,eAAenL,EAAKkL,EAAUvW,EAAMsL,EAAIqH,EAAa/N,MAOtD2O,EAAA3c,UAAA4f,eAAR,SAAuBnL,EAAkBkL,EAAkBvW,EAAcsL,EAAYqH,EAAqB/N,GAIxG,IAAK,IAAI5P,EAAIsW,EAAItW,GAAKgL,IAAQhL,EAAG,CAC/B,IAAMyhB,EAAOxc,KAAKoc,WAAWE,EAAUvhB,EAAG4P,GAC1CyG,EAAI/B,aAAamN,EAAM9D,EAAc,EAAItH,EAAIrC,SAAS2J,GAAetH,EAAI9B,cAOrEgK,EAAA3c,UAAA8f,kBAAR,SAA0BrL,EAAkBkL,EAAkBnB,EAAyBrH,EAAenJ,GAEpG,IADA,IAAM1J,EAASmQ,EAAIrC,SAAS+E,GACZ9U,EAAA,EAAA0d,EAAAvB,EAAAnc,EAAA0d,EAAAxd,OAAAF,IAAe,CAA1B,IAAMjE,EAAC2hB,EAAA1d,GACJwd,EAAOxc,KAAKoc,WAAWE,EAAUvhB,EAAG4P,GACtC1J,EACFmQ,EAAI/B,aAAamN,EAAMvb,GAEvBmQ,EAAIJ,YAAYwL,KAKdlD,EAAA3c,UAAAggB,oBAAR,SAA4BxB,EAAyBrH,GAArD,IAAAzT,EAAAL,KACS2K,EAAA3K,KAAAI,QAAAuK,QACP3K,KAAKiR,WAAW,SAACG,EAAkBkL,GACjCjc,EAAKoc,kBAAkBrL,EAAKkL,EAAUnB,EAAerH,EAAOnJ,MAIxD2O,EAAA3c,UAAA2d,eAAR,SAAuBvU,EAAcsL,GAArC,IAAAhR,EAAAL,KACS2K,EAAA3K,KAAAI,QAAAuK,QACP3K,KAAKiR,WAAW,SAACG,EAAkBkL,GACjCjc,EAAKuc,aAAaxL,EAAKkL,EAAUvW,EAAMsL,EAAI1G,MAOvC2O,EAAA3c,UAAAkgB,WAAR,WACS,IAAAlS,EAAA3K,KAAAI,QAAAuK,QACP3K,KAAKiR,WAAW,SAACG,EAAKkL,GAAa,OAAAQ,GAAU1L,EAAKkL,EAAU3R,MAGtD2O,EAAA3c,UAAAigB,aAAR,SAAqBxL,EAAkBkL,EAAkBvW,EAAcsL,EAAY1G,GACjF,IAAK,IAAI5P,EAAIgL,EAAMhL,GAAKsW,IAAMtW,EAAG,CAC/B,IAAMyhB,EAAOxc,KAAKoc,WAAWE,EAAUvhB,EAAG4P,GAC1CyG,EAAIJ,YAAYwL,KAOpBlD,EAAA3c,UAAAogB,cAAA,eAAA1c,EAAAL,KACS2K,EAAA3K,KAAAI,QAAAuK,QACP9K,MAAMkG,KAAK/F,KAAKuZ,OAAOxK,UAAUpO,QAAQ,SAAC8C,EAAe1I,GACvD,IAGIyB,EAHEwgB,EAAoBvZ,EACpB4Y,EAAM1R,EAAQ5P,GACdc,EAAIwE,EAAK4c,aAAaD,EAAMX,IAGhC7f,EADE6C,EAAcxD,GACZwE,EAAK8b,gBAAgBtgB,EAAEiO,KAAMjO,EAAE0D,OAAQ,GAEvC1D,GAAKmhB,KAEDA,IAGVxgB,EAAEkH,QAAQsT,GAAKqF,EAAIrF,GACnBxa,EAAE4P,UAAU+C,IAAIpD,EAAc1L,EAAKwD,MAAMoU,WAAWN,GAAI3M,EAAS,MAAM3K,EAAKkX,UAC5ElX,EAAKkZ,OAAOhJ,aAAayM,EAAMxgB,OAInC8c,EAAA3c,UAAA+S,SAAA,SAASzK,EAAcQ,GAAvB,IAAApF,EAAAL,KACQI,EAAUJ,KAAKI,QAErBJ,KAAK6D,MAAMvE,OAAOc,EAAQmB,iBAAmBnB,EAAQgC,SAAS,GAAIhC,EAAQuK,QAASvK,EAAQ+Z,OAAO/X,SAAUpC,KAAKka,YAAala,KAAKuX,SAGnIvX,KAAKgS,YAEL,IAAK,IAAIjX,EAAIiF,KAAK0Z,SAASxa,OAAQnE,EAAIqF,EAAQuK,QAAQzL,SAAUnE,EAC/DiF,KAAK0Z,SAAS9T,KAAK,IAUnB,IALA,IAAMsX,EAAWld,KAAKia,eAChBkD,EAAWD,EAASlP,cAGpBoP,EAAM,IAAI3c,IACTT,KAAKuZ,OAAO9S,WAAW,CAC5B,IAAMrL,EAAiB4E,KAAKuZ,OAAO9S,UACnCzG,KAAKuZ,OAAO7S,YAAYtL,GACxBgiB,EAAIrc,IAAI3F,EAAEsI,QAAQsT,GAAK5b,GAGzBgF,EAAQuK,QAAQhK,QAAQ,SAAC0b,GACvB,IAEI7f,EAFE6gB,EAAWD,EAAIxhB,IAAIygB,EAAIrF,IACvBnb,EAAIwhB,EAAWhd,EAAK4c,aAAaI,EAAUhB,IAAQgB,EAAWhd,EAAKid,aAAaH,EAAUd,IAG9F7f,EADE6C,EAAcxD,GACZwE,EAAK8b,gBAAgBtgB,EAAEiO,KAAMjO,EAAE0D,OAAQ,GAEvC1D,KAEIwhB,IACR7gB,EAAEkH,QAAQsT,GAAKqF,EAAIrF,GACnBxa,EAAE4P,UAAU+C,IAAIpD,EAAc1L,EAAKwD,MAAMoU,WAAWN,GAAI3M,EAAS,MAAM3K,EAAKkX,WAE9E2F,EAASlM,YAAYxU,KAEvBwD,KAAKuZ,OAAOvI,YAAYkM,GAGpB,IAAAxa,EAAAgG,EAAAzD,EAAAQ,EAAArF,EAAA+Z,OAAA5Y,iBAAAnB,EAAA+Z,OAAAzZ,WAAAN,EAAA+Z,OAAA7X,cAACV,EAAAc,EAAAd,MAAOC,EAAAa,EAAAb,KAAM+G,EAAAlG,EAAAkG,YAIpB,GAFA5I,KAAK2Z,eAAe/X,MAAQ5B,KAAK2Z,eAAe7M,YAAclL,EAC9D5B,KAAK2Z,eAAe9X,KAAO7B,KAAK2Z,eAAe5M,WAAalL,EACxDzB,EAAQuK,QAAQ3E,KAAK,SAAC5K,GAAM,OAAAA,EAAE0P,SAAS,CAClC,IAAAzI,EAAAoI,EAAA,GAAArK,EAAAuK,QAAA/I,GAAAS,OACPrC,KAAK2Z,eAAe7O,OAASzI,OAE7BrC,KAAK2Z,eAAe7O,OAAS,GAE/B9K,KAAKya,mBAAmB7R,IAG1B0Q,EAAA3c,UAAAqV,UAAA,WACEhS,KAAK0Z,SAAS/Y,QAAQ,SAAC9D,GAAM,OAAAA,EAAEqJ,OAAO,EAAGrJ,EAAEqC,WAGnCoa,EAAA3c,UAAA8d,mBAAV,SAA6B8C,GAC3B,IAAMC,EAAUD,IAAmBvd,KAAK4Z,sBAExC,GADA5Z,KAAK4Z,sBAAwB2D,EACzBC,EAAS,CACX,IAAMpd,EAAUJ,KAAKI,QACrBJ,KAAK6D,MAAMvE,OAAOc,EAAQmB,iBAAmBnB,EAAQgC,SAAS,GAAIhC,EAAQuK,QAASvK,EAAQ+Z,OAAO/X,SAAUpC,KAAKka,YAAala,KAAKuX,WAIvI+B,EAAA3c,UAAAqT,UAAA,SAAUvM,EAAmB6Y,GACpB,IAAA3R,EAAA3K,KAAAI,QAAAuK,QACDhB,EAAU3J,KAAK2Z,eAErB,GAAIhQ,EAAQmB,OAAO5L,OAAS,EAC1B,IAAgB,IAAAF,EAAA,EAAA0D,EAAAiH,EAAQmB,OAAR9L,EAAA0D,EAAAxD,OAAAF,IAAgB,CAA3B,IAAMjE,EAAC2H,EAAA1D,GACJwd,EAAOxc,KAAKoc,WAAWE,EAAUvhB,EAAG4P,GAC1ClH,EAAKuN,YAAYwL,GAGrB,IAASzhB,EAAI4O,EAAQ/H,MAAO7G,GAAK4O,EAAQ9H,OAAQ9G,EAAG,CAC5CyhB,EAAOxc,KAAKoc,WAAWE,EAAUvhB,EAAG4P,GAC1ClH,EAAKuN,YAAYwL,KAIrBlD,EAAA3c,UAAAoT,UAAA,SAAUtM,EAAmB6Y,GACpB,IAAA3R,EAAA3K,KAAAI,QAAAuK,QACDhB,EAAU3J,KAAK2Z,eAIrB,OAAQlW,EAAKga,mBACX,KAAK,EACC9T,EAAQmB,OAAO5L,OAAS,GAC1Bc,KAAKyc,kBAAkBhZ,EAAM6Y,EAAU3S,EAAQmB,OAAQ,EAAGH,GAE5D3K,KAAK4c,aAAanZ,EAAM6Y,EAAU3S,EAAQ/H,MAAO+H,EAAQ9H,KAAM8I,GAC/D,MACF,KAAK,EACH,IAAMD,EAAmBjH,EAAKsX,kBACxB2C,EAAKhT,EAAIhH,QAAQsT,GACjBqE,EAAc1Q,EAAQuM,UAAU,SAAC9b,GAAM,OAAAA,EAAE4b,KAAO0G,IACtDja,EAAKiD,YAAYgE,GACb2Q,GAAe,GACjBrb,KAAKgb,YAAYtQ,EAAK2Q,GAGpB1R,EAAQmB,OAAO5L,OAAS,GAC1Bc,KAAKyc,kBAAkBhZ,EAAM6Y,EAAU3S,EAAQmB,OAAQ,EAAGH,GAE5D3K,KAAK4c,aAAanZ,EAAM6Y,EAAU3S,EAAQ/H,MAAO+H,EAAQ9H,KAAM8I,GAC/D,MACF,QACE3K,KAAK2d,aAAala,EAAM6Y,KAKtBhD,EAAA3c,UAAAghB,aAAR,SAAqBla,EAAmB6Y,GAKtC,IALF,IAAAjc,EAAAL,KACS2K,EAAA3K,KAAAI,QAAAuK,QACDhB,EAAU3J,KAAK2Z,eACf7B,EAAM,IAAIrX,IAETgD,EAAKgD,WAAW,CACrB,IAAMrL,EAAiBqI,EAAKgD,UAC5BhD,EAAKiD,YAAYtL,GACjB0c,EAAI/W,IAAI3F,EAAEsI,QAAQsT,GAAK5b,GA2BzB,IAxBA,IAAMwiB,EAAa,SAAC7iB,GAClB,IAAMshB,EAAM1R,EAAQ5P,GACdsiB,EAAWvF,EAAIlc,IAAIygB,EAAIrF,IAC7B,GAAKqG,EAAL,CAKAvF,EAAItH,OAAO6L,EAAIrF,IACf,IACIwF,EADE3gB,EAAIwE,EAAK2b,WAAWqB,EAAUf,EAAUD,IAAQgB,GAGpDb,EADEnd,EAAcxD,GACTwE,EAAK8b,gBAAgBtgB,EAAEiO,KAAMjO,EAAE0D,MAAOxE,GAEtCc,IAEG2gB,IAASa,IACnBb,EAAK9Y,QAAQsT,GAAKqF,EAAIrF,GACtBwF,EAAKpQ,UAAU+C,IAAInD,EAAc3L,EAAKwD,MAAMoU,WAAWL,GAAI5M,EAAS,MAAM3K,EAAKkX,WAEjFlX,EAAK6b,mBAAmBM,EAAMH,GAC9B5Y,EAAKuN,YAAYwL,OAlBjB,CACE,IAAMqB,EAAOxd,EAAK+b,WAAWE,EAAUvhB,EAAG4P,GAC1ClH,EAAKuN,YAAY6M,KAmBA7e,EAAA,EAAA0D,EAAAiH,EAAQmB,OAAR9L,EAAA0D,EAAAxD,OAAAF,IAAgB,CACnC4e,EADelb,EAAA1D,IAGjB,IAAK,IAAIjE,EAAI4O,EAAQ/H,MAAO7G,GAAK4O,EAAQ9H,OAAQ9G,EAC/C6iB,EAAW7iB,GAGb,GAAiB,IAAb+c,EAAI1S,KAAR,CAKA,IAAM0Y,EAAO,IAAIrd,IAAIkK,EAAQkD,IAAI,SAACxS,EAAGN,GAAM,MAAkB,CAACM,EAAE2b,GAAIjc,MACpE+c,EAAInX,QAAQ,SAAC8C,EAAMnH,GACjB,IAAMuE,EAAQid,EAAKliB,IAAIU,GACV,MAATuE,GAAiBA,GAAS,GAC5BR,EAAK2a,YAAYvX,EAAM5C,OAKrByY,EAAA3c,UAAAohB,oBAAR,WACE,GAAK/d,KAAKI,QAAQuK,QAAQ3E,KAAK,SAAC3K,GAAM,OAAAA,EAAEyP,SAAxC,CAGA,IAAMkT,EAAUhe,KAAK6Z,oBACfoE,EAAQ1S,EACd,GAAIyS,EAAS,CAGX,IAFA,IAAME,EAAUre,MAAMkG,KAAK/F,KAAKuZ,OAAO4E,iBAAiB,IAAIhT,EAAgB,SAAS8S,EAAK,MACpFG,EAASve,MAAMkG,KAAK/F,KAAKwM,KAAK2R,iBAAiB,IAAIhT,EAAgB,SAAS8S,EAAK,MACpEjf,EAAA,EAAAqf,EAAAH,EAAAlf,EAAAqf,EAAAnf,OAAAF,IAAS,CAAbqf,EAAArf,GACRoN,UAAU+C,IAAI8O,GAErB,IAAmB,IAAAvb,EAAA,EAAA4b,EAAAF,EAAA1b,EAAA4b,EAAApf,OAAAwD,IAAQ,CAAZ4b,EAAA5b,GACR0J,UAAU+C,IAAI8O,QAEhB,CACCC,EAAUre,MAAMkG,KAAK/F,KAAKuZ,OAAO4E,iBAAiB,IAAIhT,EAAgB,IAAI8S,IAC1EG,EAASve,MAAMkG,KAAK/F,KAAKwM,KAAK2R,iBAAiB,IAAIhT,EAAgB,IAAI8S,IAC7E,IAFA,IAEmBxN,EAAA,EAAA8N,EAAAL,EAAAzN,EAAA8N,EAAArf,OAAAuR,IAAS,CAAb8N,EAAA9N,GACRrE,UAAUvG,OAAOoY,GAExB,IAAmB,IAAAO,EAAA,EAAAC,EAAAL,EAAAI,EAAAC,EAAAvf,OAAAsf,IAAQ,CAAZC,EAAAD,GACRpS,UAAUvG,OAAOoY,OAKpB3E,EAAA3c,UAAA+d,WAAR,SAAmB9Y,GACV,IAAA+I,EAAA3K,KAAAI,QAAAuK,QACDhB,EAAU3J,KAAK2Z,eAErB,IAAKhP,EAAQ3E,KAAK,SAAC3K,GAAM,OAAAA,EAAEyP,SACzB,OAAO,EAET,GAAc,IAAVlJ,EAKF,OAJI+H,EAAQmB,OAAO5L,OAAS,IAC1Bc,KAAKsb,oBAAoB3R,EAAQmB,OAAQ,GACzCnB,EAAQmB,OAAS,IAEZ,EAET,IAAMJ,EAAMf,EAAQmB,OAAO5L,OACrBwD,EAAA+H,EAAAd,EAAAmB,OAAAH,EAAA/I,GAACS,EAAAK,EAAAL,OAAQgI,EAAA3H,EAAA2H,MAAOC,EAAA5H,EAAA4H,QAQtB,OAPIA,EAAQpL,OAAS,GACnBc,KAAKsb,oBAAoBhR,EAASI,EAAMJ,EAAQpL,QAE9CmL,EAAMnL,OAAS,GACjBc,KAAK2c,oBAAoBtS,EAAOK,EAAMJ,EAAQpL,QAEhDyK,EAAQmB,OAASzI,EACVA,EAAOnD,QAGRoa,EAAA3c,UAAAke,2BAAR,SAAmCtV,EAAoBG,GACrD,IAAMgZ,EAAkB1e,KAAK6Z,sBAAwBtU,EAAa,EAClEvF,KAAK6Z,oBAAsBtU,EAAa,EAEjC,IAAA4U,EAAAna,KAAAI,QAAA+Z,OACDzX,EAAAgG,EAAAnD,EAAAG,EAAAyU,EAAA5Y,iBAAA4Y,EAAAzZ,WAAAyZ,EAAA7X,cAACV,EAAAc,EAAAd,MAAOC,EAAAa,EAAAb,KAAM+G,EAAAlG,EAAAkG,YAEde,EAAU3J,KAAK2Z,eAIrB,GAHAhQ,EAAQmD,YAAclL,EACtB+H,EAAQoD,WAAalL,EAEhBD,EAAQ+H,EAAQ/H,OAAU,GAAMC,EAAO8H,EAAQ9H,MAAS,EAK3D,OAHI6c,GACF1e,KAAK+d,sBAEApX,EAAc6N,KAGvB,IAAI3Y,EAAmB8K,EAAc+N,KAE/BgE,EAAc1Y,KAAK0a,WAAW9Y,GA8BpC,OA5BIA,EAAQ+H,EAAQ9H,MAAQA,EAAO8H,EAAQ/H,OAIzC5B,KAAKub,kBAAiB,GACtBvb,KAAKsa,eAAe1Y,EAAOC,GAC3BhG,EAAI8K,EAAciO,KACThT,EAAQ+H,EAAQ/H,OAGzB5B,KAAKwa,oBAAoB3Y,EAAO,EAAG8H,EAAQ9H,MAC3C7B,KAAK+d,sBACL/d,KAAKqa,iBAAiBzY,EAAO+H,EAAQ/H,MAAQ,EAAG8W,GAChD7c,EAAI8K,EAAckO,WAIlB7U,KAAKua,sBAAsB5Q,EAAQ/H,MAAOA,EAAQ,EAAG8W,GACrD1Y,KAAK+d,sBACL/d,KAAKsa,eAAe3Q,EAAQ9H,KAAO,EAAGA,GACtChG,EAAI8K,EAAcmO,aAGpBnL,EAAQ/H,MAAQA,EAChB+H,EAAQ9H,KAAOA,EAEf7B,KAAKya,mBAAmB7R,GAEjB/M,GAGXyd,EAjoBA,GAwoBA,SAASwD,GAAU1L,EAAkBvQ,EAAe8J,GAClD,IAAMgU,EAAsB9e,MAAMkG,KAAKqL,EAAIrC,UAE3C,KAAI4P,EAAKzf,QAAU,GAAnB,CAGA,IAAM0f,EAAUD,EAAK9Q,IAAI,SAACzS,GAAM,OAAAuP,EAAQqE,KAAK,SAAC3T,GAAM,OAAAA,EAAE2b,KAAO5b,EAAEsI,QAAQsT,OACvEzN,QAAQC,OAAOoV,EAAQtI,MAAM,SAACjb,GAAM,OAAAwjB,QAAQxjB,KAAK,yBAA0BwF,GAC3E0I,QAAQC,OAAOoV,EAAQtI,MAAM,SAACjb,EAAGN,GAAM,OAAM,IAANA,GAAWM,EAAEwF,OAAS+d,EAAQ7jB,EAAI,GAAI8F,QAAQ,iCAAkCA,GACvH0I,QAAQC,OAAO,IAAKkK,IAAIkL,GAAUxZ,OAASwZ,EAAQ1f,OAAQ,iBAAkB0f,ICtpB/E,IAAAE,GAAA,SAAA/G,GAME,SAAAgH,EAA+B1kB,EAAmB2kB,EAAgBvS,QAAA,IAAAA,MAAA,IAAlE,IAAApM,EACE0X,EAAA7c,KAAA8E,KAAmBoX,GAAY/c,EAAM2kB,GAAQC,cAAc,kBAAmBxS,IAAQzM,KADzDK,EAAAhG,OAE7BA,EAAK+R,UAAU+C,IAAInE,IAAY,iBAE/B3K,EAAKwD,MAAQ,IAAIqb,GAAiB7e,EAAKhG,KAAM2kB,GAE7C,IAAMG,EAAO9e,EAEb+e,EAAA,SAAArH,GAAA,SAAAqH,mDAqCA,OArCwBtf,EAAAsf,EAAArH,GACtBtc,OAAAC,eAAc0jB,EAAAziB,UAAA,UAAO,KAArB,WACE,OAAOwiB,EAAK/e,yCAGd3E,OAAAC,eAAc0jB,EAAAziB,UAAA,OAAI,KAAlB,WACE,OAAOwiB,EAAK3S,sCAGd/Q,OAAAC,eAAc0jB,EAAAziB,UAAA,iBAAc,KAA5B,WACE,OAAOwiB,EAAKjS,gDAGJkS,EAAAziB,UAAA2gB,aAAV,SAAuB+B,EAAoBlF,GACzC,OAAOgF,EAAK7B,aAAa+B,EAAUlF,IAG3BiF,EAAAziB,UAAAsgB,aAAV,SAAuBxZ,EAAmB0W,GACxC,OAAOgF,EAAKlC,aAAaxZ,EAAM0W,IAGvBiF,EAAAziB,UAAAsf,WAAV,SAAqBoD,EAAoBxe,EAAesZ,GACtD,OAAOgF,EAAKlD,WAAWoD,EAAUxe,EAAOsZ,IAGhCiF,EAAAziB,UAAAqf,WAAV,SAAqBvY,EAAmB5C,EAAesZ,GACrD,OAAOgF,EAAKnD,WAAWvY,EAAM5C,EAAOsZ,IAG5BiF,EAAAziB,UAAA8d,mBAAV,SAA6B8C,GAC3BxF,EAAApb,UAAM8d,mBAAkBvf,KAAA8E,KAACud,GACzB4B,EAAK5Q,aAAa4Q,EAAKnS,qBAGfoS,EAAAziB,UAAAsU,WAAV,SAAqBlP,GACnB,OAAOod,EAAKlO,WAAWlP,IAE3Bqd,EArCA,CAAwB/F,WAuCxBhZ,EAAKmc,KAAI,IAAO4C,EAAS7iB,KAAAiH,MAAT4b,EAAS,QAAC/e,EAAKkZ,OAAQlZ,EAAKwD,MAAOxD,EAAKwD,MAAMmT,IAAElR,OAAO2G,EAAQa,QAAU,QAmL7F,OAxO+DxN,EAAAif,EAAAhH,GAwD7Dtc,OAAAC,eAAcqjB,EAAApiB,UAAA,WAAQ,KAAtB,WACE,OAAOqD,KAAK6D,MAAMmT,oCAOpBvb,OAAAC,eAAcqjB,EAAApiB,UAAA,SAAM,KAApB,WACE,OAAoBqD,KAAK3F,KAAK4kB,cAAc,qDAO9CxjB,OAAAC,eAAcqjB,EAAApiB,UAAA,iBAAc,KAA5B,WACE,OAAoBqD,KAAK3F,KAAK8d,qBAAqB,UAAU,oCAG/D1c,OAAAC,eAAcqjB,EAAApiB,UAAA,iBAAc,KAA5B,WACE,OAAOqD,KAAKwc,KAAK7C,gDAGnBle,OAAAC,eAAcqjB,EAAApiB,UAAA,wBAAqB,KAAnC,WACE,OAAOqD,KAAKwc,KAAK5C,uDAQTmF,EAAApiB,UAAAyd,eAAV,SAAyBtM,EAAyBrB,GAChDzM,KAAKwc,KAAKpC,eAAetM,EAAYrB,IAM7BsS,EAAApiB,UAAAwB,KAAV,eAAAkC,EAAAL,KAEEA,KAAKwc,KAAKre,OAEV,IAEIuM,EAAMtE,EAFoBpG,KAAKwM,KAAKoC,cAEV5O,KAAKyM,QAAQW,MAAO,SAACmC,GACjD,KAAInM,KAAKC,IAAIqH,EAAIzF,KAAOsK,EAAItK,MAAQ5E,EAAKoM,QAAQY,gBAAkBjK,KAAKC,IAAIqH,EAAIjF,MAAQ8J,EAAI9J,OAASpF,EAAKoM,QAAQY,gBAAlH,CAGA,IAAMuN,EAAerL,EAAItK,KAAOyF,EAAIzF,KACpCyF,EAAM6E,EACNlP,EAAKsa,uBAAuBpL,EAAItK,KAAMsK,EAAI9J,MAAOmV,MAGnD7C,EAAApb,UAAMwB,KAAIjD,KAAA8E,OAGZ+e,EAAApiB,UAAAgT,QAAA,WACEoI,EAAApb,UAAMgT,QAAOzU,KAAA8E,MACbA,KAAK3F,KAAKwL,UAUFkZ,EAAApiB,UAAAge,uBAAV,SAAiCpV,EAAoBG,EAAqBkV,GACxE,OAAO5a,KAAKwc,KAAK7B,uBAAuBpV,EAAYG,EAAakV,IA8CzDmE,EAAApiB,UAAAogB,cAAV,WACE/c,KAAKwc,KAAKO,iBAGFgC,EAAApiB,UAAAwf,gBAAV,SAA0BrS,EAAmBvK,EAAgC4a,GAC3E,YAD2E,IAAAA,OAAkB,GACtFna,KAAKwc,KAAKL,gBAAgBrS,EAAMvK,EAAO4a,IAGtC4E,EAAApiB,UAAAqe,YAAV,SAAsBlR,EAAmBqQ,QAAA,IAAAA,OAAkB,GACzDna,KAAKwc,KAAKxB,YAAYlR,EAAMqQ,IAMpB4E,EAAApiB,UAAA2iB,mBAAV,WACE,IAAMlf,EAAUJ,KAAKI,QACrBJ,KAAK6D,MAAMvE,OAAOc,EAAQmB,iBAAmBnB,EAAQgC,SAAS,GAAIhC,EAAQuK,QAASvK,EAAQ+Z,OAAO/X,SAAUpC,KAAKwc,KAAKtC,YAAala,KAAKoP,WAGhI2P,EAAApiB,UAAA8U,YAAV,SAAsB7I,GACpB,IAAMiJ,EAAM7R,KAAKI,QACX6G,EAAc4K,EAAI5K,YAClBsY,EAAa1N,EAAIsI,OAAOlT,YAE9BjH,KAAKwf,aAAa5W,EAAa5I,KAAKwc,KAAKtC,aACzCla,KAAK4R,UAAU/N,MAAMC,UAAY,aAAaV,KAAK8F,IAAI,EAAGqW,EAAa,GAAG5N,QAAQ,GAAE,OAAOvO,KAAK8F,IAAI,EAAGjC,EAAc,GAAG0K,QAAQ,GAAE,OAG1HoN,EAAApiB,UAAA6iB,aAAV,SAAuBta,EAAaD,GAClCjF,KAAKwM,KAAK3I,MAAMC,UAAY,aAAamB,EAAK0M,QAAQ,GAAE,OAAOzM,EAAIyM,QAAQ,GAAE,OAOrEoN,EAAApiB,UAAA+S,SAAV,SAAmBmC,GACjB,IAAMxL,EAAWrG,KAAKwO,aAChBiR,EAAUpZ,EAASd,WACzBvF,KAAKwc,KAAK9M,SAAS+P,EAASpZ,EAASX,aAErCqS,EAAApb,UAAM+S,SAAQxU,KAAA8E,KAAC6R,GAEfxL,EAASd,WAAaka,GAGdV,EAAApiB,UAAAqV,UAAV,WACE+F,EAAApb,UAAMqV,UAAS9W,KAAA8E,MACfA,KAAKwc,KAAKxK,aAGF+M,EAAApiB,UAAAqT,UAAV,SAAoBvM,EAAmB6Y,GACrCtc,KAAKwc,KAAKxM,UAAUvM,EAAM6Y,IAGlByC,EAAApiB,UAAAoT,UAAV,SAAoBtM,EAAmB6Y,GACrCtc,KAAKwc,KAAKzM,UAAUtM,EAAM6Y,IAE9ByC,EAxOA,CAA+DzS,MCS/D,WAUE,SAAAoT,EAA6B/R,EAAwBlB,GAEnD,OAF2BzM,KAAA2N,UATrB3N,KAAA2f,iBAA2B,EAC3B3f,KAAA4f,gBAA0B,EAEjB5f,KAAAyM,QAAoC,CACnDoT,aAAc,GACdC,YAAa,GACbvc,MAAO,KAIP9H,OAAO+C,OAAOwB,KAAKyM,QAASA,GACrBzM,KAmIX,OA/HU0f,EAAA/iB,UAAAojB,aAAR,WAEE,GADA/f,KAAK2f,iBAAmB,GACpB3f,KAAK2N,QAAQpH,uBAAjB,CAGA,IAAMnG,EAAUJ,KAAK2N,QAAQvN,QACvB4f,EAAW5c,KAAK6F,IAAIjJ,KAAK2N,QAAQhE,QAAQoD,WAAa/M,KAAKyM,QAAQoT,aAAczf,EAAQkC,aAAe,GAE1GtC,KAAK2N,QAAQhE,QAAQ9H,OAASme,GAAYhgB,KAAK2N,QAAQhE,QAAQ9H,MAAS7B,KAAK2N,QAAQhE,QAAQoD,WAAa/M,KAAKyM,QAAQoT,eAI3H7f,KAAK2N,QAAQS,YAAYpO,KAAK2N,QAAQhE,QAAQ9H,KAAO,EAAGme,GAExDhgB,KAAK2N,QAAQhE,QAAQ9H,KAAOme,KAGtBN,EAAA/iB,UAAAsjB,WAAR,WAEE,GADAjgB,KAAK2f,iBAAmB,IACpB3f,KAAK2N,QAAQpH,wBAA0BvG,KAAK2N,QAAQhE,QAAQ/H,OAAU5B,KAAK2N,QAAQhE,QAAQmD,YAAc9M,KAAKyM,QAAQoT,cAA1H,CAGA,IAAMzf,EAAUJ,KAAK2N,QAAQvN,QAGvBsC,EAAAgG,EAFatF,KAAK8F,IAAIlJ,KAAK2N,QAAQe,aAAe1O,KAAKyM,QAAQoT,aAAgBzf,EAAQmB,iBAAkB,GAChGvB,KAAK2N,QAAQgB,YACtBvO,EAAAmB,iBAAAnB,EAAAM,WAAAN,EAAAkC,cAACV,EAAAc,EAAAd,MAAOgH,EAAAlG,EAAAkG,YAEd,GAAIhH,IAAU5B,KAAK2N,QAAQhE,QAAQ/H,MAAnC,CAIA,IAAM8W,EAAc1Y,KAAK2N,QAAQ+M,WAAa1a,KAAK2N,QAAQ+M,WAAW9Y,GAAS,EAE/E5B,KAAK2N,QAAQQ,eAAevM,EAAO5B,KAAK2N,QAAQhE,QAAQ/H,MAAQ,EAAG8W,GAEnE1Y,KAAK2N,QAAQhE,QAAQ/H,MAAQA,EAE7B5B,KAAK2N,QAAQY,aAAa3F,MAGpB8W,EAAA/iB,UAAAujB,gBAAR,SAAwB1Q,GAClBxP,KAAK2f,iBAAmB,GAC1B/L,aAAa5T,KAAK2f,iBAGpB,IAAMQ,EAAuBngB,KAAK2N,QAAQhE,QAAQ9H,KAAQ7B,KAAK2N,QAAQhE,QAAQoD,WAAa/M,KAAKyM,QAAQoT,aACnGO,EAAqBpgB,KAAK2N,QAAQhE,QAAQ/H,MAAS5B,KAAK2N,QAAQhE,QAAQmD,YAAc9M,KAAKyM,QAAQoT,aAEnGQ,EAASrgB,KAAK2N,QAAQhE,QAAQ9H,OAAS7B,KAAK2N,QAAQvN,QAAQkC,aAC5Dge,EAAyC,IAA/BtgB,KAAK2N,QAAQhE,QAAQ/H,MAErC,KAAK4N,GAAgB2Q,GAAyBE,KAAa7Q,GAAgB4Q,GAAuBE,GAAlG,CAKA,IAAMC,EAAM/Q,GAAe8Q,EAAWtgB,KAAK+f,aAAaxjB,KAAKyD,MAAQA,KAAKigB,WAAW1jB,KAAKyD,MAE1FA,KAAK2f,gBAAkBta,KAAKC,WAAWib,EAAIvgB,KAAKyM,QAAQlJ,SAGlDmc,EAAA/iB,UAAA6jB,WAAR,SAAmB5e,GAEjB,GADA5B,KAAK4f,gBAAkB,GACnB5f,KAAK2N,QAAQpH,uBAAjB,CAGA,IAAMka,EAAWrd,KAAK8F,IAAI,EAAGtH,EAAQ5B,KAAKyM,QAAQqT,aAElD,KAAIW,GAAYzgB,KAAK2N,QAAQhE,QAAQ/H,OAArC,CAKA,IAAM8W,EAAc1Y,KAAK2N,QAAQ+M,WAAa1a,KAAK2N,QAAQ+M,WAAW+F,GAAY,EAElFzgB,KAAK2N,QAAQU,oBAAoBrO,KAAK2N,QAAQhE,QAAQ/H,MAAO6e,EAAW,EAAG/H,GAC3E,IAAMtY,EAAUJ,KAAK2N,QAAQvN,QAEzB0T,GAAS2M,EAAWzgB,KAAK2N,QAAQhE,QAAQ/H,OAASxB,EAAQmB,iBAC9D,GAAInB,EAAQM,WAAWxB,OAAS,EAC9B,IAAK,IAAInE,EAAIiF,KAAK2N,QAAQhE,QAAQ/H,MAAO7G,EAAI0lB,IAAY1lB,EACnDqF,EAAQ6B,iBAAiBb,IAAIrG,KAC/B+Y,GAAS1T,EAAQ6B,iBAAiBrG,IAAIb,GAAMqF,EAAQmB,kBAI1DvB,KAAK2N,QAAQhE,QAAQ/H,MAAQ6e,EAC7BzgB,KAAK2N,QAAQY,aAAavO,KAAK2N,QAAQX,mBAAqB8G,GAE5D9T,KAAK+f,kBAGCL,EAAA/iB,UAAA+jB,cAAR,SAAsB7e,GACpB7B,KAAK4f,gBAAkB,EACvB,IAAMe,EAAU9e,EAAO7B,KAAKyM,QAAQqT,YAChC9f,KAAK2N,QAAQhE,QAAQ9H,MAAQ8e,IAIjC3gB,KAAK2N,QAAQW,iBAAiBqS,EAAU,EAAG3gB,KAAK2N,QAAQhE,QAAQ9H,MAChE7B,KAAK2N,QAAQhE,QAAQ9H,KAAO8e,EAE5B3gB,KAAKigB,eAGCP,EAAA/iB,UAAAikB,eAAR,SAAuBhf,EAAeC,EAAc2N,GAC9CxP,KAAK4f,gBAAkB,GACzBhM,aAAa5T,KAAK4f,gBAEfpQ,GAAgB5N,EAAQ5B,KAAKyM,QAAQqT,aAAgB9f,KAAK2N,QAAQhE,QAAQ/H,QAAY4N,GAAexP,KAAK2N,QAAQhE,QAAQ9H,MAASA,EAAO7B,KAAKyM,QAAQqT,cAI5J9f,KAAK4f,eAAiBva,KAAKC,WAAWkK,EAAcxP,KAAKwgB,WAAWjkB,KAAKyD,MAAQA,KAAK0gB,cAAcnkB,KAAKyD,MAAOA,KAAKyM,QAAQlJ,MAAOiM,EAAc5N,EAAQC,KAG5J6d,EAAA/iB,UAAAuX,WAAA,SAAW1E,EAAsBwE,GAC3BhU,KAAK2N,QAAQpH,yBAGbyN,IAAiBrN,EAAciO,KAAO5U,KAAKyM,QAAQqT,YAAc,GACnE9f,KAAK4gB,eAAe5gB,KAAK2N,QAAQhE,QAAQmD,YAAa9M,KAAK2N,QAAQhE,QAAQoD,WAAYyC,GAErFwE,IAAiBrN,EAAc6N,MAAQxU,KAAKyM,QAAQoT,aAAe,GACrE7f,KAAKkgB,gBAAgB1Q,KAG3BkQ,EA/IA,GCTAmB,GAAA,SAAA9I,GAGE,SAAA+I,EAA4BvH,EAAqC/M,EAAsC+K,EAAoC1T,EAAyB4I,QAAA,IAAAA,MAAA,IAApK,IAAApM,EACE0X,EAAA7c,KAAA8E,KAAMwM,EAAMC,IAAQzM,KADMK,EAAAkZ,SAAqClZ,EAAAmM,OAAsCnM,EAAAkX,UAAoClX,EAAAwD,QAGzI,IAAMsb,EAAO9e,EAEb+e,EAAA,SAAArH,GAAA,SAAAqH,mDAqCA,OArCwBtf,EAAAsf,EAAArH,GACtBtc,OAAAC,eAAc0jB,EAAAziB,UAAA,UAAO,KAArB,WACE,OAAOwiB,EAAK/e,yCAGd3E,OAAAC,eAAc0jB,EAAAziB,UAAA,OAAI,KAAlB,WACE,OAAOwiB,EAAK3S,sCAGd/Q,OAAAC,eAAc0jB,EAAAziB,UAAA,iBAAc,KAA5B,WACE,OAAOwiB,EAAKjS,gDAGJkS,EAAAziB,UAAA2gB,aAAV,SAAuB+B,EAAoBlF,GACzC,OAAOgF,EAAK7B,aAAa+B,EAAUlF,IAG3BiF,EAAAziB,UAAAsgB,aAAV,SAAuBxZ,EAAmB0W,GACxC,OAAOgF,EAAKlC,aAAaxZ,EAAM0W,IAGvBiF,EAAAziB,UAAAsf,WAAV,SAAqBoD,EAAoBxe,EAAesZ,GACtD,OAAOgF,EAAKlD,WAAWoD,EAAUxe,EAAOsZ,IAGhCiF,EAAAziB,UAAA8d,mBAAV,SAA6B8C,GAC3BxF,EAAApb,UAAM8d,mBAAkBvf,KAAA8E,KAACud,GACzB4B,EAAK5Q,aAAa4Q,EAAKnS,qBAGfoS,EAAAziB,UAAAqf,WAAV,SAAqBvY,EAAmB5C,EAAesZ,GACrD,OAAOgF,EAAKnD,WAAWvY,EAAM5C,EAAOsZ,IAG5BiF,EAAAziB,UAAAsU,WAAV,SAAqBlP,GACnB,OAAOod,EAAKlO,WAAWlP,IAE3Bqd,EArCA,CAAwB/F,WAuCxBhZ,EAAKmc,KAAI,IAAO4C,EAAS7iB,KAAAiH,MAAT4b,EAAS,QAAC/e,EAAKkZ,OAAQlZ,EAAKwD,MAAO0T,GAAOzR,OAAM2G,EAAQa,QAAU,QA4LtF,OA3OmExN,EAAAghB,EAAA/I,GAkDvD+I,EAAAnkB,UAAAyd,eAAV,SAAyBtM,EAAyBrB,GAChDzM,KAAKwc,KAAKpC,eAAetM,EAAYrB,IAGvChR,OAAAC,eAAcolB,EAAAnkB,UAAA,WAAQ,KAAtB,WACE,OAAOqD,KAAKuX,yCAKd9b,OAAAC,eAAIolB,EAAAnkB,UAAA,QAAK,KAAT,WACE,OAAOqD,KAAKI,QAAQ+Z,OAAOlT,6CAG7BxL,OAAAC,eAAcolB,EAAAnkB,UAAA,iBAAc,KAA5B,WACE,OAAOqD,KAAKwc,KAAK7C,gDAGnBle,OAAAC,eAAcolB,EAAAnkB,UAAA,wBAAqB,KAAnC,WACE,OAAOqD,KAAKwc,KAAK5C,uDAGnBne,OAAAC,eAAIolB,EAAAnkB,UAAA,SAAM,KAAV,WACE,OAAOqD,KAAKI,QAAQ6G,6CAGtBxL,OAAAC,eAAIolB,EAAAnkB,UAAA,SAAM,KAAV,WACE,OAAOqD,KAAKuZ,OAAOnN,UAAUC,SAASnB,QAYxC,SAAWlP,GACGgE,KAAK+gB,SACL/kB,IAGZgE,KAAKuZ,OAAOnN,UAAU8D,OAAOhF,EAAmBlP,GAChDgE,KAAKwM,KAAKJ,UAAU8D,OAAOhF,EAAmBlP,GAC9CgE,KAAKuZ,OAAOnN,UAAU8D,OAAO9E,EAAkBpP,GAC/CgE,KAAKwM,KAAKJ,UAAU8D,OAAO9E,EAAkBpP,GAC7CgE,KAAKghB,qBAAqBhlB,qCAlBlB8kB,EAAAnkB,UAAA8U,YAAV,SAAsB7I,GACpB5I,KAAKwf,aAAa5W,EAAa5I,KAAKwc,KAAKtC,cAIjC4G,EAAAnkB,UAAA6iB,aAAV,SAAuBta,EAAa+b,GAClCvP,GAAa1R,KAAKwM,KAAM,EAAuBtH,EAAIyM,QAAQ,KAmBnDmP,EAAAnkB,UAAAqkB,oBAAV,SAA8BE,KAI9BJ,EAAAnkB,UAAAwkB,KAAA,WACEnhB,KAAK+gB,QAAS,GAGhBD,EAAAnkB,UAAAykB,KAAA,SAAK7b,EAAoBG,EAAqBkV,GAC5C,IAAMyG,EAAYrhB,KAAK+gB,OACvB/gB,KAAK+gB,QAAS,EACVM,EACFrhB,KAAK6T,aAEL7T,KAAK2a,uBAAuBpV,EAAYG,EAAakV,IAIzDkG,EAAAnkB,UAAAwB,KAAA,WACE6B,KAAKmhB,OACLnhB,KAAKwc,KAAKre,OACV4Z,EAAApb,UAAMwB,KAAIjD,KAAA8E,OAGZ8gB,EAAAnkB,UAAAgT,QAAA,WACEoI,EAAApb,UAAMgT,QAAOzU,KAAA8E,MACbA,KAAKuZ,OAAO1T,SACZ7F,KAAK6D,MAAMgC,OAAO7F,KAAKuX,UAGfuJ,EAAAnkB,UAAA8S,qBAAV,SAA+BjK,EAAmBG,EAAsB6J,GACtE,OAAIxP,KAAK+gB,OACApa,EAAc6N,KAEhBuD,EAAApb,UAAM8S,qBAAoBvU,KAAA8E,KAACwF,EAAWG,EAAc6J,IAGnDsR,EAAAnkB,UAAAge,uBAAV,SAAiCpV,EAAoBG,EAAqBkV,GACxE,IAAM/e,EAAImE,KAAKwc,KAAK7B,uBAAuBpV,EAAYG,EAAakV,GAEpE,OADA5a,KAAKyR,YAAYzR,KAAKgN,oBACfnR,GA+CCilB,EAAAnkB,UAAAogB,cAAV,WACE/c,KAAKwc,KAAKO,iBAGF+D,EAAAnkB,UAAAwf,gBAAV,SAA0BrS,EAAmBvK,EAAgC4a,GAC3E,YAD2E,IAAAA,OAAkB,GACtFna,KAAKwc,KAAKL,gBAAgBrS,EAAMvK,EAAO4a,IAGtC2G,EAAAnkB,UAAAqe,YAAV,SAAsBlR,EAAmBqQ,QAAA,IAAAA,OAAkB,GACzDna,KAAKwc,KAAKxB,YAAYlR,EAAMqQ,IAMpB2G,EAAAnkB,UAAA2iB,mBAAV,WACE,IAAMlf,EAAUJ,KAAKI,QACrBJ,KAAK6D,MAAMvE,OAAOc,EAAQmB,iBAAmBnB,EAAQgC,SAAS,GAAIhC,EAAQuK,QAASvK,EAAQ+Z,OAAO/X,SAAUpC,KAAKwc,KAAKtC,YAAala,KAAKuX,UAGhIuJ,EAAAnkB,UAAA+S,SAAV,SAAmBmC,GACjB,IAAMxL,EAAWrG,KAAKwO,aAChBiR,EAAUpZ,EAASd,WACzBvF,KAAKwc,KAAK9M,SAAS+P,EAASpZ,EAASX,aAErCqS,EAAApb,UAAM+S,SAAQxU,KAAA8E,KAAC6R,GAEfxL,EAASd,WAAaka,GAGdqB,EAAAnkB,UAAAqV,UAAV,WACE+F,EAAApb,UAAMqV,UAAS9W,KAAA8E,MACfA,KAAKwc,KAAKxK,aAGF8O,EAAAnkB,UAAAqT,UAAV,SAAoBvM,EAAmB6Y,GACrCtc,KAAKwc,KAAKxM,UAAUvM,EAAM6Y,GAC1B7Y,EAAK2I,UAAU+C,IAAInP,KAAK6D,MAAMoU,WAAWP,KAGjCoJ,EAAAnkB,UAAAoT,UAAV,SAAoBtM,EAAmB6Y,GACrCtc,KAAKwc,KAAKzM,UAAUtM,EAAM6Y,IAE9BwE,EA3OA,CAAmE1L,MCgDnE,WAaE,SAAAkM,EAA4B7d,EAAmBub,EAAgBvS,GAA/D,IAAApM,EAAAL,UAA+D,IAAAyM,MAAA,IAAnCzM,KAAAyD,OAVpBzD,KAAAuX,QAAU,EAEDvX,KAAAuhB,SAA4B,GAE5BvhB,KAAAyM,QAAmD,CAClE+U,cAAe,EACfpU,MAAOjJ,EACPkJ,eAAgB,IAIhB5R,OAAO+C,OAAOwB,KAAKyM,QAASA,GAC5BuS,EAASA,EAAO1L,WAAW,KAAO0L,EAAOxU,MAAM,GAAKwU,EACpDvb,EAAKuT,GAAKgI,EACVvb,EAAK4T,UAAY,sBAAsB2H,EAAM,YAAYvT,EAAgB,IAAIT,EAAS,UAAUgU,GAAS,4BACtFrT,EAAgB,IAAIX,EAAS,UAAUgU,GAAS,wDAElDA,EAAM,YAAYtT,EAAc,IAAIV,EAAS,QAAQgU,GAAS,4BAC5DrT,EAAgB,iCAEnClI,EAAK2I,UAAU+C,IAAInE,IAAYK,EAAiB,iBAEhDrL,KAAK6D,MAAQ,IAAIqb,GAAiBlf,KAAKyD,KAAMub,GAE7C,IAAItU,EAAMtE,EAAUpG,KAAKyhB,KAAMzhB,KAAKyM,QAAQW,MAAO,SAACmC,GAClD,KAAInM,KAAKC,IAAIqH,EAAIzF,KAAOsK,EAAItK,MAAQ5E,EAAKoM,QAAQY,gBAAkBjK,KAAKC,IAAIqH,EAAIjF,MAAQ8J,EAAI9J,OAASpF,EAAKoM,QAAQY,gBAAlH,CAGA,IAAMuN,EAAerL,EAAItK,KAAOyF,EAAIzF,KACpCyF,EAAM6E,EACNlP,EAAKsa,uBAAuBpL,EAAItK,KAAMsK,EAAI9J,MAAOmV,MAwIvD,OApIU0G,EAAA3kB,UAAA2C,OAAR,eAAAe,EAAAL,KACEA,KAAK2a,uBAAuB3a,KAAKyhB,KAAKlc,WAAYvF,KAAKyhB,KAAK/b,aAAa,GAEzE,IAAI5D,EAAS,EACb9B,KAAKuhB,SAAS5gB,QAAQ,SAAC7D,GACrBA,EAAE0P,KAAK3I,MAAMoB,KAAOnI,EAAEyc,OAAO1V,MAAMoB,KAAUnD,EAAM,KACnDA,GAAUhF,EAAE2I,MAAQpF,EAAKoM,QAAQ+U,iBAI7BF,EAAA3kB,UAAAge,uBAAR,SAA+BpV,EAAoBG,EAAqBkV,GAAxE,IAAAva,EAAAL,KACM8B,EAAS,EACP4f,EAAYnc,EAAaG,EAC/B1F,KAAKuhB,SAAS5gB,QAAQ,SAAC7D,GACrB,IAAM6kB,EAAM7f,EAAShF,EAAE2I,MACnBkc,EAAMpc,GAAczD,EAAS4f,EAC/B5kB,EAAEqkB,OAEFrkB,EAAEskB,KAAKhe,KAAK8F,IAAI,EAAG3D,EAAazD,GAASsB,KAAK6F,IAAIyY,EAAY5f,EAAQhF,EAAE2I,OAAQmV,GAGlF9Y,EAAS6f,EAAMthB,EAAKoM,QAAQ+U,gBAG9BxhB,KAAKuO,gBAGC+S,EAAA3kB,UAAA4R,aAAR,eAAAlO,EAAAL,KACQ4hB,EAAe5hB,KAAKuZ,OAAOpB,qBAAqB,UAAU,GAC1D0J,EAAa7hB,KAAKyhB,KAAKtJ,qBAAqB,UAAU,GAEtD2J,EAAY1e,KAAK8F,IAAG1F,MAARJ,KAAI,CAAK,GAAC0C,OAAK9F,KAAKuhB,SAAS1T,IAAI,SAACxS,GAAM,OAAAA,EAAE4H,WACtDoR,EAAQrU,KAAKuhB,SAAS1I,OAAO,SAACrR,EAAGpM,GAAM,OAAAoM,EAAIpM,EAAEqK,MAAQpF,EAAKoM,QAAQ+U,eAAe,GAEvF9P,GAAakQ,EAAcvN,EAAO,GAClC3C,GAAamQ,EAAYxN,EAAOyN,IAGlCR,EAAA3kB,UAAAgT,QAAA,WACE3P,KAAKuhB,SAAS5gB,QAAQ,SAACtF,GAAM,OAAAA,EAAEsU,YAC/B3P,KAAKyD,KAAKoC,UAGZpK,OAAAC,eAAY4lB,EAAA3kB,UAAA,MAAG,KAAf,WACE,OAAOqD,KAAKyD,KAAKuK,+CAGnBvS,OAAAC,eAAY4lB,EAAA3kB,UAAA,SAAM,KAAlB,WACE,OAAoBqD,KAAKyD,KAAK0U,qBAAqB,UAAU,oCAG/D1c,OAAAC,eAAY4lB,EAAA3kB,UAAA,OAAI,KAAhB,WACE,OAAoBqD,KAAKyD,KAAK0U,qBAAqB,QAAQ,oCAS7DmJ,EAAA3kB,UAAAolB,UAAA,SAAmCznB,OAA2B,IAAA0nB,EAAA,GAAAhjB,EAAA,EAAAA,EAAAya,UAAAva,OAAAF,IAAAgjB,EAAAhjB,EAAA,GAAAya,UAAAza,GAC5D,IAAMua,EAASvZ,KAAKiiB,IAAI/S,cAAc,WAChC1C,EAAOxM,KAAKiiB,IAAI/S,cAAc,WAE9BqI,EAAavX,KAAKyD,KAAKuT,GAAE,IAAIhX,KAAKuX,UAClCO,EAAMR,GAASC,GACfU,EAAaJ,GAAgBN,GAEnCgC,EAAOvC,GAAKc,EAAIN,MAChB+B,EAAOnN,UAAU+C,IAAIvD,EAAiBqM,EAAWT,OACjDhL,EAAKwK,GAAKc,EAAIL,MACdjL,EAAKJ,UAAU+C,IAAItD,EAAiBoM,EAAWR,OAC/CzX,KAAKuZ,OAAOlK,aAAakK,EAAQvZ,KAAKuZ,OAAOzI,kBAC7C9Q,KAAKyhB,KAAKzQ,YAAYxE,GAEtB,IAAM0V,EAAQ5nB,EAAOkJ,WAAA,GAAC+V,EAAQ/M,EAAM+K,EAASvX,KAAK6D,OAAKiC,OAAKkc,IAI5D,OAHAE,EAAM/jB,OACN6B,KAAKuhB,SAAS3b,KAAKsc,GACnBliB,KAAKV,SACE4iB,GASTZ,EAAA3kB,UAAAwlB,cAAA,SAAuC7nB,OAA+B,IAAA0nB,EAAA,GAAAhjB,EAAA,EAAAA,EAAAya,UAAAva,OAAAF,IAAAgjB,EAAAhjB,EAAA,GAAAya,UAAAza,GACpE,IAAMua,EAASvZ,KAAKiiB,IAAI/S,cAAc,WAChC1C,EAAOxM,KAAKiiB,IAAI/S,cAAc,WACpCqK,EAAOnN,UAAU+C,IAAInE,EAAS,qBAC9BwB,EAAKJ,UAAU+C,IAAInE,EAAS,cAC5BhL,KAAKuZ,OAAOlK,aAAakK,EAAQvZ,KAAKuZ,OAAOzI,kBAC7C9Q,KAAKyhB,KAAKzQ,YAAYxE,GAEtB,IAAM4V,EAAY9nB,EAAOkJ,WAAA,GAAC+V,EAAQ/M,EAAMxM,KAAK6D,OAAKiC,OAAKkc,IAIvD,OAHAI,EAAUjkB,OACV6B,KAAKuhB,SAAS3b,KAAKwc,GACnBpiB,KAAKV,SACE8iB,GAQTd,EAAA3kB,UAAAkJ,OAAA,SAAOwc,GACL,IAAMxhB,EAAQb,KAAKuhB,SAAStb,QAAQoc,GACpC,QAAIxhB,EAAQ,KAGZb,KAAKuhB,SAASrb,OAAOrF,EAAO,GAC5BwhB,EAAQ1S,UACR3P,KAAKV,UACE,IAGTgiB,EAAA3kB,UAAA6J,MAAA,WACExG,KAAKuhB,SAASrb,OAAO,EAAGlG,KAAKuhB,SAASriB,QAAQyB,QAAQ,SAAC7D,GAAM,OAAAA,EAAE6S,YAC/D3P,KAAKV,UAMPgiB,EAAA3kB,UAAA2lB,aAAA,WACEtiB,KAAKV,UAGTgiB,EAzKA,GC/DAzmB,EAAAQ,EAAAknB,EAAA,4BAAAC,KAAA3nB,EAAAQ,EAAAknB,EAAA,4BAAAE,KAAA5nB,EAAAQ,EAAAknB,EAAA,8BAAA5kB,IAAA9C,EAAAQ,EAAAknB,EAAA,kCAAAxlB,IAAAlC,EAAAQ,EAAAknB,EAAA,4BAAAtlB,IAAApC,EAAAQ,EAAAknB,EAAA,mCAAAtkB,IAAApD,EAAAQ,EAAAknB,EAAA,iCAAA1jB,IAAAhE,EAAAQ,EAAAknB,EAAA,gCAAAnjB,IAAAvE,EAAAQ,EAAAknB,EAAA,kCAAAljB,IAAAxE,EAAAQ,EAAAknB,EAAA,wCAAA/iB,IAAA3E,EAAAQ,EAAAknB,EAAA,kCAAApW,IAAAtR,EAAAQ,EAAAknB,EAAA,kCAAAzD,KAAAjkB,EAAAQ,EAAAknB,EAAA,8BAAAtQ,IAAApX,EAAAQ,EAAAknB,EAAA,mCAAAriB,IAAArF,EAAAQ,EAAAknB,EAAA,sCAAA9f,IAAA5H,EAAAQ,EAAAknB,EAAA,kCAAAjf,IAAAzI,EAAAQ,EAAAknB,EAAA,iCAAAjW,IAAAzR,EAAAQ,EAAAknB,EAAA,iCAAA7Q,KAAA7W,EAAAQ,EAAAknB,EAAA,mCAAA1b,IAAAhM,EAAAQ,EAAAknB,EAAA,sCAAArb,IAAArM,EAAAQ,EAAAknB,EAAA,kCAAA1a,IAAAhN,EAAAQ,EAAAknB,EAAA,0BAAA7Z,IAAA7N,EAAAQ,EAAAknB,EAAA,gCAAArY,IAAArP,EAAAQ,EAAAknB,EAAA,iCAAA9X,IAAA5P,EAAAQ,EAAAknB,EAAA,kCAAAG,KAAA7nB,EAAAQ,EAAAknB,EAAA,qCAAArD,KAAArkB,EAAAQ,EAAAknB,EAAA,iCAAAnJ,KAAAve,EAAAQ,EAAAknB,EAAA,0CAAAI,KAAA9nB,EAAAQ,EAAAknB,EAAA,kCAAA5b,IAAA9L,EAAAQ,EAAAknB,EAAA,gCAAAnL,KAAAvc,EAAAQ,EAAAknB,EAAA,6BAAAjL,KAAAzc,EAAAQ,EAAAknB,EAAA,oCAAA1K,KAAAhd,EAAAQ,EAAAknB,EAAA,sCAAA1B,KAMO,IAAM2B,GAAU,QACVC,GAAU","file":"lineupengine.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"lineupengine\"] = factory();\n\telse\n\t\troot[\"lineupengine\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","export function isPromiseLike(p: PromiseLike<any> | any): p is PromiseLike<any> {\n  return p != null && p && typeof p.then === 'function';\n}\n\n/**\n * a promise like object that has an abort method\n */\nexport interface IAbortAblePromiseBase<T> extends PromiseLike<T> {\n  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): IAbortAblePromiseBase<TResult1 | TResult2>;\n  /**\n   * abort the promise when possible\n   */\n  abort(): void;\n  /**\n   * whether this promise was aborted\n   */\n  isAborted(): boolean;\n}\n\n/**\n * a promise like object that has an abort method and return the ABORTED symbol in case it was\n */\nexport declare type IAbortAblePromise<T> = IAbortAblePromiseBase<T | symbol>;\nexport declare type IAAP<T> = IAbortAblePromise<T>;\n\n/**\n * an update result with an item and a promise when the update has been done\n */\nexport interface IAsyncUpdate<T> {\n  item: T;\n  ready: IAbortAblePromise<void>;\n}\n\n/**\n * the symbol returned when the promise was aborted\n */\nexport const ABORTED = Symbol('aborted');\n\nfunction thenFactory<T>(loader: PromiseLike<T | symbol>, isAborted: () => boolean, abort: () => void) {\n  function then<TResult1 = T | symbol, TResult2 = never>(onfulfilled?: ((value: T | symbol) => TResult1 | PromiseLike<TResult1>) | undefined | null, _onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): IAbortAblePromiseBase<TResult1 | TResult2> {\n    const fullfiller = loader.then((loaded) => {\n      const loadedOrAborted = isAborted() ? ABORTED : loaded;\n      const res = onfulfilled ? onfulfilled(loadedOrAborted) : <any>loadedOrAborted;\n\n      if (isPromiseLike(res)) {\n        return res.then((r) => {\n          return isAborted() ? ABORTED : r;\n        });\n      }\n      return isAborted() ? ABORTED : res;\n    });\n    return {\n      then: thenFactory(fullfiller, isAborted, abort),\n      abort,\n      isAborted\n    };\n  }\n  return then;\n}\n\n/**\n * abort able Promise wrapper, returns a promise which can be aborted, and trying to avoid executing therefore the wrapped promise\n * @param {Promise<T>} loader\n * @returns {any}\n */\nexport default function abortAble<T>(loader: PromiseLike<T>): IAAP<T> {\n  let aborted: ((v: symbol) => void) | null = null;\n  const isAborted = () => aborted === null;\n  const aborter = new Promise<symbol>((resolve) => aborted = resolve);\n  const abort = () => {\n    if (aborted == null) {\n      return;\n    }\n    aborted(ABORTED);\n    aborted = null;\n  };\n\n  const race = Promise.race<T | symbol>([aborter, loader]);\n\n  return {\n    then: thenFactory(race, isAborted, abort),\n    abort,\n    isAborted\n  };\n}\n\n\nexport function abortAbleFetch(input: RequestInfo, init?: RequestInit): IAAP<Response> {\n  const controller = new AbortController();\n\n  const race = new Promise<Response | symbol>((resolve, reject) => {\n    const r = fetch(input, Object.assign({signal: controller.signal}, init || {}));\n    r.then(resolve);\n    r.catch((error) => {\n      if (error instanceof DOMException) {\n        resolve(ABORTED);\n      } else {\n        reject(error);\n      }\n    });\n  });\n\n  const abort = controller.abort.bind(controller);\n  const isAborted = () => controller.signal.aborted;\n\n  return {\n    then: thenFactory(race, isAborted, abort),\n    abort,\n    isAborted\n  };\n}\n\n\nexport function abortAbleAll<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(values: [T1 | IAAP<T1>, T2 | IAAP<T2>, T3 | IAAP<T3>, T4 | IAAP<T4>, T5 | IAAP<T5>, T6 | IAAP<T6>, T7 | IAAP<T7>, T8 | IAAP<T8>, T9 | IAAP<T9>, T10 | IAAP<T10>]): IAAP<[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10]>;\nexport function abortAbleAll<T1, T2, T3, T4, T5, T6, T7, T8, T9>(values: [T1 | IAAP<T1>, T2 | IAAP<T2>, T3 | IAAP<T3>, T4 | IAAP<T4>, T5 | IAAP<T5>, T6 | IAAP<T6>, T7 | IAAP<T7>, T8 | IAAP<T8>, T9 | IAAP<T9>]): IAAP<[T1, T2, T3, T4, T5, T6, T7, T8, T9]>;\nexport function abortAbleAll<T1, T2, T3, T4, T5, T6, T7, T8>(values: [T1 | IAAP<T1>, T2 | IAAP<T2>, T3 | IAAP<T3>, T4 | IAAP<T4>, T5 | IAAP<T5>, T6 | IAAP<T6>, T7 | IAAP<T7>, T8 | IAAP<T8>]): IAAP<[T1, T2, T3, T4, T5, T6, T7, T8]>;\nexport function abortAbleAll<T1, T2, T3, T4, T5, T6, T7>(values: [T1 | IAAP<T1>, T2 | IAAP<T2>, T3 | IAAP<T3>, T4 | IAAP<T4>, T5 | IAAP<T5>, T6 | IAAP<T6>, T7 | IAAP<T7>]): IAAP<[T1, T2, T3, T4, T5, T6, T7]>;\nexport function abortAbleAll<T1, T2, T3, T4, T5, T6>(values: [T1 | IAAP<T1>, T2 | IAAP<T2>, T3 | IAAP<T3>, T4 | IAAP<T4>, T5 | IAAP<T5>, T6 | IAAP<T6>]): IAAP<[T1, T2, T3, T4, T5, T6]>;\nexport function abortAbleAll<T1, T2, T3, T4, T5>(values: [T1 | IAAP<T1>, T2 | IAAP<T2>, T3 | IAAP<T3>, T4 | IAAP<T4>, T5 | IAAP<T5>]): IAAP<[T1, T2, T3, T4, T5]>;\nexport function abortAbleAll<T1, T2, T3, T4>(values: [T1 | IAAP<T1>, T2 | IAAP<T2>, T3 | IAAP<T3>, T4 | IAAP<T4>]): IAAP<[T1, T2, T3, T4]>;\nexport function abortAbleAll<T1, T2, T3>(values: [T1 | IAAP<T1>, T2 | IAAP<T2>, T3 | IAAP<T3>]): IAAP<[T1, T2, T3]>;\nexport function abortAbleAll<T1, T2>(values: [T1 | IAAP<T1>, T2 | IAAP<T2>]): IAAP<[T1, T2]>;\nexport function abortAbleAll<T>(values: (T | IAAP<T>)[]): IAAP<T[]>;\n\n/**\n * similar to Promise.all but for abortAble\n */\nexport function abortAbleAll(values: any[]): IAAP<any[]> {\n  const loader = Promise.all(values);\n  let aborted: ((v: symbol) => void) | null = null;\n  const isAborted = () => aborted === null;\n  const aborter = new Promise<symbol>((resolve) => aborted = resolve);\n  const abort = () => {\n    if (aborted == null) {\n      return;\n    }\n    aborted(ABORTED);\n    for (const v of values) {\n      if (isAbortAble(v)) {\n        v.abort();\n      }\n    }\n    aborted = null;\n  };\n  const race = Promise.race<any | symbol>([aborter, loader]);\n\n  return {\n    then: thenFactory(race, isAborted, abort),\n    abort,\n    isAborted\n  };\n}\n\n/**\n * checked whether the given argument is an abortable Promise\n * @param {IAbortAblePromise<any> | any} abortAble\n * @returns {boolean}\n */\nexport function isAbortAble(abortAble: IAbortAblePromise<any> | any): abortAble is IAbortAblePromise<any> {\n  return abortAble != null && abortAble && typeof abortAble.then === 'function' && typeof abortAble.abort === 'function';\n}\n\n\nexport function isAsyncUpdate<T>(update: T | void | undefined | null | IAsyncUpdate<T>): update is IAsyncUpdate<T> {\n  return update !== undefined && update !== null && update && isAbortAble((<IAsyncUpdate<T>>update).ready);\n}\n\n/**\n * similar to Promise.resolve\n */\nexport function abortAbleResolveNow<T>(value: T) {\n  function then<TResult1 = T | symbol, TResult2 = never>(onfulfilled?: ((value: T | symbol) => TResult1 | PromiseLike<TResult1>) | undefined | null, _onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): IAbortAblePromiseBase<TResult1 | TResult2> {\n    const res = onfulfilled ? onfulfilled(value) : <any>value;\n    if (isAbortAble(res)) {\n      return res;\n    }\n    if (isPromiseLike(res)) {\n      return abortAble(res);\n    }\n    return {\n      then: <any>abortAbleResolveNow(<TResult1>res),\n      abort: () => undefined,\n      isAborted: () => false\n    };\n  }\n  return {\n    then,\n    abort: () => undefined,\n    isAborted: () => false\n  };\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {IExceptionContext} from '../logic';\n\n/**\n * utility class for optimized row context access\n */\nexport default class KeyFinder {\n  private readonly cache: number[] = [];\n  private lastFilled = 0;\n  private readonly key2index = new Map<string, number>();\n\n  /**\n   * constructor for fast key based row access\n   * @param {IExceptionContext} context context to use\n   * @param {(rowIndex: number) => string} key key function\n   */\n  constructor(public readonly context: IExceptionContext, public readonly key: (rowIndex: number) => string) {\n    this.context.exceptions.forEach((e) => {\n      this.cache[e.index] = e.y;\n      this.key2index.set(key(e.index), e.index);\n    });\n  }\n\n  private findValidStart(before: number) {\n    for (let i = before - 1; i >= 0; --i) {\n      if (this.cache[i] !== undefined) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * returns the position of the given given or -1 if not found\n   * @param {string} key\n   * @return {number} -1 if not found\n   */\n  posByKey(key: string) {\n    if (this.key2index.has(key)) {\n      const index = this.key2index.get(key)!;\n      return {index, pos: this.pos(index)};\n    }\n    return this.fillCacheTillKey(key);\n  }\n\n  /**\n   * returns the position of the tthe given index\n   * @param {number} index index to look for\n   * @returns {number}\n   */\n  pos(index: number) {\n    if (this.context.exceptions.length === 0) {\n      // fast pass\n      return index * this.context.defaultRowHeight;\n    }\n    const cached = this.cache[index];\n    if (cached !== undefined) {\n      return cached;\n    }\n    //need to compute it\n    // find the starting point where to start counting\n    const start = this.findValidStart(index);\n    if (start < 0) {\n      this.fillCache(0, index, 0);\n    } else {\n      this.fillCache(start + 1, index, this.cache[start] + this.heightOf(start));\n    }\n    return this.cache[index]!;\n  }\n\n  private fillCache(first: number, last: number, offset: number, callback?: (index: number, key: string, pos: number) => void) {\n    if (last <= this.lastFilled) {\n      //everything already there\n      if (!callback) {\n        return;\n      }\n      for (let i = first; i <= last; ++i) {\n        callback(i, this.key(i), this.cache[i]);\n      }\n      return;\n    }\n    let pos = offset;\n    for (let i = first; i <= last; ++i) {\n      this.cache[i] = pos;\n      const key = this.key(i);\n      this.key2index.set(key, i);\n      if (callback) {\n        callback(i, key, pos);\n      }\n      pos += this.heightOf(i);\n    }\n  }\n\n  /**\n   * returns the height of the row identified by index\n   * @param {number} index\n   * @returns {number}\n   */\n  heightOf(index: number) {\n    const lookup = this.context.exceptionsLookup;\n    return lookup.has(index) ? lookup.get(index)! : this.context.defaultRowHeight;\n  }\n\n  /**\n   * see heightOf but ignores padding and optional null in case of default height\n   * @param {number} index row index\n   * @param {boolean} returnDefault return null if default height\n   * @returns {number}\n   */\n  exceptionHeightOf(index: number, returnDefault: boolean = false) {\n    const padding = this.context.padding(index);\n    const lookup = this.context.exceptionsLookup;\n    if (lookup.has(index)) {\n      return lookup.get(index)! - padding;\n    }\n    return returnDefault ? this.context.defaultRowHeight - padding : null;\n  }\n\n  /**\n   * padding of the given index\n   * @param {number} index\n   * @returns {number}\n   */\n  padding(index: number) {\n    return this.context.padding(index);\n  }\n\n  private fillCacheTillKey(target: string) {\n    let pos = 0;\n    for (let i = this.lastFilled; i < this.context.numberOfRows; ++i, ++this.lastFilled) {\n      const c = this.cache[i];\n      if (c !== undefined) {\n        pos = c + this.heightOf(i);\n        continue;\n      }\n      // new one fill up\n      const key = this.key(i);\n      this.cache[i] = pos;\n      this.key2index.set(key, i);\n      if (key === target) {\n        return {index: i, pos};\n      }\n      pos += this.heightOf(i);\n    }\n    return {index: -1, pos: -1};\n  }\n\n  /**\n   * computes the positions and keys for a range of given indices\n   * @param {number} first first row index\n   * @param {number} last last row index\n   * @param {number} offset pos offset for the first row index\n   * @param {(index: number, key: string, pos: number) => void} callback callack for each identified index\n   */\n  positions(first: number, last: number, offset: number, callback?: (index: number, key: string, pos: number) => void) {\n    this.fillCache(first, last, offset, callback);\n  }\n}\n","import {IExceptionContext} from '../logic';\nimport KeyFinder from './KeyFinder';\n\nexport {default as KeyFinder} from './KeyFinder';\n\n/**\n * different row animation modes\n */\nexport enum EAnimationMode {\n  /**\n   * plain update existed both before and after\n   */\n  UPDATE,\n  /**\n   * exists both before and after but wasn't visible yet thus waas created\n   */\n  UPDATE_CREATE,\n  /**\n   * exists both before and after is visible but not needed anymore and thus removed\n   */\n  UPDATE_REMOVE,\n  /**\n   * row appears\n   */\n  SHOW,\n  /**\n   * row disappears\n   */\n  HIDE\n}\n\n/**\n * animated row item\n */\nexport interface IAnimationItem {\n  mode: EAnimationMode;\n  node: HTMLElement;\n  key: string;\n\n  /**\n   * previous context information\n   */\n  previous: {\n    index: number | -1;\n    y: number;\n    height: number | null;\n  };\n\n  /**\n   * position of the added node considering the previous height\n   */\n  nodeY: number;\n  /**\n   * position of the added node considering the current height\n   */\n  nodeYCurrentHeight: number;\n\n  /**\n   * current position\n   */\n  current: {\n    index: number | -1;\n    y: number;\n    height: number | null;\n  };\n}\n\nconst NO_CHANGE_DELTA = 1;\n\nexport function noAnimationChange({previous, mode, nodeY, current}: IAnimationItem, previousHeight: number, currentHeight: number) {\n  // sounds like the same\n  const prev = previous.height == null ? previousHeight : previous.height;\n  const curr = current.height == null ? currentHeight : current.height;\n  return mode === EAnimationMode.UPDATE && (Math.abs(previous.y - nodeY) <= NO_CHANGE_DELTA) && (Math.abs(prev - curr) <= NO_CHANGE_DELTA);\n}\n\nexport interface IPhase {\n  readonly delay: number;\n\n  apply(item: Readonly<IAnimationItem>, previousFinder: KeyFinder, currentFinder: KeyFinder): void;\n}\n\nexport interface IAnimationContext {\n  readonly previous: IExceptionContext;\n\n  previousKey(previousRowIndex: number): string;\n\n  currentKey(currentRowIndex: number): string;\n\n  phases?: IPhase[];\n}\n\n/**\n * maximal duration of all animations + extra waiting before e.g. rows are really removed\n * @type {number}\n */\nconst MAX_ANIMATION_TIME = 1100;\n\nexport const defaultPhases = [\n  {\n    delay: 0, // before\n    apply({mode, previous, nodeY, current, node}: Readonly<IAnimationItem>) {\n      node.dataset.animation = EAnimationMode[mode].toLowerCase();\n      node.style.transform = `translate(0, ${previous.y - nodeY}px)`;\n      if (mode === EAnimationMode.SHOW) {\n        // already target height\n        node.style.height = current.height !== null ? `${current.height}px` : null;\n      } else { // always set previous height for default height changes\n        node.style.height = `${previous.height}px`;\n      }\n      node.style.opacity = mode === EAnimationMode.SHOW ? '0' : (mode === EAnimationMode.HIDE ? '1' : null);\n    }\n  },\n  {\n    delay: 10, // after some delay for the before phase have been applied visually\n    apply({mode, current, nodeY, node}: Readonly<IAnimationItem>) {\n      // null for added/update since already at the right position\n      node.style.transform = (mode === EAnimationMode.HIDE || mode === EAnimationMode.UPDATE_REMOVE) ? `translate(0, ${current.y - nodeY}px)` : null;\n      if (mode !== EAnimationMode.HIDE) { // keep height for removal\n        node.style.height = current.height !== null ? `${current.height}px` : null;\n      }\n      node.style.opacity = mode === EAnimationMode.SHOW ? '1' : (mode === EAnimationMode.HIDE ? '0' : null);\n    }\n  },\n  {\n    delay: MAX_ANIMATION_TIME, // cleanup\n    apply({node}: Readonly<IAnimationItem>) {\n      delete node.dataset.animation;\n      node.style.opacity = null;\n      node.style.transform = null;\n    }\n  }\n];\n","\n\nexport declare type IDelayedMode = number | 'animation' | 'sync';\n\nexport const defaultMode: IDelayedMode = 'animation'; // Boolean((<any>window).chrome) ? 'animation' : 0, // animation frame on chrome;\n\nexport interface IScrollInfo {\n  left: number;\n  top: number;\n  width: number;\n  height: number;\n}\n\ninterface IScrollHandler {\n  timer: number;\n  prev: IScrollInfo | null;\n  handler: ((act: IScrollInfo) => void)[];\n}\n\nfunction dummy(): IScrollHandler {\n  return {\n    handler: [],\n    prev: null,\n    timer: -1\n  };\n}\n\nclass ScrollHandler {\n  private readonly sync = dummy();\n  private readonly animation = dummy();\n  private readonly numbers = new Map<number, IScrollHandler>();\n\n  // current: IScrollInfo;\n  // private prev: IScrollInfo | null = null;\n\n  get current() {\n    return this.asInfo();\n  }\n\n  constructor(private readonly node: HTMLElement) {\n    // this.current = this.asInfo();\n\n    node.addEventListener('scroll', () => {\n      // this.current = this.asInfo();\n\n      // if (this.prev && (Math.abs(this.current.left - this.prev.left) + Math.abs(this.current.top - this.prev.top)) < 4) {\n      //   return;\n      // }\n      // this.prev = this.current;\n\n      if (this.sync.handler.length > 0) {\n        this.handle(this.sync);\n      }\n      this.handleAnimation();\n      this.handleTimeouts();\n    }, {\n        passive: true\n      });\n  }\n\n  private handle(handler: IScrollHandler) {\n    const info = this.current;\n    if (handler.prev && (Math.abs(info.left - handler.prev.left) + Math.abs(info.top - handler.prev.top)) < 4) {\n      return;\n    }\n    handler.prev = info;\n    for (const s of handler.handler) {\n      s(info);\n    }\n  }\n\n  private handleAnimation() {\n    if (this.animation.timer !== -1 || this.animation.handler.length === 0) {\n      return;\n    }\n    this.animation.timer = 1;\n    requestAnimationFrame(this.handleAnimationImpl);\n  }\n\n  private readonly handleAnimationImpl = () => {\n    if (this.animation.timer !== 1) {\n      return;\n    }\n    this.handle(this.animation);\n    this.animation.timer = -1;\n  };\n\n  private handleTimeouts() {\n    if (this.numbers.size === 0) {\n      return;\n    }\n\n    this.numbers.forEach((handler, n) => {\n      if (handler.handler.length === 0) {\n        return;\n      }\n      handler.timer = self.setTimeout(() => {\n        this.handle(handler);\n        handler.timer = -1;\n      }, n);\n    });\n  }\n\n  asInfo(): IScrollInfo {\n    return {\n      left: this.node.scrollLeft,\n      top: this.node.scrollTop,\n      width: this.node.clientWidth,\n      height: this.node.clientHeight\n    };\n  }\n\n  push(mode: IDelayedMode, handler: (act: IScrollInfo) => void) {\n    if (typeof mode === 'number') {\n      if (!this.numbers.has(mode)) {\n        this.numbers.set(mode, dummy());\n      }\n      this.numbers.get(mode)!.handler.push(handler);\n    }\n\n    switch (mode) {\n      case 'sync':\n        this.sync.handler.push(handler);\n        break;\n      case 'animation':\n        this.animation.handler.push(handler);\n        break;\n    }\n  }\n\n\n  remove(handler: (act: IScrollInfo) => void) {\n    const test = [this.sync, this.animation].concat(Array.from(this.numbers.values()));\n\n    return test.some((d) => {\n      const index = d.handler.indexOf(handler);\n      if (index >= 0) {\n        d.handler.splice(index, 1);\n      }\n      return index >= 0;\n    });\n  }\n\n  isWaiting(mode: IDelayedMode) {\n    switch (mode) {\n      case 'animation':\n        return this.animation.timer >= 0;\n      case 'sync':\n        return false;\n      default:\n        return this.numbers.has(mode) && this.numbers.get(mode)!.timer >= 0;\n    }\n  }\n}\n\n/**\n * @internal\n */\nexport function addScroll(scroller: HTMLElement, mode: IDelayedMode, handler: (act: IScrollInfo) => void) {\n  // hide in element to have just one real listener\n  if (!(<any>scroller).__le_scroller__) {\n    (<any>scroller).__le_scroller__ = new ScrollHandler(scroller);\n  }\n  const s: ScrollHandler = (<any>scroller).__le_scroller__;\n  s.push(mode, handler);\n  return s.asInfo();\n}\n\n/**\n * @internal\n */\nexport function isScrollEventWaiting(scroller: HTMLElement, mode: IDelayedMode) {\n  if (!(<any>scroller).__le_scroller__) {\n    return false;\n  }\n  const s: ScrollHandler = (<any>scroller).__le_scroller__;\n  return s.isWaiting(mode);\n}\n\n/**\n * @internal\n */\nexport function removeScroll(scroller: HTMLElement, handler: (act: IScrollInfo) => void) {\n  if ((<any>scroller).__le_scroller__) {\n    (<ScrollHandler>(<any>scroller).__le_scroller__).remove(handler);\n  }\n}\n","export * from './scroll';\n\n/**\n * clear node clearing\n * @param node\n * @internal\n */\nexport function clear<T extends Node>(node: T) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n  return node;\n}\n","/**\n * generic exception of a uniform space\n */\nexport interface IRowHeightException {\n  /**\n   * reference index\n   */\n  readonly index: number;\n  /**\n   * height of the element\n   */\n  readonly height: number;\n  /**\n   * starting y\n   */\n  readonly y: number;\n  /**\n   * ending y\n   */\n  readonly y2: number;\n}\n\nclass RowHeightException implements IRowHeightException {\n  constructor(public readonly index: number, public readonly y: number, public readonly height: number) {\n\n  }\n\n  get y2() {\n    return this.y + this.height;\n  }\n}\n\n/**\n * simliar to a map\n */\nexport interface IRowHeightExceptionLookup {\n  keys(): IterableIterator<number>;\n\n  get(index: number): number | undefined;\n\n  has(index: number): boolean;\n\n  readonly size: number;\n}\n\n/**\n * exception context for optimized non uniform height exceptions\n */\nexport interface IExceptionContext {\n  /**\n   * height exceptions as a list\n   */\n  readonly exceptions: IRowHeightException[];\n  /**\n   * lookup for the height of a given index, if not part of this map it has the default height\n   */\n  readonly exceptionsLookup: IRowHeightExceptionLookup;\n  /**\n   * number of rows\n   */\n  readonly numberOfRows: number;\n  /**\n   * default height of rows\n   */\n  readonly defaultRowHeight: number;\n  /**\n   * total height\n   */\n  readonly totalHeight: number;\n\n  /**\n   * padding between rows, however already included in all heights to have the precise numbers\n   */\n  readonly padding: (index: number) => number;\n}\n\n/**\n * creates a uniform exception context, i.e no exceptions all rows are of the same height\n * @param {number} numberOfRows\n * @param {number} rowHeight\n * @param {number} rowPadding padding between rows\n * @return {IExceptionContext}\n */\nexport function uniformContext(numberOfRows: number, rowHeight: number, rowPadding: number = 0): IExceptionContext {\n  rowHeight += rowPadding;\n  const exceptionsLookup = {\n    keys: () => [].values(),\n    get: () => rowHeight,\n    has: () => false,\n    size: 0\n  };\n  return {\n    exceptions: [],\n    exceptionsLookup,\n    totalHeight: numberOfRows * rowHeight,\n    numberOfRows,\n    defaultRowHeight: rowHeight,\n    padding: () => rowPadding\n  };\n}\n\n/**\n * computes the most frequent value in a given array like\n * @param {} values\n * @return {number}\n */\nfunction mostFrequentValue(values: {forEach: (callback: (height: number, index: number) => any) => any}): number {\n  const lookup = new Map<number, number>();\n  values.forEach((value) => {\n    lookup.set(value, (lookup.get(value) || 0) + 1);\n  });\n  if (lookup.size === 0) {\n    return 20; // default value since it doesn't matter\n  }\n  // sort desc take first key and asc by the second in case of tie, it is optimized to have exceptions for higher rows less for big rows\n  const sorted = Array.from(lookup).sort((a, b) => {\n    if (a[1] !== b[1]) {\n      return b[1] - a[1];\n    }\n    return a[0] - b[0];\n  });\n  const mostFrequent = sorted[0][0];\n  if (mostFrequent === 0) { // cornercase\n    return sorted.length > 1 ? sorted[1][0] : 20; // all empty\n  }\n  return mostFrequent;\n}\n\n/**\n * creates a non uniform context based on the given array like heights\n * @param rowHeights arrayish to get the heights\n * @param {number} defaultRowHeight if not given the most frequent value will be used\n * @param {number} rowPadding padding between rows\n * @return {IExceptionContext}\n */\nexport function nonUniformContext(rowHeights: {forEach: (callback: (height: number, index: number) => any) => any}, defaultRowHeight: number = NaN, rowPadding: number | ((index: number) => number) = 0): IExceptionContext {\n  const exceptionsLookup = new Map<number, number>();\n  const exceptions: IRowHeightException[] = [];\n\n  const padding = typeof rowPadding === 'function' ? rowPadding : () => <number>rowPadding;\n\n  if (isNaN(defaultRowHeight)) {\n    defaultRowHeight = mostFrequentValue(rowHeights);\n  }\n\n  defaultRowHeight += padding(-1);\n\n  let prev = -1, acc = 0, totalHeight = 0, numberOfRows = 0;\n  rowHeights.forEach((height, index) => {\n    height += padding(index);\n    totalHeight += height;\n    numberOfRows++;\n    if (height === defaultRowHeight) {\n      //regular\n      return;\n    }\n    exceptionsLookup.set(index, height);\n    const between = (index - prev - 1) * defaultRowHeight;\n    prev = index;\n    const y = acc + between;\n    acc = y + height;\n    exceptions.push(new RowHeightException(index, y, height));\n  });\n  return {exceptionsLookup, exceptions, totalHeight, defaultRowHeight, numberOfRows, padding};\n}\n\n/**\n * creates a random context with the given constraints\n * @param {number} numberOfRows\n * @param {number} defaultRowHeight\n * @param {number} minRowHeight\n * @param {number} maxRowHeight\n * @param {number} ratio around ratio percent will get a non uniform height\n * @param {number} seed random seed\n * @return {IExceptionContext}\n */\nexport function randomContext(numberOfRows: number, defaultRowHeight: number, minRowHeight = 2, maxRowHeight = defaultRowHeight * 10, ratio = 0.2, seed = Date.now()) {\n  let actSeed = seed;\n  const random = () => {\n    const x = Math.sin(actSeed++) * 10000;\n    return x - Math.floor(x);\n  };\n\n\n  const getter = () => {\n    const coin = random();\n    if (coin < ratio) {\n      //non uniform\n      return minRowHeight + Math.round(random() * (maxRowHeight - minRowHeight));\n    }\n    return defaultRowHeight;\n  };\n  const forEach = (callback: (height: number, index: number) => any) => {\n    for (let index = 0; index < numberOfRows; ++index) {\n      callback(getter(), index);\n    }\n  };\n  return nonUniformContext({forEach}, defaultRowHeight);\n}\n\nexport interface IVisibleRange {\n  /**\n   * first visible index\n   */\n  readonly first: number;\n  /**\n   * last visible index\n   */\n  readonly last: number;\n  /**\n   * position of the first visible row in pixel\n   */\n  readonly firstRowPos: number;\n  /**\n   * position of the last visible row includings its size\n   */\n  readonly endPos: number;\n}\n\n/**\n * computes the visible range\n * @param {number} scrollTop top scrolling\n * @param {number} clientHeight visible height\n * @param {number} rowHeight height of a row by default\n * @param {IRowHeightException[]} heightExceptions exceptions of this default height\n * @param {number} numberOfRows the number of rows\n * @return {IVisibleRange} the computed visible range\n */\nexport function range(scrollTop: number, clientHeight: number, rowHeight: number, heightExceptions: IRowHeightException[], numberOfRows: number): IVisibleRange {\n  if (numberOfRows === 0) {\n    return {first: 0, last: -1, firstRowPos: 0, endPos: 0};\n  }\n  if (numberOfRows === 1) {\n    return {\n      first: 0,\n      last: 0,\n      firstRowPos: 0,\n      endPos: heightExceptions.length === 0 ? rowHeight : heightExceptions[0].y2\n    };\n  }\n  const offset = scrollTop;\n  const offset2 = offset + clientHeight;\n\n  function indexOf(pos: number, indexShift: number) {\n    return Math.min(numberOfRows - 1, indexShift + Math.max(0, Math.floor(pos / rowHeight)));\n  }\n\n  function calc(offsetShift: number, indexShift: number, isGuess: boolean = false) {\n    const shifted = offset - offsetShift;\n    const shifted2 = offset2 - offsetShift;\n\n    const first = indexOf(shifted, indexShift);\n    const last = indexOf(shifted2, indexShift);\n\n    const firstRowPos = offsetShift + (first - indexShift) * rowHeight;\n    const endPos = offsetShift + (last + 1 - indexShift) * rowHeight;\n\n    //if (!isGuess) {\n    //  console.log(first, '@', firstRowPos, last, '#', end, offset, offset2, firstRowPos <= offset, offset2 <= end);\n    //}\n    console.assert(!isGuess || !(firstRowPos > offset || (endPos < offset2 && last < numberOfRows - 1)), 'error', isGuess, firstRowPos, endPos, offset, offset2, indexShift, offsetShift);\n    return {first, last, firstRowPos, endPos};\n  }\n\n  const r = calc(0, 0, true);\n  if (heightExceptions.length === 0) {\n    //uniform\n    return r;\n  }\n  if (r.last < heightExceptions[0].index) {\n    //console.log('before the first exception = uniform with no shift');\n    //console.log(r.first, '@', r.firstRowPos, r.last, '#', r.end, offset, offset2, r.firstRowPos <= offset, offset2 <= r.end);\n    return r;\n  }\n  if (r.last === heightExceptions[0].index && heightExceptions[0].height > rowHeight) {\n    return Object.assign(r, {endPos: heightExceptions[0].y2});\n  }\n\n  //the position where the exceptions ends\n  const lastPos = heightExceptions[heightExceptions.length - 1];\n  if (offset >= lastPos.y) {\n    const rest = calc(lastPos.y2, lastPos.index + 1);\n    if (offset < lastPos.y2) {\n      // include me\n      return Object.assign(rest, {first: lastPos.index, firstRowPos: lastPos.y});\n    }\n    return rest;\n  }\n  //we have some exceptions\n  const visible: IRowHeightException[] = [];\n  let closest = heightExceptions[0]; //closest before not in range\n  for (const item of heightExceptions) {\n    const {y, y2} = item;\n    if (y >= offset2) {\n      break;\n    }\n    if (y2 <= offset) {\n      closest = item;\n      continue;\n    }\n    visible.push(item);\n  }\n\n  if (visible.length === 0) {\n    //console.log('we are in the between some exceptions and none are visible');\n    return calc(closest.y2, closest.index + 1); //skip myself\n  }\n\n  {\n    //console.log('we show at least one exception');\n    const firstException = visible[0];\n    const lastException = visible[visible.length - 1];\n\n    const first = Math.max(0, firstException.index - Math.max(0, Math.ceil((firstException.y - offset) / rowHeight)));\n    let last = lastException.index;\n    if (offset2 >= lastException.y2) {\n      last = indexOf(offset2 - lastException.y2, lastException.index + 1);\n    }\n    const firstRowPos = firstException.y - (firstException.index - first) * rowHeight;\n    const endPos = lastException.y2 + (last - lastException.index) * rowHeight;\n\n    //console.log(first, '@', firstRowPos, last, '#', end, offset, offset2, firstRowPos <= offset, offset2 <= end);\n\n    console.assert(firstRowPos <= offset && (endPos >= offset2 || last === numberOfRows - 1), 'error', firstRowPos, endPos, offset, offset2, firstException, lastException);\n    return {first, last, firstRowPos, endPos};\n  }\n}\n\n\nexport function frozenDelta(current: number[], target: number[]): {added: number[], removed: number[], common: number} {\n  const clength = current.length;\n  const tlength = target.length;\n  if (clength === 0) {\n    return {added: target, removed: [], common: 0};\n  }\n  if (tlength === 0) {\n    return {added: [], removed: current, common: 0};\n  }\n  if (clength === tlength) { //since sorted and left increasing true\n    return {added: [], removed: [], common: clength};\n  }\n  const removed = current.slice(Math.min(tlength, clength));\n  const added = target.slice(Math.min(tlength, clength));\n  return {added, removed, common: clength - removed.length};\n}\n\nexport function updateFrozen(old: number[], columns: {frozen: boolean}[], first: number): {target: number[], added: number[], removed: number[]} {\n  const oldLast = old.length === 0 ? 0 : old[old.length - 1] + 1;\n  const added: number[] = [];\n  const removed: number[] = [];\n\n  for (let i = old.length - 1; i >= 0; --i) {\n    const index = old[i];\n    if (index >= first) {\n      removed.push(old.pop()!);\n    } else {\n      // can stop since sorted and it will never happen again\n      break;\n    }\n  }\n  //added\n  for (let i = oldLast; i < first; ++i) {\n    if (columns[i].frozen) {\n      added.push(i);\n      old.push(i);\n    }\n  }\n  return {target: old, added, removed};\n}\n","import {IExceptionContext} from '../logic';\n\n/**\n * scrolling result\n */\nexport enum EScrollResult {\n  /**\n   * nothing has changed\n   */\n  NONE,\n  /**\n   * all rows needed to be recreated\n   */\n  ALL,\n  /**\n   * unknown\n   */\n  SOME,\n  /**\n   * some rows are added at the bottom\n   */\n  SOME_BOTTOM,\n  /**\n   * some rows are added at the top\n   */\n  SOME_TOP\n}\n\n/**\n * adapter context for mixins to avoid public fields\n */\nexport interface IMixinAdapter {\n  readonly visible: {\n    //writable\n    first: number;\n    last: number;\n    forcedFirst: number;\n    forcedLast: number;\n  };\n  readonly visibleFirstRowPos: number;\n\n  readonly context: IExceptionContext;\n  readonly scrollOffset: number;\n  readonly scrollTotal: number;\n\n  addAtBeginning(from: number, to: number, frozenShift: number): void;\n\n  addAtBottom(from: number, to: number): void;\n\n  removeFromBeginning(from: number, to: number, frozenShift: number): void;\n\n  removeFromBottom(from: number, to: number): void;\n\n  updateOffset(firstRowPos: number): void;\n\n  /**\n   * triggers to sync frozen items\n   * @param {number} first\n   * @return {number} frozenShift\n   */\n  syncFrozen?(first: number): number;\n\n  isScrollEventWaiting(): boolean;\n}\n\nexport interface IMixin {\n  onScrolled(isGoingDown: boolean, scrollResult: EScrollResult): void;\n}\n\nexport interface IMixinClass {\n  new(adapter: IMixinAdapter, options?: any): IMixin;\n}\n","\n\n\nconst PREFIX = 'le';\n\n/**\n * @internal\n * @param suffix suffix to suffix\n */\nexport function cssClass(suffix?: string) {\n  if (!suffix) {\n    return PREFIX;\n  }\n  return `${PREFIX}-${suffix}`;\n}\n\nexport const CSS_CLASS_LOADING = cssClass('loading');\nexport const CSS_CLASS_FROZEN = cssClass('frozen');\nexport const CSS_CLASS_HIDDEN = cssClass('hidden');\nexport const CSS_CLASS_MULTI = cssClass('multi');\nexport const CSS_CLASS_EVEN = cssClass('even');\nexport const CSS_CLASS_SHIFTED = cssClass('shifted');\nexport const CSS_CLASS_SCROLLBAR_TESTER = cssClass('scrollbar-tester');\n\nexport const CSS_CLASS_HEADER = cssClass('header');\nexport const CSS_CLASS_BODY = cssClass('body');\nexport const CSS_CLASS_FOOTER = cssClass('footer');\n\nexport const CSS_CLASS_THEAD = cssClass('thead');\nexport const CSS_CLASS_TBODY = cssClass('tbody');\n\nexport const CSS_CLASS_TR = cssClass('tr');\nexport const CSS_CLASS_TH = cssClass('th');\nexport const CSS_CLASS_TD = cssClass('td');\n\nexport const CSS_CLASS_SCROLLING = cssClass('scrolling');\nexport const CSS_CLASS_ROW_ANIMATION = cssClass('row-animation');\n","import {ABORTED, IAbortAblePromise, isAbortAble} from './abortAble';\nimport {defaultPhases, EAnimationMode, IAnimationContext, IAnimationItem, IPhase, noAnimationChange} from './animation';\nimport KeyFinder from './animation/KeyFinder';\nimport {addScroll, clear, defaultMode, IDelayedMode, IScrollInfo, removeScroll} from './internal';\nimport {isScrollEventWaiting} from './internal/scroll';\nimport {IExceptionContext, range} from './logic';\nimport {EScrollResult, IMixin, IMixinAdapter, IMixinClass} from './mixin';\nimport {cssClass, CSS_CLASS_EVEN, CSS_CLASS_FOOTER, CSS_CLASS_LOADING, CSS_CLASS_ROW_ANIMATION, CSS_CLASS_SCROLLING, CSS_CLASS_TR} from './styles';\n\nexport declare type IRowRenderContext = IExceptionContext;\n\nexport function isLoadingCell(node: HTMLElement) {\n  return node.classList.contains(CSS_CLASS_LOADING);\n}\n\nexport interface IRowRendererOptions {\n  /**\n   * async update on scrolling\n   * animation -> use requestAnimationFrame\n   * sync -> execute within scroll listener\n   * {number} -> execute within this delay using setTimeout\n   * @default is chrome ? animation else 0\n   */\n  async: IDelayedMode;\n\n  /**\n   * minimal number of pixel the scrollbars has to move\n   * @default 10\n   */\n  minScrollDelta: number;\n\n  /**\n   * min number of rows that should be added or removed\n   * @default 10\n   */\n  batchSize: number;\n\n  /**\n   * number of pixels the viewport is virtually larger\n   * @default 200\n   */\n  viewportOversize: number;\n\n  /**\n   * class of mixins to use for optimized rendering\n   */\n  mixins: IMixinClass[];\n\n  /**\n   * add the scrolling hint class while scrolling to give a user feedback\n   */\n  scrollingHint: boolean;\n\n  /**\n   * whether background striping should be enabled\n   */\n  striped: boolean;\n}\n\n/**\n * base class for creating a scalable table renderer based on rows\n */\nexport abstract class ARowRenderer {\n  private readonly pool: HTMLElement[] = [];\n  private readonly loadingPool: HTMLElement[] = [];\n  private readonly loading = new WeakMap<HTMLElement, IAbortAblePromise<void>>();\n\n  private readonly fragment: DocumentFragment;\n\n  /**\n   * currently visible slice\n   */\n  protected readonly visible = {\n    first: 0,\n    forcedFirst: 0,\n    last: -1,\n    forcedLast: -1\n  };\n  /**\n   * position of the first visible row in pixel\n   * @type {number}\n   */\n  protected visibleFirstRowPos = 0;\n\n  private readonly adapter: IMixinAdapter;\n  private readonly mixins: IMixin[];\n  private scrollListener: ((act: IScrollInfo) => void) | null = null;\n  protected lastScrollInfo: IScrollInfo | null = null;\n\n  private abortAnimation: () => void = () => undefined;\n\n  protected readonly options: Readonly<IRowRendererOptions> = {\n    async: defaultMode,\n    minScrollDelta: 10,\n    mixins: [],\n    scrollingHint: false,\n    batchSize: 10,\n    striped: false,\n    viewportOversize: 200\n  };\n\n  constructor(protected readonly body: HTMLElement, options: Partial<IRowRendererOptions> = {}) {\n    this.adapter = this.createAdapter();\n    Object.assign(this.options, options);\n    this.mixins = this.options.mixins.map((mixinClass) => new mixinClass(this.adapter));\n\n    this.fragment = body.ownerDocument!.createDocumentFragment();\n  }\n\n  protected abstract get idPrefix(): string;\n\n  /**\n   * register another mixin to this renderer\n   * @param {IMixinClass} mixinClass the mixin class to instantitiate\n   * @param options optional constructor options\n   */\n  protected addMixin(mixinClass: IMixinClass, options?: any) {\n    this.mixins.push(new mixinClass(this.adapter, options));\n  }\n\n  private createAdapter(): IMixinAdapter {\n    const r: any = {\n      visible: this.visible,\n      addAtBeginning: this.addAtBeginning.bind(this),\n      addAtBottom: this.addAtBottom.bind(this),\n      removeFromBeginning: this.removeFromBeginning.bind(this),\n      removeFromBottom: this.removeFromBottom.bind(this),\n      updateOffset: this.updateOffset.bind(this),\n      isScrollEventWaiting: () => isScrollEventWaiting(this.bodyScroller, this.options.async)\n    };\n    Object.defineProperties(r, {\n      visibleFirstRowPos: {\n        get: () => this.visibleFirstRowPos,\n        enumerable: true\n      },\n      context: {\n        get: () => this.context,\n        enumerable: true\n      },\n      scrollOffset: {\n        get: () => this.lastScrollInfo ? this.lastScrollInfo.top : 0,\n        enumerable: true\n      },\n      scrollTotal: {\n        get: () => this.lastScrollInfo ? this.lastScrollInfo.height : this.bodyScroller.clientHeight,\n        enumerable: true\n      }\n    });\n    return r;\n  }\n\n  /**\n   * get the scrolling container i.e. parent of the body element\n   * @returns {HTMLElement}\n   */\n  protected get bodyScroller() {\n    return <HTMLElement>this.body.parentElement;\n  }\n\n  protected get bodySizer(): HTMLElement {\n    const parent = this.bodyScroller;\n    const sizer = (<HTMLElement[]>Array.from(parent.children)).find((d) => d.tagName.toLowerCase() === 'footer');\n    if (sizer) {\n      return sizer;\n    }\n    const s = parent.ownerDocument!.createElement('footer');\n    s.classList.add(CSS_CLASS_FOOTER, cssClass(`footer-${this.idPrefix}`));\n    parent.insertBefore(s, parent.firstChild);\n    return s;\n  }\n\n  /**\n   * the current render context, upon change `recreate` the whole table\n   * @returns {IRowRenderContext}\n   */\n  protected abstract get context(): IRowRenderContext;\n\n  /**\n   * creates a new row\n   * @param {HTMLElement} node the node of the row\n   * @param {number} index the row index\n   * @returns {IAbortAblePromise<void> | void} either an abortable or nothing\n   */\n  protected abstract createRow(node: HTMLElement, index: number): IAbortAblePromise<void> | void;\n\n  /**\n   * updates a row\n   * @param {HTMLElement} node the node of the row\n   * @param {number} index the row index\n   * @returns {IAbortAblePromise<void> | void} either an abortable or nothing\n   */\n  protected abstract updateRow(node: HTMLElement, index: number): IAbortAblePromise<void> | void;\n\n  /**\n   * initializes the table and register the onscroll listener\n   * @returns {void} nothing\n   */\n  protected init() {\n    const scroller = this.bodyScroller;\n\n    let old = addScroll(scroller, this.options.async, this.scrollListener = (act) => {\n      this.lastScrollInfo = act;\n      if (Math.abs(old.top - act.top) < this.options.minScrollDelta && Math.abs(old.height - act.height) < this.options.minScrollDelta) {\n        return;\n      }\n      const isGoingDown = act.top > old.top;\n      old = act;\n      this.onScrolledVertically(act.top, act.height, isGoingDown);\n      if (this.options.scrollingHint) {\n        this.body.classList.remove(CSS_CLASS_SCROLLING);\n      }\n    });\n    if (this.options.scrollingHint) {\n      addScroll(scroller, 'animation', () => this.body.classList.add(CSS_CLASS_SCROLLING));\n    }\n    this.recreate();\n  }\n\n\n  /**\n   * destroys this renderer and unregisters all event listeners\n   */\n  destroy() {\n    removeScroll(this.bodyScroller, this.scrollListener!);\n    this.body.remove();\n  }\n\n  private static cleanUp(item: HTMLElement) {\n    item.style.height = null;\n  }\n\n  private select(index: number): {item: HTMLElement, result: IAbortAblePromise<void> | void} {\n    let item: HTMLElement;\n    let result: IAbortAblePromise<void> | void;\n    if (this.pool.length > 0) {\n      item = this.pool.pop()!;\n      result = this.updateRow(item, index);\n    } else if (this.loadingPool.length > 0) {\n      item = this.loadingPool.pop()!;\n      item.classList.remove(CSS_CLASS_LOADING);\n      result = this.createRow(item, index);\n    } else {\n      item = this.body.ownerDocument!.createElement('div');\n      item.classList.add(CSS_CLASS_TR, cssClass(`tr-${this.idPrefix}`));\n      result = this.createRow(item, index);\n    }\n    item.dataset.index = String(index);\n    if (this.options.striped) {\n      item.classList.toggle(CSS_CLASS_EVEN, index % 2 === 0);\n    }\n    return {item, result};\n  }\n\n  private selectProxy() {\n    let proxy: HTMLElement;\n    if (this.loadingPool.length > 0) {\n      proxy = this.loadingPool.pop()!;\n    } else {\n      proxy = this.body.ownerDocument!.createElement('div');\n      proxy.classList.add(CSS_CLASS_LOADING, CSS_CLASS_TR, cssClass(`tr-${this.idPrefix}`));\n    }\n    return proxy;\n  }\n\n  private recycle(item: HTMLElement) {\n    ARowRenderer.cleanUp(item);\n    // check if the original dom element is still being manipulated\n    if (this.loading.has(item)) {\n      const abort = this.loading.get(item)!;\n      abort.abort();\n    } else {\n      this.pool.push(item);\n    }\n  }\n\n  private proxy(item: HTMLElement, result: IAbortAblePromise<void> | void) {\n    if (!isAbortAble(result)) {\n      return item;\n    }\n    const abort = result;\n    //lazy loading\n\n    const real = item;\n    const proxy = this.selectProxy();\n    // copy attributes\n    proxy.dataset.index = real.dataset.index;\n    proxy.style.height = real.style.height;\n\n    this.loading.set(proxy, abort);\n    abort.then((result) => {\n      if (result === ABORTED) {\n        //aborted can recycle the real one\n        ARowRenderer.cleanUp(real);\n        this.pool.push(real);\n      } else {\n        //fully loaded\n        this.body.replaceChild(real, proxy);\n      }\n      this.loading.delete(proxy);\n      ARowRenderer.cleanUp(proxy);\n      this.loadingPool.push(proxy);\n    }, () => {\n      // handle as aborted\n      //aborted can recycle the real one\n      ARowRenderer.cleanUp(real);\n      this.pool.push(real);\n\n      this.loading.delete(proxy);\n      ARowRenderer.cleanUp(proxy);\n      this.loadingPool.push(proxy);\n    });\n    return proxy;\n  }\n\n  private create(index: number) {\n    const {item, result} = this.select(index);\n\n    const {exceptionsLookup: ex, padding} = this.context;\n    if (ex.has(index)) {\n      item.style.height = `${ex.get(index)! - padding(index)}px`;\n    }\n\n    return this.proxy(item, result);\n  }\n\n  private removeAll(perform = true) {\n    const b = this.body;\n    if (!perform) {\n      return <HTMLElement[]>Array.from(b.children);\n    }\n    const torecycle: HTMLElement[] = [];\n    while (b.lastElementChild) {\n      const i = <HTMLElement>b.lastElementChild;\n      b.removeChild(i);\n      this.recycle(i);\n      torecycle.push(i);\n    }\n    return torecycle;\n  }\n\n\n  /**\n   * triggers and visual update of all visible rows\n   */\n  protected update() {\n    const first = this.visible.first;\n    const fragment = this.fragment;\n    const items = <HTMLElement[]>Array.from(this.body.children);\n    clear(this.body);\n    items.forEach((item: HTMLElement, i) => {\n      if (this.loading.has(item)) {\n        // still loading\n        fragment.appendChild(item);\n        return;\n      }\n      const abort = this.updateRow(item, i + first);\n\n      fragment.appendChild(this.proxy(item, abort));\n    });\n    this.body.appendChild(fragment);\n  }\n\n  /**\n   * utility to execute a function for each visible row\n   * @param {(row: HTMLElement, rowIndex: number) => void} callback callback to execute\n   * @param {boolean} inplace whether the DOM changes should be performed inplace instead of in a fragment\n   */\n  protected forEachRow(callback: (row: HTMLElement, rowIndex: number) => void, inplace: boolean = false) {\n    const rows = <HTMLElement[]>Array.from(this.body.children);\n    const fragment = this.fragment;\n    if (!inplace) {\n      clear(this.body);\n    }\n    rows.forEach((row: HTMLElement, index) => {\n      if (!isLoadingCell(row) && row.dataset.animation !== 'update_remove' && row.dataset.animation !== 'hide') {\n        //skip loading ones and temporary ones\n        callback(row, index + this.visible.first);\n      }\n      if (!inplace) {\n        fragment.appendChild(row);\n      }\n    });\n    if (!inplace) {\n      this.body.appendChild(fragment);\n    }\n  }\n\n  private removeFromBeginning(from: number, to: number, perform = true) {\n    return this.remove(from, to, true, perform);\n  }\n\n  private removeFromBottom(from: number, to: number, perform = true) {\n    return this.remove(from, to, false, perform);\n  }\n\n  private remove(from: number, to: number, fromBeginning: boolean, perform = true) {\n    if (to < from) {\n      return;\n    }\n    const b = this.body;\n    const torecycle: HTMLElement[] = [];\n    // console.log('remove', fromBeginning, (to - from) + 1, this.body.childElementCount - ((to - from) + 1));\n    let act = <HTMLElement>(fromBeginning ? b.firstChild : b.lastChild);\n    for (let i = from; i <= to; ++i) {\n      const item = act;\n      act = <HTMLElement>(fromBeginning ? act.nextSibling : act.previousSibling);\n\n      if (perform) {\n        b.removeChild(item);\n        this.recycle(item);\n      }\n      torecycle.push(item);\n\n    }\n    return torecycle;\n  }\n\n  private addAtBeginning(from: number, to: number, perform = true) {\n    if (to < from) {\n      return;\n    }\n    // console.log('add', (to - from) + 1, this.body.childElementCount + ((to - from) + 1));\n    const fragment = this.fragment;\n    if (from === to && perform) {\n      this.body.insertBefore(this.create(from), this.body.firstChild);\n      return;\n    }\n    for (let i = from; i <= to; ++i) {\n      fragment.appendChild(this.create(i));\n    }\n    if (perform) {\n      this.body.insertBefore(fragment, this.body.firstChild);\n    }\n    return fragment;\n  }\n\n  private addAtBottom(from: number, to: number, perform = true) {\n    if (to < from) {\n      return;\n    }\n    // console.log('add_b', (to - from) + 1, this.body.childElementCount + ((to - from) + 1));\n    if (from === to && perform) {\n      this.body.appendChild(this.create(from));\n      return;\n    }\n    const fragment = this.fragment;\n    for (let i = from; i <= to; ++i) {\n      fragment.appendChild(this.create(i));\n    }\n    if (perform) {\n      this.body.appendChild(fragment);\n    }\n    return fragment;\n  }\n\n  protected updateOffset(firstRowPos: number) {\n    this.visibleFirstRowPos = firstRowPos;\n\n    this.updateSizer(firstRowPos);\n  }\n\n  protected updateSizer(firstRowPos: number) {\n    const {totalHeight} = this.context;\n    setTransform(this.body, 0, firstRowPos.toFixed(0));\n    setTransform(this.bodySizer, 0, Math.max(0, totalHeight - 1).toFixed(0));\n  }\n\n  /**\n   * removes all rows and recreates the table\n   * @param {IAnimationContext} ctx optional animation context to create a transition between the previous and the current tables\n   * @returns {void} nothing\n   */\n  protected recreate(ctx?: IAnimationContext) {\n    this.abortAnimation();\n    if (ctx) {\n      return this.recreateAnimated(ctx);\n    }\n    return this.recreatePure();\n  }\n\n  private recreatePure() {\n    const context = this.context;\n\n    const scroller = this.bodyScroller;\n\n    //update first to avoid resetting scrollTop\n    this.updateOffset(0);\n\n    this.removeAll();\n    this.clearPool();\n\n    const {first, last, firstRowPos} = range(scroller.scrollTop, scroller.clientHeight, context.defaultRowHeight, context.exceptions, context.numberOfRows);\n\n    this.visible.first = this.visible.forcedFirst = first;\n    this.visible.last = this.visible.forcedLast = last;\n\n    if (first < 0) {\n      // empty\n      this.updateOffset(0);\n      return;\n    }\n    this.addAtBottom(first, last);\n    this.updateOffset(firstRowPos);\n  }\n\n\n  private recreateAnimated(ctx: IAnimationContext) {\n    const lookup = new Map<string, {n: HTMLElement, pos: number, i: number}>();\n    const prev = new KeyFinder(ctx.previous, ctx.previousKey);\n    const cur = new KeyFinder(this.context, ctx.currentKey);\n    const next = range(this.bodyScroller.scrollTop, this.bodyScroller.clientHeight, cur.context.defaultRowHeight, cur.context.exceptions, cur.context.numberOfRows);\n\n    {\n      const rows = <HTMLElement[]>Array.from(this.body.children);\n      const old = Object.assign({}, this.visible);\n      //store the current rows in a lookup and clear\n\n      clear(this.body);\n\n      prev.positions(old.first, Math.min(old.last, old.first + rows.length), this.visibleFirstRowPos, (i, key, pos) => {\n        const n = rows[i];\n        if (n) { // shouldn't happen that it is not there\n          lookup.set(key, {n, pos, i});\n        }\n        // else {\n        //  console.error(i, key, pos, rows);\n        //}\n      });\n    }\n\n    this.visible.first = this.visible.forcedFirst = next.first;\n    this.visible.last = this.visible.forcedLast = next.last;\n\n    const fragment = this.fragment;\n    const animation: IAnimationItem[] = [];\n\n    let nodeY = next.firstRowPos;\n    cur.positions(next.first, next.last, next.firstRowPos, (i, key, pos) => {\n      let node: HTMLElement;\n      let mode: EAnimationMode = EAnimationMode.UPDATE;\n      let previous: {\n        index: number | -1;\n        y: number;\n        height: number | null;\n      };\n      if (lookup.has(key)) {\n        // still visible\n        const item = lookup.get(key)!;\n        lookup.delete(key);\n\n        // update height\n\n        item.n.dataset.index = String(i);\n        node = this.proxy(item.n, this.updateRow(item.n, i));\n        previous = {\n          index: item.i,\n          y: item.pos,\n          height: prev.exceptionHeightOf(item.i, true)\n        };\n      } else {\n        // need a new row\n        const old = prev.posByKey(key);\n        // maybe not visible  before so keep in place\n        node = this.create(i);\n\n        mode = old.index < 0 ? EAnimationMode.SHOW : EAnimationMode.UPDATE_CREATE;\n        previous = {\n          index: old.index,\n          y: old.pos >= 0 ? old.pos : pos,\n          height: old.index < 0 ? cur.exceptionHeightOf(i, true) : prev.exceptionHeightOf(old.index, true)\n        };\n      }\n      animation.push({\n        node,\n        key,\n        mode,\n        previous,\n        nodeY,\n        nodeYCurrentHeight: pos,\n        current: {\n          index: i,\n          y: pos,\n          height: cur.exceptionHeightOf(i)\n        }\n      });\n      node.style.transform = `translate(0, ${nodeY - pos}px)`;\n      nodeY += previous.height! + (previous.index < 0 ? cur.padding(i) : prev.padding(previous.index));\n\n      fragment.appendChild(node);\n    });\n\n    let nodeYCurrentHeight = next.endPos;\n    // items that are going to be removed\n    lookup.forEach((item, key) => {\n      // calculate their next position\n      const r = cur.posByKey(key);\n\n      // maybe not visible anymore, keep in place\n      const nextPos = r.pos >= 0 ? r.pos : item.pos;\n      const node = item.n;\n      // located at addedPos\n      // should end up at nextPos\n      // was previously at item.pos\n      node.style.transform = `translate(0, ${item.pos - nodeY}px)`;\n      fragment.appendChild(node);\n\n      const prevHeight = prev.exceptionHeightOf(item.i, true);\n\n      animation.push({\n        node: item.n,\n        key,\n        mode: r.index < 0 ? EAnimationMode.HIDE : EAnimationMode.UPDATE_REMOVE,\n        previous: {\n          index: item.i,\n          y: item.pos,\n          height: prevHeight\n        },\n        nodeY,\n        nodeYCurrentHeight,\n        current: {\n          index: r.index,\n          y: nextPos,\n          height: r.index < 0 ? null : cur.exceptionHeightOf(r.index)\n        }\n      });\n      nodeYCurrentHeight += r.index < 0 ? cur.context.defaultRowHeight : (cur.exceptionHeightOf(r.index, true)! + cur.padding(r.index));\n      nodeY += prevHeight! + prev.padding(item.i);\n    });\n\n    this.updateOffset(next.firstRowPos);\n\n    this.animate(animation, ctx.phases || defaultPhases, prev, cur, fragment);\n  }\n\n  private animate(animation: IAnimationItem[], phases: IPhase[], previousFinder: KeyFinder, currentFinder: KeyFinder, fragment: DocumentFragment) {\n    if (animation.length <= 0) {\n      this.body.appendChild(fragment);\n      return;\n    }\n\n    let currentTimer: any = -1;\n    let actPhase = 0;\n\n    const executePhase = (phase: IPhase, items = animation) => {\n      items.forEach((anim) => phase.apply(anim, previousFinder, currentFinder));\n    };\n\n    const run = () => {\n      //dummy log for forcing dom update\n      console.assert(animation[0]!.node.offsetTop >= 0, 'dummy log for forcing dom update');\n      executePhase(phases[actPhase++]);\n\n      // shifted by one since already added through ++\n      if (actPhase < phases.length) {\n        // schedule the next one\n        const next = phases[actPhase]!;\n        currentTimer = self.setTimeout(run, next.delay);\n        return;\n      }\n\n      // last one\n      const body = this.body.classList;\n      Array.from(body).forEach((v) => {\n        if (v.startsWith(cssClass()) && v.endsWith('-animation')) {\n          body.remove(v);\n        }\n      });\n      // clean up\n      animation.forEach(({node, mode}) => {\n        if (mode !== EAnimationMode.UPDATE_REMOVE && mode !== EAnimationMode.HIDE) {\n          return;\n        }\n        node.remove();\n        node.style.transform = null;\n        this.recycle(node);\n      });\n      this.abortAnimation = () => undefined;\n      currentTimer = -1;\n    };\n\n    // execute all phases having a delay of zero\n    while (phases[actPhase].delay === 0) {\n      executePhase(phases[actPhase++]);\n    }\n    // after the initial one\n    const body = this.body;\n    this.body.appendChild(fragment);\n\n    const dummyAnimation: IAnimationItem[] = [];\n    animation = animation.filter((d) => {\n      if (noAnimationChange(d, previousFinder.context.defaultRowHeight, currentFinder.context.defaultRowHeight)) {\n        dummyAnimation.push(d);\n        return false;\n      }\n      return true;\n    });\n\n    if (dummyAnimation.length > 0) {\n      // execute all phases for them\n      phases.slice(actPhase).forEach((phase) => executePhase(phase, dummyAnimation));\n    }\n\n    if (animation.length === 0) {\n      return;\n    }\n\n    body.classList.add(CSS_CLASS_ROW_ANIMATION);\n    (new Set(animation.map((d) => d.mode))).forEach((mode) => {\n      // add class but map to UPDATE only\n      body.classList.add(cssClass(`${EAnimationMode[mode].toLowerCase().split('_')[0]}-animation`));\n    });\n\n    this.abortAnimation = () => {\n      if (currentTimer <= 0) {\n        return;\n      }\n      // abort by removing\n      clearTimeout(currentTimer);\n      currentTimer = -1;\n      // run the last phase\n      actPhase = phases.length - 1;\n      run();\n    };\n\n    // next tick such that DOM will be updated\n    currentTimer = self.setTimeout(run, phases[actPhase].delay);\n  }\n\n  /**\n   * clears the row pool used for faster creation\n   */\n  protected clearPool() {\n    // clear pool\n    this.pool.splice(0, this.pool.length);\n  }\n\n  /**\n   * triggers a revalidation of the current scrolling offest\n   */\n  protected revalidate() {\n    const scroller = this.bodyScroller;\n    this.onScrolledVertically(scroller.scrollTop, scroller.clientHeight, true);\n    this.updateOffset(this.visibleFirstRowPos);\n  }\n\n  /**\n   * scrolling vertically\n   * @param {number} scrollTop top scrolling\n   * @param {number} clientHeight visible height\n   * @param {boolean} isGoingDown hint whether the scrollTop increases\n   * @return {EScrollResult} full in case of a full rebuild or partial update\n   */\n  protected onScrolledVertically(scrollTop: number, clientHeight: number, isGoingDown: boolean): EScrollResult {\n    const shift = this.options.viewportOversize;\n\n    const shiftTop = Math.max(0, scrollTop - shift);\n\n    const scrollResult = this.onScrolledImpl(shiftTop, clientHeight + shift + (scrollTop - shiftTop));\n    for (const mixin of this.mixins) {\n      mixin.onScrolled(isGoingDown, scrollResult);\n    }\n    return scrollResult;\n  }\n\n  private shiftLast(current: number, currentDelta: number) {\n    const b = this.options.batchSize;\n    if (currentDelta >= b) {\n      return current;\n    }\n    const total = this.context.numberOfRows;\n    return Math.min(total - 1, current + (this.options.batchSize - currentDelta));\n  }\n\n  private shiftFirst(current: number, currentFirstRow: number, currentDelta: number) {\n    const b = this.options.batchSize;\n    if (currentDelta >= b || current <= 0) {\n      return {first: current, firstRowPos: currentFirstRow};\n    }\n    const first = Math.max(0, current - (this.options.batchSize - currentDelta));\n\n    const {exceptionsLookup, defaultRowHeight} = this.context;\n    let firstRowPos = currentFirstRow;\n    for (let i = first; i < current; ++i) {\n      if (exceptionsLookup.has(i)) {\n        firstRowPos -= exceptionsLookup.get(i)!;\n      } else {\n        firstRowPos -= defaultRowHeight;\n      }\n    }\n    return {first, firstRowPos};\n  }\n\n  private onScrolledImpl(scrollTop: number, clientHeight: number): EScrollResult {\n    const context = this.context;\n    let {first, last, firstRowPos} = range(scrollTop, clientHeight, context.defaultRowHeight, context.exceptions, context.numberOfRows);\n\n    const visible = this.visible;\n    visible.forcedFirst = first;\n    visible.forcedLast = last;\n\n    if ((first - visible.first) >= 0 && (last - visible.last) <= 0) {\n      //nothing to do\n      return EScrollResult.NONE;\n    }\n\n    let r: EScrollResult = EScrollResult.SOME;\n\n    let torecycle: HTMLElement[] | undefined;\n    let toadd: DocumentFragment | undefined;\n    let toaddBottom = false;\n\n    if (first > visible.last || last < visible.first) {\n      //no overlap, clean and draw everything\n      //console.log(`ff added: ${last - first + 1} removed: ${visibleLast - visibleFirst + 1} ${first}:${last} ${offset}`);\n      //removeRows(visibleFirst, visibleLast);\n\n      torecycle = this.removeAll(false);\n      toadd = this.addAtBottom(first, last, false);\n      toaddBottom = true;\n      r = EScrollResult.ALL;\n    } else if (first < visible.first) {\n      //some first rows missing and some last rows to much\n      //console.log(`up added: ${visibleFirst - first + 1} removed: ${visibleLast - last + 1} ${first}:${last} ${offset}`);\n      const toRemove = visible.last - (last + 1);\n      if (toRemove >= this.options.batchSize) {\n        torecycle = this.removeFromBottom(last + 1, visible.last, false);\n      } else {\n        last = visible.last;\n      }\n\n      const shift = this.shiftFirst(first, firstRowPos, visible.first - 1 - first);\n      first = shift.first;\n      firstRowPos = shift.firstRowPos;\n      toadd = this.addAtBeginning(first, visible.first - 1, false);\n      toaddBottom = false;\n      r = EScrollResult.SOME_TOP;\n    } else {\n      //console.log(`do added: ${last - visibleLast + 1} removed: ${first - visibleFirst + 1} ${first}:${last} ${offset}`);\n      //some last rows missing and some first rows to much\n      const toRemove = first - 1 - visible.first;\n      if (toRemove >= this.options.batchSize) {\n        torecycle = this.removeFromBeginning(visible.first, first - 1, false);\n      } else {\n        first = visible.first;\n        firstRowPos = this.visibleFirstRowPos;\n      }\n\n      last = this.shiftLast(last, last - visible.last + 1);\n\n      toadd = this.addAtBottom(visible.last + 1, last, false);\n      toaddBottom = true;\n      r = EScrollResult.SOME_BOTTOM;\n    }\n\n    visible.first = first;\n    visible.last = last;\n\n    this.updateOffset(firstRowPos);\n    this.manipulate(torecycle, toadd, toaddBottom);\n    return r;\n  }\n\n  private manipulate(toRecycle: HTMLElement[] | undefined, toAdd: DocumentFragment | undefined, bottom: boolean) {\n    if (toRecycle) {\n      for (const item of toRecycle) {\n        item.remove();\n        this.recycle(item);\n      }\n    }\n    if (!toAdd) {\n      return;\n    }\n    if (bottom) {\n      this.body.appendChild(toAdd);\n    } else {\n      this.body.insertBefore(toAdd, this.body.firstChild);\n    }\n  }\n}\n\nexport default ARowRenderer;\n\n\nexport function setTransform(elem: HTMLElement, x: number | string, y: number | string) {\n  const text = `translate(${x}px, ${y}px)`;\n  const anyelem = <any>elem;\n  if (anyelem.__transform__ === text) {\n    return;\n  }\n  anyelem.__transform__ = elem.style.transform = text;\n}\n","// import manually import './style.scss';\n\n/**\n * utility for custom generated CSS rules\n */\n\ninterface ICSSRule {\n  id: string;\n  selector: string;\n  style: Partial<CSSStyleDeclaration>;\n}\n\nfunction assignStyles(target: any, source: any) {\n  for (const key of Object.keys(source)) {\n    const v = <string>source[key];\n\n    if (!v.endsWith(' !important')) {\n      if (target[key] !== v) {\n        target[key] = v;\n      }\n      continue;\n    }\n\n    // handle special important case\n    const plain = v.slice(0, -' !important'.length);\n    if (target[key] === plain) {\n      continue;\n    }\n    target[key] = plain;\n    // see https://gist.github.com/youssman/745578062609e8acac9f\n    const hyphen = key.replace(/([a-zA-Z])(?=[A-Z])/g, '$1-').toLowerCase();\n    target.setProperty(hyphen, plain, 'important');\n  }\n}\n\nexport default class StyleManager {\n  private readonly rules: ICSSRule[] = [];\n  private readonly node: HTMLStyleElement;\n\n  private testVerifyTimeout = -1;\n\n  /**\n   * the parent element to append this managed style\n   * @param {HTMLElement} root\n   */\n  constructor(root: HTMLElement) {\n    this.node = root.ownerDocument!.createElement('style');\n    this.node.appendChild(root.ownerDocument!.createTextNode('')); // for webkit?\n    root.appendChild(this.node);\n  }\n\n  destroy() {\n    this.node.remove();\n  }\n\n  private verifySheet() {\n    const sheet = this.sheet;\n    if (!sheet) {\n      if (this.testVerifyTimeout >= 0) {\n        return;\n      }\n      // test till attached\n      this.testVerifyTimeout = self.setTimeout(() => {\n        this.testVerifyTimeout = -1;\n        this.verifySheet();\n      }, 20);\n      return;\n    }\n    const rules = sheet.cssRules;\n    if (rules.length === this.rules.length && this.rules.every((d, i) => (<CSSStyleRule>rules[i]).selectorText === d.selector)) {\n      // same\n      return;\n    }\n\n    console.warn('invalid sheet rules detected');\n\n    const l = rules.length;\n    for (let i = 0; i < l; ++i) {\n      sheet.deleteRule(i);\n    }\n\n    // create all\n    for (const rule of this.rules) {\n      const index = sheet.insertRule(`${rule.selector} {}`, sheet.cssRules.length);\n      const cssRule = <CSSStyleRule>sheet.cssRules[index];\n      rule.selector = cssRule.selectorText;\n      assignStyles(cssRule.style, rule.style);\n    }\n  }\n\n  private get sheet() {\n    return (<CSSStyleSheet | null>this.node.sheet);\n  }\n\n  private getSheetRule(index: number) {\n    const sheet = this.sheet;\n    return sheet ? <CSSStyleRule>sheet.cssRules[index] : null;\n  }\n\n  /**\n   * add a custom css rule\n   * @param {string} id unique id of the rule for later identification\n   * @param {string} selector the css selector\n   * @param {Partial<CSSStyleDeclaration>} style the style attributes\n   * @returns {string} the id again\n   */\n  addRule(id: string, selector: string, style: Partial<CSSStyleDeclaration>) {\n    this.verifySheet();\n    const sheet = this.sheet;\n    if (!sheet) {\n      // upon next update\n      this.rules.push({id, selector, style});\n      return;\n    }\n    const index = sheet.insertRule(`${selector} {}`, sheet.cssRules.length);\n    const rule = <CSSStyleRule>sheet.cssRules[index];\n    this.rules.push({id, selector: rule.selectorText, style});\n    assignStyles(rule.style, style);\n    return id;\n  }\n\n  /**\n   * updates or add a rule, see @addRule\n   * @param {string} id unique id of the rule for later identification\n   * @param {string} selector the css selector\n   * @param {Partial<CSSStyleDeclaration>} style the style attributes\n   * @returns {string} the id again\n   */\n  updateRule(id: string, selector: string, style: Partial<CSSStyleDeclaration>) {\n    this.verifySheet();\n    const index = this.rules.findIndex((d) => d.id === id);\n    if (index < 0) {\n      return this.addRule(id, selector, style);\n    }\n    const stored = this.rules[index];\n    stored.selector = selector;\n    stored.style = style;\n\n    const rule = this.getSheetRule(index);\n    if (rule) {\n      if (rule.selectorText.replace(/\\s/gm, '') !== selector.replace(/\\s/gm, '')) { //ignoring white space\n        rule.selectorText = selector;\n        stored.selector = rule.selectorText;\n      }\n      assignStyles(rule.style, style);\n    }\n    return id;\n  }\n\n  /**\n   * deletes the given rule by id\n   * @param {string} id the rule to delete\n   */\n  deleteRule(id: string) {\n    this.verifySheet();\n    const index = this.rules.findIndex((d) => d.id === id);\n    if (index < 0) {\n      return;\n    }\n    this.rules.splice(index, 1);\n    const sheet = this.sheet;\n    if (sheet) {\n      sheet.deleteRule(index);\n    }\n  }\n\n  /**\n   * get a list of all registered rule ids\n   * @returns {string[]}\n   */\n  protected get ruleNames() {\n    return this.rules.map((d) => d.id);\n  }\n}\n","import {addScroll} from '../internal';\nimport {cssClass, CSS_CLASS_BODY, CSS_CLASS_FOOTER, CSS_CLASS_HEADER, CSS_CLASS_SCROLLBAR_TESTER, CSS_CLASS_SHIFTED, CSS_CLASS_TBODY, CSS_CLASS_THEAD} from '../styles';\nimport StyleManager from './StyleManager';\n\nexport function setTemplate(root: HTMLElement, id: string) {\n  id = id.startsWith('#') ? id.slice(1) : id;\n  root.innerHTML = `\n  <header id=\"header-${id}\" class=\"${CSS_CLASS_HEADER} ${cssClass(`header-${id}`)}\">\n    <article class=\"${CSS_CLASS_THEAD} ${cssClass(`thead-${id}`)}\"></article>\n  </header>\n  <main id=\"body-${id}\" class=\"${CSS_CLASS_BODY} ${cssClass(`body-${id}`)}\">\n    <footer class=\"${CSS_CLASS_FOOTER}\">&nbsp;</footer>\n    <article class=\"${CSS_CLASS_TBODY} ${cssClass(`tbody-${id}`)}\"></article>\n  </main>`;\n  return root;\n}\n\n/**\n * column base interface\n */\nexport interface IColumn {\n  readonly index: number;\n  readonly id: string;\n  readonly width: number;\n  /**\n   * boolean flag whether when scrolling the column should be sticky\n   */\n  readonly frozen: boolean;\n}\n\ninterface ISelectors {\n  thead: string;\n  tbody: string;\n  tr: string;\n  th: string;\n  td: string;\n}\n\n/**\n * generates the HTML Ids used for the header and body article of a table\n * @param {string} tableId base table id\n * @param {boolean} asSelector flag whether to prepend with # for CSS selector\n * @return {ISelectors} the table ids used for header and body\n */\nexport function tableIds(tableId: string) {\n  return {\n    thead: `thead-${tableId}`,\n    tbody: `tbody-${tableId}`,\n    tr: `tr-${tableId}`,\n    th: `th-${tableId}`,\n    td: `td-${tableId}`\n  };\n}\n\nexport function tableCSSClasses(tableId: string) {\n  const ids = tableIds(tableId);\n  return {\n    thead: cssClass(ids.thead),\n    tbody: cssClass(ids.tbody),\n    tr: cssClass(ids.tr),\n    th: cssClass(ids.th),\n    td: cssClass(ids.td)\n  };\n}\n\n/**\n * utility for custom generated CSS rules with a focus on dynamically generated grid layouts\n */\nexport default class GridStyleManager extends StyleManager {\n\n  readonly id: string;\n\n  readonly ids: ISelectors;\n  readonly cssClasses: ISelectors;\n\n  constructor(root: HTMLElement, id: string) {\n    super(root);\n    this.id = id.startsWith('#') ? id.slice(1) : id;\n\n    this.ids = tableIds(this.id);\n    this.cssClasses = tableCSSClasses(this.id);\n\n    const headerScroller = <HTMLElement>root.getElementsByTagName('header')[0];\n    const bodyScroller = <HTMLElement>root.getElementsByTagName('main')[0];\n\n    // async since style needs to be added to dom first\n    self.setTimeout(() => {\n      const {width} = measureScrollbar(root);\n      this.updateRule('__scollBarFix2', `#header-${this.id} > article:last-of-type`, {\n        borderRight: `${width}px solid transparent`\n      });\n    }, 20);\n\n    let old = headerScroller.scrollLeft;\n\n    // update frozen and sync header with body\n    addScroll(bodyScroller, 'animation', (act) => {\n      const newValue = act.left;\n      if (old !== newValue) {\n        old = headerScroller.scrollLeft = newValue;\n      }\n      root.classList.toggle(CSS_CLASS_SHIFTED, act.left > 0);\n    });\n  }\n\n  /**\n   * updates the column widths and default row height for a table\n   * @param {number} defaultRowHeight\n   * @param {IColumn[]} columns\n   * @param {number} frozenShift shift frozen colums\n   * @param {string} tableId optional tableId in case of multiple tables within the same engine\n   * @param {string} unit\n   */\n  update(defaultRowHeight: number, columns: IColumn[], padding: (index: number) => number, frozenShift: number, tableId: string, unit: string = 'px') {\n    const ids = tableIds(tableId);\n    const selectors = tableCSSClasses(tableId);\n\n    const total = `${columns.reduce((a, b, i) => a + b.width + padding(i), 0)}${unit}`;\n\n    this.updateRule(`__heightsRule${selectors.tr}`, `.${selectors.tr}`, {\n      height: `${defaultRowHeight}px`,\n      width: total\n    });\n\n    this.updateRule(`__heightsRule${selectors.tbody}`, `#${ids.tbody}`, {\n      width: total\n    });\n\n    this.updateColumns(columns, padding, selectors, frozenShift, unit);\n  }\n\n  /**\n   * removes a given tableId if not needed anymore\n   * @param {string} tableId tableId to remove\n   */\n  remove(tableId: string) {\n    const selectors = tableCSSClasses(tableId);\n    this.deleteRule(`__heightsRule${selectors.tr}`);\n    this.deleteRule(`__heightsRule${selectors.tbody}`);\n\n    const prefix = `__col${selectors.td}_`;\n    const rules = this.ruleNames.reduce((a, b) => a + (b.startsWith(prefix) ? 1 : 0), 0);\n    // reset\n    for (let i = 0; i < rules; ++i) {\n      this.deleteRule(`${prefix}${i}`);\n    }\n  }\n\n  private updateColumns(columns: IColumn[], padding: (index: number) => number, cssSelectors: ISelectors, frozenShift: number, unit: string = 'px') {\n    const prefix = `__col${cssSelectors.td}_`;\n    const rules = new Set(this.ruleNames.filter((d) => d.startsWith(prefix)));\n\n    let acc = 0;\n    columns.forEach((c, i) => {\n      const th = `.${cssSelectors.th}[data-id=\"${c.id}\"]`;\n      const thStyles: Partial<CSSStyleDeclaration> = {\n        width: `${c.width}${unit}`\n      };\n      const td = `.${cssSelectors.td}[data-id=\"${c.id}\"]`;\n      const tdStyles: Partial<CSSStyleDeclaration> = {\n        transform: `translateX(${acc}${unit})`,\n        width: `${c.width}${unit}`\n      };\n\n      if (c.frozen) {\n        thStyles.left = `${acc}px`;\n\n        this.updateRule(`${prefix}${td}F`, `.${cssSelectors.td}.${CSS_CLASS_SHIFTED}[data-id=\"${c.id}\"]`, {\n          transform: `translateX(0)`,\n          left: `${acc + frozenShift}${unit}`\n        });\n        rules.delete(`${prefix}${td}F`);\n      }\n\n      this.updateRule(`${prefix}${th}`, th, thStyles);\n      rules.delete(`${prefix}${th}`);\n      this.updateRule(`${prefix}${td}`, td, tdStyles);\n      rules.delete(`${prefix}${td}`);\n      acc += c.width + padding(i);\n    });\n\n    rules.forEach((d) => this.deleteRule(d));\n  }\n}\n/**\n * measure the width and height of the scrollbars\n * based on Slick grid implementation\n * @param root\n */\nfunction measureScrollbar(root: HTMLElement) {\n  const body = root.ownerDocument!.body;\n  body.insertAdjacentHTML('beforeend', `\n    <div class=\"${CSS_CLASS_SCROLLBAR_TESTER}\"><div></div></div>\n  `);\n  const elem = <HTMLElement>body.lastElementChild!;\n\n  const width = elem.offsetWidth - elem.clientWidth;\n  const height = elem.offsetHeight - elem.clientHeight;\n\n  elem.remove();\n\n  return {width, height};\n}\n","import {ABORTED, IAbortAblePromise, IAsyncUpdate, isAbortAble, isAsyncUpdate} from '../../abortAble';\nimport {isLoadingCell} from '../../ARowRenderer';\nimport {clear, IScrollInfo} from '../../internal';\nimport {isScrollEventWaiting} from '../../internal/scroll';\nimport {IExceptionContext, range, updateFrozen} from '../../logic';\nimport {EScrollResult, IMixin, IMixinAdapter, IMixinClass} from '../../mixin';\nimport {IColumn} from '../../style';\nimport GridStyleManager from '../../style/GridStyleManager';\nimport {cssClass, CSS_CLASS_FROZEN, CSS_CLASS_LOADING, CSS_CLASS_SHIFTED, CSS_CLASS_TD, CSS_CLASS_TH} from '../../styles';\n\nconst debug = false;\n\nexport interface ICellAdapterRenderContext<T extends IColumn> extends IExceptionContext {\n  readonly column: IExceptionContext;\n  readonly columns: T[];\n}\n\n/**\n * @internal\n */\nexport abstract class ACellAdapter<T extends IColumn> {\n  /**\n   * pool of cells per column\n   * @type {Array}\n   */\n  private readonly cellPool: HTMLElement[][] = [];\n  private readonly loading = new WeakMap<HTMLElement, IAbortAblePromise<void>>();\n\n\n  readonly visibleColumns = {\n    frozen: <number[]>[], // column indices that are visible even tho they would be out of range\n    first: 0,\n    forcedFirst: 0,\n    last: -1,\n    forcedLast: -1\n  };\n  visibleFirstColumnPos = 0;\n\n  private horizontallyShifted: boolean = false;\n  private readonly columnAdapter: IMixinAdapter;\n  private readonly columnMixins: IMixin[];\n\n  private readonly columnFragment: DocumentFragment;\n\n  constructor(protected readonly header: HTMLElement, protected readonly style: GridStyleManager, private readonly tableId: string, ...mixinClasses: IMixinClass[]) {\n\n    this.columnAdapter = this.createColumnAdapter();\n    this.columnMixins = mixinClasses.map((mixinClass) => new mixinClass(this.columnAdapter));\n\n    this.columnFragment = header.ownerDocument!.createDocumentFragment();\n  }\n\n  leftShift() {\n    const ctx = this.context;\n    const frozen = this.visibleColumns.frozen.reduce((a, d) => a + ctx.columns[d].width + ctx.column.padding(d), 0);\n    return this.visibleFirstColumnPos - frozen;\n  }\n\n  protected get headerScroller() {\n    return <HTMLElement>this.header.parentElement!;\n  }\n\n  addColumnMixin(mixinClass: IMixinClass, options?: any) {\n    this.columnMixins.push(new mixinClass(this.columnAdapter, options));\n  }\n\n  private createColumnAdapter(): IMixinAdapter {\n    const r: any = {\n      visible: this.visibleColumns,\n      addAtBeginning: this.addColumnAtStart.bind(this),\n      addAtBottom: this.addColumnAtEnd.bind(this),\n      removeFromBeginning: this.removeColumnFromStart.bind(this),\n      removeFromBottom: this.removeColumnFromEnd.bind(this),\n      updateOffset: this.updateColumnOffset.bind(this),\n      scroller: this.headerScroller,\n      syncFrozen: this.syncFrozen.bind(this),\n      isScrollEventWaiting: () => isScrollEventWaiting(this.headerScroller, 'animation')\n    };\n    Object.defineProperties(r, {\n      visibleFirstRowPos: {\n        get: () => this.visibleFirstColumnPos,\n        enumerable: true\n      },\n      context: {\n        get: () => this.context.column,\n        enumerable: true\n      },\n      scrollOffset: {\n        get: () => this.lastScrollInfo ? this.lastScrollInfo.left : 0,\n        enumerable: true\n      },\n      scrollTotal: {\n        get: () => this.lastScrollInfo ? this.lastScrollInfo.width : this.headerScroller.clientWidth,\n        enumerable: true\n      }\n    });\n    return r;\n  }\n\n  init() {\n    const context = this.context;\n    this.style.update(context.defaultRowHeight - context.padding(-1), context.columns, context.column.padding, 0, this.tableId);\n\n    context.columns.forEach(() => {\n      //init pool\n      this.cellPool.push([]);\n    });\n  }\n\n  onScrolledHorizontally(scrollLeft: number, clientWidth: number, isGoingRight: boolean) {\n    const scrollResult = this.onScrolledHorizontallyImpl(scrollLeft, clientWidth);\n    for (const mixin of this.columnMixins) {\n      mixin.onScrolled(isGoingRight, scrollResult);\n    }\n    return scrollResult;\n  }\n\n  /**\n   * the current render context, upon change `recreate` the whole table\n   * @returns {ICellRenderContext}\n   */\n  protected abstract get context(): ICellAdapterRenderContext<T>;\n\n  protected abstract get body(): HTMLElement;\n\n  protected abstract get lastScrollInfo(): IScrollInfo | null;\n\n  protected abstract createHeader(document: Document, column: T): HTMLElement | IAsyncUpdate<HTMLElement>;\n\n  protected abstract updateHeader(node: HTMLElement, column: T): HTMLElement | IAsyncUpdate<HTMLElement> | void;\n\n  protected abstract createCell(document: Document, index: number, column: T): HTMLElement | IAsyncUpdate<HTMLElement>;\n\n  protected abstract updateCell(node: HTMLElement, index: number, column: T): HTMLElement | IAsyncUpdate<HTMLElement> | void;\n\n  protected abstract forEachRow(callback: (row: HTMLElement, rowIndex: number) => void): void;\n\n  private removeColumnFromStart(from: number, to: number, frozenShift: number = this.visibleColumns.frozen.length) {\n    this.forEachRow((row: HTMLElement) => {\n      this.removeCellFromStart(row, from, to, frozenShift);\n    });\n    if (debug) {\n      this.verifyRows();\n    }\n  }\n\n  private removeCellFromStart(row: HTMLElement, from: number, to: number, frozenShift: number) {\n    for (let i = from; i <= to; ++i) {\n      const node = <HTMLElement>(frozenShift === 0 ? row.firstElementChild : row.children[frozenShift]);\n      node.remove();\n      this.recycleCell(node, i);\n    }\n    if (debug) {\n      verifyRow(row, -1, this.context.columns);\n    }\n  }\n\n  private removeColumnFromEnd(from: number, to: number) {\n    this.forEachRow((row: HTMLElement) => {\n      this.removeCellFromEnd(row, from, to);\n    });\n    if (debug) {\n      this.verifyRows();\n    }\n  }\n\n  private removeCellFromEnd(row: HTMLElement, from: number, to: number) {\n    for (let i = to; i >= from; --i) {\n      const node = <HTMLElement>row.lastElementChild;\n      node.remove();\n      this.recycleCell(node, i);\n    }\n    if (debug) {\n      verifyRow(row, -1, this.context.columns);\n    }\n  }\n\n  private removeFrozenCells(row: HTMLElement, columnIndices: number[], shift: number) {\n    for (const columnIndex of columnIndices) {\n      const node = <HTMLElement>row.children[shift]!;\n      node.remove();\n      this.recycleCell(node, columnIndex);\n    }\n    if (debug) {\n      verifyRow(row, -1, this.context.columns);\n    }\n  }\n\n  private removeFrozenColumns(columnIndices: number[], shift: number) {\n    this.forEachRow((row: HTMLElement) => {\n      this.removeFrozenCells(row, columnIndices, shift);\n    });\n    if (debug) {\n      this.verifyRows();\n    }\n  }\n\n  private removeAllColumns(includingFrozen: boolean) {\n    this.forEachRow((row: HTMLElement) => {\n      this.removeAllCells(row, includingFrozen);\n    });\n    if (debug) {\n      this.verifyRows();\n    }\n  }\n\n  private removeAllCells(row: HTMLElement, includingFrozen: boolean, shift = this.visibleColumns.first) {\n    const arr = <HTMLElement[]>Array.from(row.children);\n    const frozen = this.visibleColumns.frozen;\n    clear(row);\n\n    if (includingFrozen || frozen.length === 0) {\n      for (const i of frozen) {\n        this.recycleCell(arr.shift()!, i);\n      }\n    } else {\n      // have frozen and keep them, so readd them\n      for (const _ of frozen) {\n        row.appendChild(arr.shift()!);\n      }\n    }\n    arr.forEach((item, i) => {\n      this.recycleCell(item, i + shift);\n    });\n\n    if (debug) {\n      verifyRow(row, -1, this.context.columns);\n    }\n  }\n\n  private selectProxyCell(row: number, column: number, columns: T[]): {item: HTMLElement, ready: IAbortAblePromise<void> | void} {\n    const pool = this.cellPool[column];\n    const columnObj = columns[column];\n\n    let item: HTMLElement;\n    let ready: IAbortAblePromise<void> | void;\n    const pooled = pool.pop();\n\n    const r = pooled ? this.updateCell(pooled, row, columnObj) || pooled : this.createCell(this.header.ownerDocument!, row, columnObj);\n    if (isAsyncUpdate(r)) {\n      item = r.item;\n      ready = r.ready;\n    } else {\n      item = r;\n    }\n    if (item !== pooled) {\n      item.dataset.id = columnObj.id;\n      item.classList.add(CSS_CLASS_TD, this.style.cssClasses.td, cssClass(`td-${this.tableId}`));\n    }\n    this.updateShiftedState(item, columnObj);\n    return {item, ready};\n  }\n\n  handleCellReady(item: HTMLElement, ready: IAbortAblePromise<void>, column: number = -1) {\n    item.classList.add(CSS_CLASS_LOADING);\n    const abort = ready;\n    //lazy loading\n\n    this.loading.set(item, abort);\n    abort.then((result) => {\n      this.loading.delete(item);\n      item.classList.remove(CSS_CLASS_LOADING);\n      if (result === ABORTED && column >= 0) {\n        //aborted can recycle the real one\n        this.cellPool[column].push(item);\n      }\n    });\n    return item;\n  }\n\n  private selectCell(row: number, column: number, columns: T[]): HTMLElement {\n    const {item, ready} = this.selectProxyCell(row, column, columns);\n    if (!isAbortAble(ready)) {\n      return item;\n    }\n    return this.handleCellReady(item, ready, column);\n  }\n\n  protected updateShiftedState(node: HTMLElement, col: IColumn) {\n    node.classList.toggle(CSS_CLASS_SHIFTED, col.frozen && this.horizontallyShifted);\n  }\n\n  recycleCell(item: HTMLElement, column: number = -1) {\n    // check if the dom element is still being manipulated\n    if (this.loading.has(item)) {\n      const abort = this.loading.get(item)!;\n      abort.abort();\n    } else if (!isLoadingCell(item) && column >= 0) {\n      this.cellPool[column].push(item);\n    }\n  }\n\n  private addColumnAtStart(from: number, to: number, frozenShift: number = this.visibleColumns.frozen.length) {\n    const {columns} = this.context;\n    this.forEachRow((row: HTMLElement, rowIndex: number) => {\n      this.addCellAtStart(row, rowIndex, from, to, frozenShift, columns);\n    });\n    if (debug) {\n      this.verifyRows();\n    }\n  }\n\n  private addCellAtStart(row: HTMLElement, rowIndex: number, from: number, to: number, frozenShift: number, columns: T[]) {\n    if (debug) {\n      verifyRow(row, rowIndex, this.context.columns);\n    }\n    for (let i = to; i >= from; --i) {\n      const cell = this.selectCell(rowIndex, i, columns);\n      row.insertBefore(cell, frozenShift > 0 ? row.children[frozenShift] : row.firstChild);\n    }\n    if (debug) {\n      verifyRow(row, rowIndex, this.context.columns);\n    }\n  }\n\n  private insertFrozenCells(row: HTMLElement, rowIndex: number, columnIndices: number[], shift: number, columns: T[]) {\n    const before = row.children[shift];\n    for (const i of columnIndices) {\n      const cell = this.selectCell(rowIndex, i, columns);\n      if (before) {\n        row.insertBefore(cell, before);\n      } else {\n        row.appendChild(cell);\n      }\n    }\n  }\n\n  private insertFrozenColumns(columnIndices: number[], shift: number) {\n    const {columns} = this.context;\n    this.forEachRow((row: HTMLElement, rowIndex: number) => {\n      this.insertFrozenCells(row, rowIndex, columnIndices, shift, columns);\n    });\n  }\n\n  private addColumnAtEnd(from: number, to: number) {\n    const {columns} = this.context;\n    this.forEachRow((row: HTMLElement, rowIndex: number) => {\n      this.addCellAtEnd(row, rowIndex, from, to, columns);\n    });\n    if (debug) {\n      this.verifyRows();\n    }\n  }\n\n  private verifyRows() {\n    const {columns} = this.context;\n    this.forEachRow((row, rowIndex) => verifyRow(row, rowIndex, columns));\n  }\n\n  private addCellAtEnd(row: HTMLElement, rowIndex: number, from: number, to: number, columns: T[]) {\n    for (let i = from; i <= to; ++i) {\n      const cell = this.selectCell(rowIndex, i, columns);\n      row.appendChild(cell);\n    }\n    if (debug) {\n      verifyRow(row, rowIndex, this.context.columns);\n    }\n  }\n\n  updateHeaders() {\n    const {columns} = this.context;\n    Array.from(this.header.children).forEach((node: Element, i) => {\n      const base = <HTMLElement>node;\n      const col = columns[i];\n      const r = this.updateHeader(base, col);\n      let n: HTMLElement;\n      if (isAsyncUpdate(r)) {\n        n = this.handleCellReady(r.item, r.ready, -1);\n      } else {\n        n = r || base;\n      }\n      if (n === base) {\n        return;\n      }\n      n.dataset.id = col.id;\n      n.classList.add(CSS_CLASS_TH, this.style.cssClasses.th, cssClass(`th-${this.tableId}`));\n      this.header.replaceChild(base, n);\n    });\n  }\n\n  recreate(left: number, width: number) {\n    const context = this.context;\n\n    this.style.update(context.defaultRowHeight - context.padding(-1), context.columns, context.column.padding, -this.leftShift(), this.tableId);\n\n\n    this.clearPool();\n    // init pool\n    for (let i = this.cellPool.length; i < context.columns.length; ++i) {\n      this.cellPool.push([]);\n    }\n\n    //create all header columns\n    {\n      const fragment = this.columnFragment;\n      const document = fragment.ownerDocument!;\n\n      // create lookup cache to reuse headers\n      const ids = new Map<string, HTMLElement>();\n      while (this.header.lastChild) {\n        const c = <HTMLElement>this.header.lastChild;\n        this.header.removeChild(c);\n        ids.set(c.dataset.id!, c);\n      }\n\n      context.columns.forEach((col) => {\n        const existing = ids.get(col.id);\n        const r = existing ? this.updateHeader(existing, col) || existing : this.createHeader(document, col);\n        let n: HTMLElement;\n        if (isAsyncUpdate(r)) {\n          n = this.handleCellReady(r.item, r.ready, -1);\n        } else {\n          n = r;\n        }\n        if (n !== existing) {\n          n.dataset.id = col.id;\n          n.classList.add(CSS_CLASS_TH, this.style.cssClasses.th, cssClass(`th-${this.tableId}`));\n        }\n        fragment.appendChild(n);\n      });\n      this.header.appendChild(fragment);\n    }\n\n    const {first, last, firstRowPos} = range(left, width, context.column.defaultRowHeight, context.column.exceptions, context.column.numberOfRows);\n\n    this.visibleColumns.first = this.visibleColumns.forcedFirst = first;\n    this.visibleColumns.last = this.visibleColumns.forcedLast = last;\n    if (context.columns.some((c) => c.frozen)) {\n      const {target} = updateFrozen([], context.columns, first);\n      this.visibleColumns.frozen = target;\n    } else {\n      this.visibleColumns.frozen = [];\n    }\n    this.updateColumnOffset(firstRowPos);\n  }\n\n  clearPool() {\n    this.cellPool.forEach((p) => p.splice(0, p.length));\n  }\n\n  protected updateColumnOffset(firstColumnPos: number) {\n    const changed = firstColumnPos !== this.visibleFirstColumnPos;\n    this.visibleFirstColumnPos = firstColumnPos;\n    if (changed) {\n      const context = this.context;\n      this.style.update(context.defaultRowHeight - context.padding(-1), context.columns, context.column.padding, -this.leftShift(), this.tableId);\n    }\n  }\n\n  createRow(node: HTMLElement, rowIndex: number): void {\n    const {columns} = this.context;\n    const visible = this.visibleColumns;\n\n    if (visible.frozen.length > 0) {\n      for (const i of visible.frozen) {\n        const cell = this.selectCell(rowIndex, i, columns);\n        node.appendChild(cell);\n      }\n    }\n    for (let i = visible.first; i <= visible.last; ++i) {\n      const cell = this.selectCell(rowIndex, i, columns);\n      node.appendChild(cell);\n    }\n  }\n\n  updateRow(node: HTMLElement, rowIndex: number): void {\n    const {columns} = this.context;\n    const visible = this.visibleColumns;\n\n    //columns may not match anymore if it is a pooled item a long time ago\n\n    switch (node.childElementCount) {\n      case 0:\n        if (visible.frozen.length > 0) {\n          this.insertFrozenCells(node, rowIndex, visible.frozen, 0, columns);\n        }\n        this.addCellAtEnd(node, rowIndex, visible.first, visible.last, columns);\n        break;\n      case 1:\n        const old = <HTMLElement>node.firstElementChild;\n        const id = old.dataset.id!;\n        const columnIndex = columns.findIndex((c) => c.id === id);\n        node.removeChild(old);\n        if (columnIndex >= 0) {\n          this.recycleCell(old, columnIndex);\n        }\n\n        if (visible.frozen.length > 0) {\n          this.insertFrozenCells(node, rowIndex, visible.frozen, 0, columns);\n        }\n        this.addCellAtEnd(node, rowIndex, visible.first, visible.last, columns);\n        break;\n      default:\n        this.mergeColumns(node, rowIndex);\n        break;\n    }\n  }\n\n  private mergeColumns(node: HTMLElement, rowIndex: number) {\n    const {columns} = this.context;\n    const visible = this.visibleColumns;\n    const ids = new Map<string, HTMLElement>();\n\n    while (node.lastChild) {\n      const c = <HTMLElement>node.lastChild;\n      node.removeChild(c);\n      ids.set(c.dataset.id!, c);\n    }\n\n    const updateImpl = (i: number) => {\n      const col = columns[i];\n      const existing = ids.get(col.id);\n      if (!existing) {\n        const cell = this.selectCell(rowIndex, i, columns);\n        node.appendChild(cell);\n        return;\n      }\n      ids.delete(col.id);\n      const r = this.updateCell(existing, rowIndex, col) || existing;\n      let cell: HTMLElement;\n      if (isAsyncUpdate(r)) {\n        cell = this.handleCellReady(r.item, r.ready, i);\n      } else {\n        cell = r;\n      }\n      if (cell && cell !== existing) {\n        cell.dataset.id = col.id;\n        cell.classList.add(CSS_CLASS_TD, this.style.cssClasses.td, cssClass(`td-${this.tableId}`));\n      }\n      this.updateShiftedState(cell, col);\n      node.appendChild(cell);\n    };\n\n    for (const frozen of visible.frozen) {\n      updateImpl(frozen);\n    }\n    for (let i = visible.first; i <= visible.last; ++i) {\n      updateImpl(i);\n    }\n\n    if (ids.size === 0) {\n      return;\n    }\n\n    // recycle\n    const byId = new Map(columns.map((d, i) => <[string, number]>[d.id, i]));\n    ids.forEach((node, key) => {\n      const index = byId.get(key);\n      if (index != null && index >= 0) {\n        this.recycleCell(node, index);\n      }\n    });\n  }\n\n  private updateShiftedStates() {\n    if (!this.context.columns.some((d) => d.frozen)) {\n      return;\n    }\n    const shifted = this.horizontallyShifted;\n    const clazz = CSS_CLASS_SHIFTED;\n    if (shifted) {\n      const headers = Array.from(this.header.querySelectorAll(`.${CSS_CLASS_FROZEN}:not(.${clazz})`));\n      const bodies = Array.from(this.body.querySelectorAll(`.${CSS_CLASS_FROZEN}:not(.${clazz})`));\n      for (const item of headers) {\n        item.classList.add(clazz);\n      }\n      for (const item of bodies) {\n        item.classList.add(clazz);\n      }\n    } else {\n      const headers = Array.from(this.header.querySelectorAll(`.${CSS_CLASS_FROZEN}.${clazz}`));\n      const bodies = Array.from(this.body.querySelectorAll(`.${CSS_CLASS_FROZEN}.${clazz}`));\n      for (const item of headers) {\n        item.classList.remove(clazz);\n      }\n      for (const item of bodies) {\n        item.classList.remove(clazz);\n      }\n    }\n  }\n\n  private syncFrozen(first: number) {\n    const {columns} = this.context;\n    const visible = this.visibleColumns;\n\n    if (!columns.some((d) => d.frozen)) {\n      return 0;\n    }\n    if (first === 0) {\n      if (visible.frozen.length > 0) {\n        this.removeFrozenColumns(visible.frozen, 0);\n        visible.frozen = [];\n      }\n      return 0;\n    }\n    const old = visible.frozen.length;\n    const {target, added, removed} = updateFrozen(visible.frozen, columns, first);\n    if (removed.length > 0) {\n      this.removeFrozenColumns(removed, old - removed.length);\n    }\n    if (added.length > 0) {\n      this.insertFrozenColumns(added, old - removed.length);\n    }\n    visible.frozen = target;\n    return target.length;\n  }\n\n  private onScrolledHorizontallyImpl(scrollLeft: number, clientWidth: number): EScrollResult {\n    const shiftingChanged = this.horizontallyShifted !== scrollLeft > 0;\n    this.horizontallyShifted = scrollLeft > 0;\n\n    const {column} = this.context;\n    const {first, last, firstRowPos} = range(scrollLeft, clientWidth, column.defaultRowHeight, column.exceptions, column.numberOfRows);\n\n    const visible = this.visibleColumns;\n    visible.forcedFirst = first;\n    visible.forcedLast = last;\n\n    if ((first - visible.first) >= 0 && (last - visible.last) <= 0) {\n      //nothing to do\n      if (shiftingChanged) {\n        this.updateShiftedStates();\n      }\n      return EScrollResult.NONE;\n    }\n\n    let r: EScrollResult = EScrollResult.SOME;\n\n    const frozenShift = this.syncFrozen(first);\n\n    if (first > visible.last || last < visible.first) {\n      //no overlap, clean and draw everything\n      //console.log(`ff added: ${last - first + 1} removed: ${visibleLast - visibleFirst + 1} ${first}:${last} ${offset}`);\n      //removeRows(visibleFirst, visibleLast);\n      this.removeAllColumns(false);\n      this.addColumnAtEnd(first, last);\n      r = EScrollResult.ALL;\n    } else if (first < visible.first) {\n      //some first rows missing and some last rows to much\n      //console.log(`up added: ${visibleFirst - first + 1} removed: ${visibleLast - last + 1} ${first}:${last} ${offset}`);\n      this.removeColumnFromEnd(last + 1, visible.last);\n      this.updateShiftedStates();\n      this.addColumnAtStart(first, visible.first - 1, frozenShift);\n      r = EScrollResult.SOME_TOP;\n    } else {\n      //console.log(`do added: ${last - visibleLast + 1} removed: ${first - visibleFirst + 1} ${first}:${last} ${offset}`);\n      //some last rows missing and some first rows to much\n      this.removeColumnFromStart(visible.first, first - 1, frozenShift);\n      this.updateShiftedStates();\n      this.addColumnAtEnd(visible.last + 1, last);\n      r = EScrollResult.SOME_BOTTOM;\n    }\n\n    visible.first = first;\n    visible.last = last;\n\n    this.updateColumnOffset(firstRowPos);\n\n    return r;\n  }\n\n}\n\n/**\n * @internal\n */\nexport default ACellAdapter;\n\nfunction verifyRow(row: HTMLElement, index: number, columns: IColumn[]) {\n  const cols = <HTMLElement[]>Array.from(row.children);\n  //sort incrementally\n  if (cols.length <= 1) {\n    return;\n  }\n  const colObjs = cols.map((c) => columns.find((d) => d.id === c.dataset.id)!);\n  console.assert(colObjs.every((d) => Boolean(d)), 'all columns must exist', index);\n  console.assert(colObjs.every((d, i) => i === 0 || d.index >= colObjs[i - 1]!.index), 'all columns in ascending order', index);\n  console.assert((new Set(colObjs)).size === colObjs.length, 'unique columns', colObjs);\n}\n","import {IAbortAblePromise, IAsyncUpdate} from './abortAble';\nimport {IAnimationContext} from './animation';\nimport {ARowRenderer, IRowRendererOptions} from './ARowRenderer';\nimport {addScroll} from './internal';\nimport {EScrollResult, IMixinClass} from './mixin';\nimport {GridStyleManager, IColumn, setTemplate} from './style';\nimport {cssClass} from './styles';\nimport ACellAdapter, {ICellAdapterRenderContext} from './table/internal/ACellAdapter';\n\nexport {isLoadingCell} from './ARowRenderer';\nexport declare type ICellRenderContext<T extends IColumn> = ICellAdapterRenderContext<T>;\n\n/**\n * a @see ARowRenderer which manages multiple columns per row\n */\nexport abstract class ACellRenderer<T extends IColumn> extends ARowRenderer {\n\n  protected readonly style: GridStyleManager;\n\n  private readonly cell: ACellAdapter<T>;\n\n  constructor(protected readonly root: HTMLElement, htmlId: string, options: Partial<IRowRendererOptions> = {}) {\n    super(<HTMLElement>setTemplate(root, htmlId).querySelector('main > article'), options);\n    root.classList.add(cssClass(), 'lineup-engine');\n\n    this.style = new GridStyleManager(this.root, htmlId);\n\n    const that = this;\n\n    class LocalCell extends ACellAdapter<T> {\n      protected get context(): ICellAdapterRenderContext<T> {\n        return that.context;\n      }\n\n      protected get body() {\n        return that.body;\n      }\n\n      protected get lastScrollInfo() {\n        return that.lastScrollInfo;\n      }\n\n      protected createHeader(document: Document, column: T) {\n        return that.createHeader(document, column);\n      }\n\n      protected updateHeader(node: HTMLElement, column: T) {\n        return that.updateHeader(node, column);\n      }\n\n      protected createCell(document: Document, index: number, column: T) {\n        return that.createCell(document, index, column);\n      }\n\n      protected updateCell(node: HTMLElement, index: number, column: T) {\n        return that.updateCell(node, index, column);\n      }\n\n      protected updateColumnOffset(firstColumnPos: number) {\n        super.updateColumnOffset(firstColumnPos);\n        that.updateOffset(that.visibleFirstRowPos);\n      }\n\n      protected forEachRow(callback: (row: HTMLElement, rowIndex: number) => void) {\n        return that.forEachRow(callback);\n      }\n    }\n\n    this.cell = new LocalCell(this.header, this.style, this.style.id, ... (options.mixins || []));\n  }\n\n  protected get idPrefix() {\n    return this.style.id;\n  }\n\n  /**\n   * get the header root element\n   * @returns {HTMLElement}\n   */\n  protected get header() {\n    return <HTMLElement>this.root.querySelector('header > article');\n  }\n\n  /**\n   * get the header scrolling element, i.e its parent\n   * @returns {HTMLElement}\n   */\n  protected get headerScroller() {\n    return <HTMLElement>this.root.getElementsByTagName('header')[0];\n  }\n\n  protected get visibleColumns() {\n    return this.cell.visibleColumns;\n  }\n\n  protected get visibleFirstColumnPos() {\n    return this.cell.visibleFirstColumnPos;\n  }\n\n  /**\n   * add another column mixin\n   * @param {IMixinClass} mixinClass mixing class to instantiate\n   * @param options optional options\n   */\n  protected addColumnMixin(mixinClass: IMixinClass, options?: any) {\n    this.cell.addColumnMixin(mixinClass, options);\n  }\n\n  /**\n   * initialized this renderer\n   */\n  protected init() {\n\n    this.cell.init();\n\n    const scroller = <HTMLElement>this.body.parentElement;\n\n    let old = addScroll(scroller, this.options.async, (act) => {\n      if (Math.abs(old.left - act.left) < this.options.minScrollDelta && Math.abs(old.width - act.width) < this.options.minScrollDelta) {\n        return;\n      }\n      const isGoingRight = act.left > old.left;\n      old = act;\n      this.onScrolledHorizontally(act.left, act.width, isGoingRight);\n    });\n\n    super.init();\n  }\n\n  destroy() {\n    super.destroy();\n    this.root.remove();\n  }\n\n  /**\n   * will be called when scrolled horizontally\n   * @param {number} scrollLeft\n   * @param {number} clientWidth\n   * @param {boolean} isGoingRight\n   * @returns {EScrollResult}\n   */\n  protected onScrolledHorizontally(scrollLeft: number, clientWidth: number, isGoingRight: boolean): EScrollResult {\n    return this.cell.onScrolledHorizontally(scrollLeft, clientWidth, isGoingRight);\n  }\n\n  /**\n   * the current render context, upon change `recreate` the whole table\n   * @returns {ICellRenderContext}\n   */\n  protected abstract get context(): ICellRenderContext<T>;\n\n  /**\n   * create a new header node for the given column\n   * @param {Document} document document to create nodes of\n   * @param {T} column the column to create the header for\n   * @returns {HTMLElement} the node representing the header\n   */\n  protected abstract createHeader(document: Document, column: T): HTMLElement | IAsyncUpdate<HTMLElement>;\n\n  /**\n   * updates the given header node with the given column\n   * @param {HTMLElement} node node to update\n   * @param {T} column the column to represents\n   * @returns {HTMLElement | void} an optional new replacement node for the header\n   */\n  protected abstract updateHeader(node: HTMLElement, column: T): HTMLElement | IAsyncUpdate<HTMLElement> | void;\n\n  /**\n   * create a new cell node fo the given row index and column\n   * @param {Document} document document the create nodes of\n   * @param {number} index the current row index\n   * @param {T} column the current column\n   * @returns {HTMLElement} the node representing the cell\n   */\n  protected abstract createCell(document: Document, index: number, column: T): HTMLElement | IAsyncUpdate<HTMLElement>;\n\n  /**\n   * updates the given cell node with the given row index and column\n   * @param {HTMLElement} node node to update\n   * @param {number} index row index to use\n   * @param {T} column column to use\n   * @returns {HTMLElement | void} an optional new replacement node for the header\n   */\n  protected abstract updateCell(node: HTMLElement, index: number, column: T): HTMLElement | IAsyncUpdate<HTMLElement> | void;\n\n  /**\n   * trigger to update all headers\n   */\n  protected updateHeaders() {\n    this.cell.updateHeaders();\n  }\n\n  protected handleCellReady(item: HTMLElement, ready: IAbortAblePromise<void>, column: number = -1) {\n    return this.cell.handleCellReady(item, ready, column);\n  }\n\n  protected recycleCell(item: HTMLElement, column: number = -1) {\n    this.cell.recycleCell(item, column);\n  }\n\n  /**\n   * triggers to update all column widths\n   */\n  protected updateColumnWidths() {\n    const context = this.context;\n    this.style.update(context.defaultRowHeight - context.padding(-1), context.columns, context.column.padding, -this.cell.leftShift(), this.idPrefix);\n  }\n\n  protected updateSizer(firstRowPos: number) {\n    const ctx = this.context;\n    const totalHeight = ctx.totalHeight;\n    const totalWidth = ctx.column.totalHeight;\n\n    this.updateShifts(firstRowPos, this.cell.leftShift());\n    this.bodySizer.style.transform = `translate(${Math.max(0, totalWidth - 1).toFixed(0)}px, ${Math.max(0, totalHeight - 1).toFixed(0)}px)`;\n  }\n\n  protected updateShifts(top: number, left: number) {\n    this.body.style.transform = `translate(${left.toFixed(0)}px, ${top.toFixed(0)}px)`;\n  }\n\n  /**\n   * triggers to recreate the whole table\n   * @param {IAnimationContext} ctx optional animation context\n   */\n  protected recreate(ctx?: IAnimationContext) {\n    const scroller = this.bodyScroller;\n    const oldLeft = scroller.scrollLeft;\n    this.cell.recreate(oldLeft, scroller.clientWidth);\n\n    super.recreate(ctx);\n    // restore left\n    scroller.scrollLeft = oldLeft;\n  }\n\n  protected clearPool() {\n    super.clearPool();\n    this.cell.clearPool();\n  }\n\n  protected createRow(node: HTMLElement, rowIndex: number): void {\n    this.cell.createRow(node, rowIndex);\n  }\n\n  protected updateRow(node: HTMLElement, rowIndex: number): void {\n    this.cell.updateRow(node, rowIndex);\n  }\n}\n\nexport default ACellRenderer;\n","import {range} from '../logic';\nimport {EScrollResult, IMixin, IMixinAdapter} from './IMixin';\n\nexport interface IPrefetchRendererOptions {\n  /**\n   * number of rows to prefetch\n   * @default 20\n   */\n  readonly prefetchRows: number;\n  /**\n   * number of rows extra before cleaning them up\n   * @default 10\n   */\n  readonly cleanUpRows: number;\n  /**\n   * delay to trigger a prefetch or clean up\n   * @default 200ms\n   */\n  readonly delay: number;\n}\n\n/**\n * mixin that prefetches rows depending on the scrolling direction for faster rendering\n */\nexport default class PrefetchMixin implements IMixin {\n  private prefetchTimeout: number = -1;\n  private cleanupTimeout: number = -1;\n\n  private readonly options: IPrefetchRendererOptions = {\n    prefetchRows: 20,\n    cleanUpRows: 10,\n    delay: 200\n  };\n\n  constructor(private readonly adapter: IMixinAdapter, options?: Partial<IPrefetchRendererOptions>) {\n    Object.assign(this.options, options);\n    return this;\n  }\n\n\n  private prefetchDown() {\n    this.prefetchTimeout = -1;\n    if (this.adapter.isScrollEventWaiting()) {\n      return;\n    }\n    const context = this.adapter.context;\n    const nextLast = Math.min(this.adapter.visible.forcedLast + this.options.prefetchRows, context.numberOfRows - 1);\n    // add some rows in advance\n    if (this.adapter.visible.last === nextLast && this.adapter.visible.last >= (this.adapter.visible.forcedLast + this.options.prefetchRows)) {\n      return;\n    }\n\n    this.adapter.addAtBottom(this.adapter.visible.last + 1, nextLast);\n    //console.log('prefetch', visibleFirst, visibleLast + 1, '=>', nextLast, ranking.children.length);\n    this.adapter.visible.last = nextLast;\n  }\n\n  private prefetchUp() {\n    this.prefetchTimeout = -1;\n    if (this.adapter.isScrollEventWaiting() || this.adapter.visible.first <= (this.adapter.visible.forcedFirst - this.options.prefetchRows!)) {\n      return;\n    }\n    const context = this.adapter.context;\n    const fakeOffset = Math.max(this.adapter.scrollOffset - this.options.prefetchRows! * context.defaultRowHeight, 0);\n    const height = this.adapter.scrollTotal;\n    const {first, firstRowPos} = range(fakeOffset, height, context.defaultRowHeight, context.exceptions, context.numberOfRows);\n\n    if (first === this.adapter.visible.first) {\n      return;\n    }\n\n    const frozenShift = this.adapter.syncFrozen ? this.adapter.syncFrozen(first) : 0;\n\n    this.adapter.addAtBeginning(first, this.adapter.visible.first - 1, frozenShift);\n    //console.log('prefetch up ', visibleFirst, '=>', first, visibleLast, ranking.children.length);\n    this.adapter.visible.first = first;\n\n    this.adapter.updateOffset(firstRowPos);\n  }\n\n  private triggerPrefetch(isGoingDown: boolean) {\n    if (this.prefetchTimeout >= 0) {\n      clearTimeout(this.prefetchTimeout);\n    }\n\n    const prefetchDownPossible = this.adapter.visible.last < (this.adapter.visible.forcedLast + this.options.prefetchRows);\n    const prefetchUpPossible = this.adapter.visible.first > (this.adapter.visible.forcedFirst - this.options.prefetchRows);\n\n    const isLast = this.adapter.visible.last === this.adapter.context.numberOfRows;\n    const isFirst = this.adapter.visible.first === 0;\n\n    if ((isGoingDown && !prefetchDownPossible && !isLast) || (!isGoingDown && !prefetchUpPossible && !isFirst)) {\n      return;\n    }\n\n    // go down if we are already at the top, too\n    const op = (isGoingDown || isFirst) ? this.prefetchDown.bind(this) : this.prefetchUp.bind(this);\n\n    this.prefetchTimeout = self.setTimeout(op, this.options.delay);\n  }\n\n  private cleanUpTop(first: number) {\n    this.cleanupTimeout = -1;\n    if (this.adapter.isScrollEventWaiting()) {\n      return;\n    }\n    const newFirst = Math.max(0, first - this.options.cleanUpRows);\n\n    if (newFirst <= this.adapter.visible.first) {\n      return;\n    }\n\n    //console.log('cleanup top');\n    const frozenShift = this.adapter.syncFrozen ? this.adapter.syncFrozen(newFirst) : 0;\n\n    this.adapter.removeFromBeginning(this.adapter.visible.first, newFirst - 1, frozenShift);\n    const context = this.adapter.context;\n    //console.log('cleanup up ', visibleFirst, '=>', newFirst, visibleLast, ranking.children.length);\n    let shift = (newFirst - this.adapter.visible.first) * context.defaultRowHeight;\n    if (context.exceptions.length > 0) {\n      for (let i = this.adapter.visible.first; i < newFirst; ++i) {\n        if (context.exceptionsLookup.has(i)) {\n          shift += context.exceptionsLookup.get(i)! - context.defaultRowHeight;\n        }\n      }\n    }\n    this.adapter.visible.first = newFirst;\n    this.adapter.updateOffset(this.adapter.visibleFirstRowPos + shift);\n\n    this.prefetchDown();\n  }\n\n  private cleanUpBottom(last: number) {\n    this.cleanupTimeout = -1;\n    const newLast = last + this.options.cleanUpRows;\n    if (this.adapter.visible.last <= newLast) {\n      return;\n    }\n    //console.log('cleanup bottom');\n    this.adapter.removeFromBottom(newLast + 1, this.adapter.visible.last);\n    this.adapter.visible.last = newLast;\n\n    this.prefetchUp();\n  }\n\n  private triggerCleanUp(first: number, last: number, isGoingDown: boolean) {\n    if (this.cleanupTimeout >= 0) {\n      clearTimeout(this.cleanupTimeout);\n    }\n    if ((isGoingDown && (first - this.options.cleanUpRows) <= this.adapter.visible.first) || (!isGoingDown && this.adapter.visible.last <= (last + this.options.cleanUpRows))) {\n      return;\n    }\n\n    this.cleanupTimeout = self.setTimeout(isGoingDown ? this.cleanUpTop.bind(this) : this.cleanUpBottom.bind(this), this.options.delay, isGoingDown ? first : last);\n  }\n\n  onScrolled(isGoingDown: boolean, scrollResult: EScrollResult) {\n    if (this.adapter.isScrollEventWaiting()) {\n      return;\n    }\n    if (scrollResult !== EScrollResult.ALL && this.options.cleanUpRows > 0) {\n      this.triggerCleanUp(this.adapter.visible.forcedFirst, this.adapter.visible.forcedLast, isGoingDown);\n    }\n    if (scrollResult !== EScrollResult.NONE && this.options.prefetchRows > 0) {\n      this.triggerPrefetch(isGoingDown);\n    }\n  }\n}\n","import {IAbortAblePromise, IAsyncUpdate} from '../abortAble';\nimport {IAnimationContext} from '../animation';\nimport ARowRenderer, {IRowRendererOptions, setTransform} from '../ARowRenderer';\nimport {EScrollResult, IMixinClass} from '../mixin';\nimport {IColumn} from '../style';\nimport GridStyleManager from '../style/GridStyleManager';\nimport {CSS_CLASS_HIDDEN, CSS_CLASS_LOADING} from '../styles';\nimport ACellAdapter, {ICellAdapterRenderContext} from './internal/ACellAdapter';\nimport {ITableSection} from './MultiTableRowRenderer';\n\nexport declare type ITableCellRenderContext<T extends IColumn> = ICellAdapterRenderContext<T>;\n\n/**\n * base class for a cell renderer as table section\n */\nexport abstract class ACellTableSection<T extends IColumn> extends ARowRenderer implements ITableSection {\n  private readonly cell: ACellAdapter<T>;\n\n  constructor(public readonly header: HTMLElement, public readonly body: HTMLElement, protected readonly tableId: string, protected readonly style: GridStyleManager, options: Partial<IRowRendererOptions> = {}) {\n    super(body, options);\n\n    const that = this;\n\n    class LocalCell extends ACellAdapter<T> {\n      protected get context(): ICellAdapterRenderContext<T> {\n        return that.context;\n      }\n\n      protected get body() {\n        return that.body;\n      }\n\n      protected get lastScrollInfo() {\n        return that.lastScrollInfo;\n      }\n\n      protected createHeader(document: Document, column: T) {\n        return that.createHeader(document, column);\n      }\n\n      protected updateHeader(node: HTMLElement, column: T) {\n        return that.updateHeader(node, column);\n      }\n\n      protected createCell(document: Document, index: number, column: T) {\n        return that.createCell(document, index, column);\n      }\n\n      protected updateColumnOffset(firstColumnPos: number) {\n        super.updateColumnOffset(firstColumnPos);\n        that.updateOffset(that.visibleFirstRowPos);\n      }\n\n      protected updateCell(node: HTMLElement, index: number, column: T) {\n        return that.updateCell(node, index, column);\n      }\n\n      protected forEachRow(callback: (row: HTMLElement, rowIndex: number) => void) {\n        return that.forEachRow(callback);\n      }\n    }\n\n    this.cell = new LocalCell(this.header, this.style, tableId, ...(options.mixins || []));\n  }\n\n  protected addColumnMixin(mixinClass: IMixinClass, options?: any) {\n    this.cell.addColumnMixin(mixinClass, options);\n  }\n\n  protected get idPrefix() {\n    return this.tableId;\n  }\n\n  abstract get id(): string;\n\n  get width() {\n    return this.context.column.totalHeight;\n  }\n\n  protected get visibleColumns() {\n    return this.cell.visibleColumns;\n  }\n\n  protected get visibleFirstColumnPos() {\n    return this.cell.visibleFirstColumnPos;\n  }\n\n  get height() {\n    return this.context.totalHeight;\n  }\n\n  get hidden() {\n    return this.header.classList.contains(CSS_CLASS_LOADING);\n  }\n\n  protected updateSizer(firstRowPos: number) {\n    this.updateShifts(firstRowPos, this.cell.leftShift());\n    // no sizer update since centrally managed\n  }\n\n  protected updateShifts(top: number, _left: number) {\n    setTransform(this.body, 0 /*left.toFixed(0)*/, top.toFixed(0));\n  }\n\n  set hidden(value: boolean) {\n    const old = this.hidden;\n    if (old === value) {\n      return;\n    }\n    this.header.classList.toggle(CSS_CLASS_LOADING, value);\n    this.body.classList.toggle(CSS_CLASS_LOADING, value);\n    this.header.classList.toggle(CSS_CLASS_HIDDEN, value);\n    this.body.classList.toggle(CSS_CLASS_HIDDEN, value);\n    this.onVisibilityChanged(!value);\n  }\n\n  /**\n   * hook when the visibility changes\n   * @param {boolean} _visible current visibility\n   */\n  protected onVisibilityChanged(_visible: boolean) {\n    // hook\n  }\n\n  hide() {\n    this.hidden = true;\n  }\n\n  show(scrollLeft: number, clientWidth: number, isGoingRight: boolean) {\n    const wasHidden = this.hidden;\n    this.hidden = false;\n    if (wasHidden) { // full update\n      this.revalidate();\n    } else {\n      this.onScrolledHorizontally(scrollLeft, clientWidth, isGoingRight);\n    }\n  }\n\n  init() {\n    this.hide(); // hide by default\n    this.cell.init();\n    super.init();\n  }\n\n  destroy() {\n    super.destroy();\n    this.header.remove();\n    this.style.remove(this.tableId);\n  }\n\n  protected onScrolledVertically(scrollTop: number, clientHeight: number, isGoingDown: boolean): EScrollResult {\n    if (this.hidden) {\n      return EScrollResult.NONE;\n    }\n    return super.onScrolledVertically(scrollTop, clientHeight, isGoingDown);\n  }\n\n  protected onScrolledHorizontally(scrollLeft: number, clientWidth: number, isGoingRight: boolean) {\n    const r = this.cell.onScrolledHorizontally(scrollLeft, clientWidth, isGoingRight);\n    this.updateSizer(this.visibleFirstRowPos);\n    return r;\n  }\n\n  /**\n   * the current render context, upon change `recreate` the whole table\n   * @returns {ITableCellRenderContext}\n   */\n  protected abstract get context(): ITableCellRenderContext<T>;\n\n  /**\n   * create a new header node for the given column\n   * @param {Document} document document to create nodes of\n   * @param {T} column the column to create the header for\n   * @returns {HTMLElement} the node representing the header\n   */\n  protected abstract createHeader(document: Document, column: T): HTMLElement | IAsyncUpdate<HTMLElement>;\n\n  /**\n   * updates the given header node with the given column\n   * @param {HTMLElement} node node to update\n   * @param {T} column the column to represents\n   * @returns {HTMLElement | void} an optional new replacement node for the header\n   */\n  protected abstract updateHeader(node: HTMLElement, column: T): HTMLElement | IAsyncUpdate<HTMLElement> | void;\n\n  /**\n   * create a new cell node fo the given row index and column\n   * @param {Document} document document the create nodes of\n   * @param {number} index the current row index\n   * @param {T} column the current column\n   * @returns {HTMLElement} the node representing the cell\n   */\n  protected abstract createCell(document: Document, index: number, column: T): HTMLElement | IAsyncUpdate<HTMLElement>;\n\n  /**\n   * updates the given cell node with the given row index and column\n   * @param {HTMLElement} node node to update\n   * @param {number} index row index to use\n   * @param {T} column column to use\n   * @returns {HTMLElement | void} an optional new replacement node for the header\n   */\n  protected abstract updateCell(node: HTMLElement, index: number, column: T): HTMLElement | IAsyncUpdate<HTMLElement> | void;\n\n\n  /**\n   * triggers updating the header\n   */\n  protected updateHeaders() {\n    this.cell.updateHeaders();\n  }\n\n  protected handleCellReady(item: HTMLElement, ready: IAbortAblePromise<void>, column: number = -1) {\n    return this.cell.handleCellReady(item, ready, column);\n  }\n\n  protected recycleCell(item: HTMLElement, column: number = -1) {\n    this.cell.recycleCell(item, column);\n  }\n\n  /**\n   * trigger an update all all column widths\n   */\n  protected updateColumnWidths() {\n    const context = this.context;\n    this.style.update(context.defaultRowHeight - context.padding(-1), context.columns, context.column.padding, -this.cell.leftShift(), this.tableId);\n  }\n\n  protected recreate(ctx?: IAnimationContext) {\n    const scroller = this.bodyScroller;\n    const oldLeft = scroller.scrollLeft;\n    this.cell.recreate(oldLeft, scroller.clientWidth);\n\n    super.recreate(ctx);\n    // restore left\n    scroller.scrollLeft = oldLeft;\n  }\n\n  protected clearPool() {\n    super.clearPool();\n    this.cell.clearPool();\n  }\n\n  protected createRow(node: HTMLElement, rowIndex: number): void {\n    this.cell.createRow(node, rowIndex);\n    node.classList.add(this.style.cssClasses.tr);\n  }\n\n  protected updateRow(node: HTMLElement, rowIndex: number): void {\n    this.cell.updateRow(node, rowIndex);\n  }\n}\n\nexport default ACellTableSection;\n","import {setTransform} from '../ARowRenderer';\nimport {addScroll, defaultMode, IDelayedMode} from '../internal';\nimport {GridStyleManager, tableCSSClasses, tableIds} from '../style';\nimport {cssClass, CSS_CLASS_BODY, CSS_CLASS_FOOTER, CSS_CLASS_HEADER, CSS_CLASS_MULTI, CSS_CLASS_TBODY, CSS_CLASS_THEAD} from '../styles';\n\n/**\n * basic interface of a table section\n */\nexport interface ITableSection {\n  readonly id: string;\n  readonly width: number;\n  readonly height: number;\n  readonly header: HTMLElement;\n  readonly body: HTMLElement;\n\n  init(): void;\n\n  /**\n   * show the section\n   * @param {number} left visible left margin\n   * @param {number} width visible width\n   * @param {boolean} isGoingRight whether it was a shift to the right\n   */\n  show(left: number, width: number, isGoingRight: boolean): void;\n\n  hide(): void;\n\n  destroy(): void;\n}\n\nexport interface ITableFactory<T extends ITableSection> {\n  (header: HTMLElement, body: HTMLElement, tableId: string, style: GridStyleManager, ...extras: any[]): T;\n}\n\nexport interface ISeparatorFactory<T extends ITableSection> {\n  (header: HTMLElement, body: HTMLElement, style: GridStyleManager, ...extras: any[]): T;\n}\n\nexport interface IMultiTableRowRendererOptions {\n  /**\n   * column padding to use between columns\n   * @default 0\n   */\n  columnPadding: number;\n  /**\n   * async update on scrolling\n   * animation -> use requestAnimationFrame\n   * sync -> execute within scroll listener\n   * {number} -> execute within this delay using setTimeout\n   * @default is chrome ? animation else 0\n   */\n  async: IDelayedMode;\n\n  /**\n   * minimal number of pixel the scrollbars has to move\n   * @default 30\n   */\n  minScrollDelta: number;\n}\n\n/**\n * manager of multiple columns separated by separators each an own row renderer\n */\nexport default class MultiTableRowRenderer {\n\n  readonly style: GridStyleManager;\n  private tableId = 0;\n\n  private readonly sections: ITableSection[] = [];\n\n  private readonly options: Readonly<IMultiTableRowRendererOptions> = {\n    columnPadding: 0,\n    async: defaultMode,\n    minScrollDelta: 30\n  };\n\n  constructor(public readonly node: HTMLElement, htmlId: string, options: Partial<IMultiTableRowRendererOptions> = {}) {\n    Object.assign(this.options, options);\n    htmlId = htmlId.startsWith('#') ? htmlId.slice(1) : htmlId;\n    node.id = htmlId;\n    node.innerHTML = `<header id=\"header-${htmlId}\" class=\"${CSS_CLASS_HEADER} ${cssClass(`header-${htmlId}`)}\">\n      <footer class=\"${CSS_CLASS_FOOTER} ${cssClass(`footer-${htmlId}`)}\">&nbsp;</footer>\n    </header>\n    <main id=\"body-${htmlId}\" class=\"${CSS_CLASS_BODY} ${cssClass(`body-${htmlId}`)}\">\n      <footer class=\"${CSS_CLASS_FOOTER}\">&nbsp;</footer>\n    </main>`;\n    node.classList.add(cssClass(), CSS_CLASS_MULTI, 'lineup-engine');\n\n    this.style = new GridStyleManager(this.node, htmlId);\n\n    let old = addScroll(this.main, this.options.async, (act) => {\n      if (Math.abs(old.left - act.left) < this.options.minScrollDelta && Math.abs(old.width - act.width) < this.options.minScrollDelta) {\n        return;\n      }\n      const isGoingRight = act.left > old.left;\n      old = act;\n      this.onScrolledHorizontally(act.left, act.width, isGoingRight);\n    });\n  }\n\n  private update() {\n    this.onScrolledHorizontally(this.main.scrollLeft, this.main.clientWidth, false);\n\n    let offset = 0;\n    this.sections.forEach((s) => {\n      s.body.style.left = s.header.style.left = `${offset}px`;\n      offset += s.width + this.options.columnPadding;\n    });\n  }\n\n  private onScrolledHorizontally(scrollLeft: number, clientWidth: number, isGoingRight: boolean) {\n    let offset = 0;\n    const scrollEnd = scrollLeft + clientWidth;\n    this.sections.forEach((s) => {\n      const end = offset + s.width;\n      if (end < scrollLeft || offset > scrollEnd) {\n        s.hide();\n      } else {\n        s.show(Math.max(0, scrollLeft - offset), Math.min(scrollEnd - offset, s.width), isGoingRight);\n      }\n\n      offset = end + this.options.columnPadding;\n    });\n\n    this.updateOffset();\n  }\n\n  private updateOffset() {\n    const headerFooter = this.header.getElementsByTagName('footer')[0]!;\n    const bodyFooter = this.main.getElementsByTagName('footer')[0]!;\n\n    const maxHeight = Math.max(0, ...this.sections.map((d) => d.height));\n    const total = this.sections.reduce((a, c) => a + c.width + this.options.columnPadding, 0);\n\n    setTransform(headerFooter, total, 0);\n    setTransform(bodyFooter, total, maxHeight);\n  }\n\n  destroy() {\n    this.sections.forEach((d) => d.destroy());\n    this.node.remove();\n  }\n\n  private get doc() {\n    return this.node.ownerDocument!;\n  }\n\n  private get header() {\n    return <HTMLElement>this.node.getElementsByTagName('header')[0];\n  }\n\n  private get main() {\n    return <HTMLElement>this.node.getElementsByTagName('main')[0];\n  }\n\n  /**\n   * push another table to this instance\n   * @param {ITableFactory<T extends ITableSection>} factory factory for the table\n   * @param extras additional arguments to provide for the factory\n   * @returns {T} the table instance\n   */\n  pushTable<T extends ITableSection>(factory: ITableFactory<T>, ...extras: any[]) {\n    const header = this.doc.createElement('article');\n    const body = this.doc.createElement('article');\n\n    const tableId = `${this.node.id}T${this.tableId++}`;\n    const ids = tableIds(tableId);\n    const cssClasses = tableCSSClasses(tableId);\n\n    header.id = ids.thead;\n    header.classList.add(CSS_CLASS_THEAD, cssClasses.thead);\n    body.id = ids.tbody;\n    body.classList.add(CSS_CLASS_TBODY, cssClasses.tbody);\n    this.header.insertBefore(header, this.header.lastElementChild); //before the footer\n    this.main.appendChild(body);\n\n    const table = factory(header, body, tableId, this.style, ...extras);\n    table.init();\n    this.sections.push(table);\n    this.update();\n    return table;\n  }\n\n  /**\n   * push another separator to the manager\n   * @param {ISeparatorFactory<T extends ITableSection>} factory the factory to create the separator\n   * @param extras optional additional arguments\n   * @returns {T} the new created separator\n   */\n  pushSeparator<T extends ITableSection>(factory: ISeparatorFactory<T>, ...extras: any[]) {\n    const header = this.doc.createElement('section');\n    const body = this.doc.createElement('section');\n    header.classList.add(cssClass('header-separator'));\n    body.classList.add(cssClass('separator'));\n    this.header.insertBefore(header, this.header.lastElementChild); //before the footer\n    this.main.appendChild(body);\n\n    const separator = factory(header, body, this.style, ...extras);\n    separator.init();\n    this.sections.push(separator);\n    this.update();\n    return separator;\n  }\n\n  /**\n   * removes a given table section\n   * @param {ITableSection} section section to remove\n   * @returns {boolean} successful flag\n   */\n  remove(section: ITableSection) {\n    const index = this.sections.indexOf(section);\n    if (index < 0) {\n      return false;\n    }\n    this.sections.splice(index, 1);\n    section.destroy();\n    this.update();\n    return true;\n  }\n\n  clear() {\n    this.sections.splice(0, this.sections.length).forEach((s) => s.destroy());\n    this.update();\n  }\n\n  /**\n   * triggers and update because of a change in width of one or more table sections\n   */\n  widthChanged() {\n    this.update();\n  }\n\n}\n","import './style.scss';\nexport * from '.';\n\ndeclare const __VERSION__: string;\ndeclare const __BUILD_ID__: string;\n\nexport const version = __VERSION__;\nexport const buildId = __BUILD_ID__;\n"],"sourceRoot":""}