/*! lineupengine - v1.0.0-20180108-082103 - 2018
* https://sgratzl.github.io/lineupengine/
* Copyright (c) 2018 Samuel Gratzl; Licensed MIT*/

(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["lineupengine"] = factory();
	else
		root["lineupengine"] = factory();
})(typeof self !== 'undefined' ? self : this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 10);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"e\"] = uniformContext;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = nonUniformContext;\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = randomContext;\n/* harmony export (immutable) */ __webpack_exports__[\"d\"] = range;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = frozenDelta;\n/* harmony export (immutable) */ __webpack_exports__[\"f\"] = updateFrozen;\nclass RowHeightException {\r\n    constructor(index, y, height) {\r\n        this.index = index;\r\n        this.y = y;\r\n        this.height = height;\r\n    }\r\n    get y2() {\r\n        return this.y + this.height;\r\n    }\r\n}\r\nfunction uniformContext(numberOfRows, rowHeight, rowPadding = 0) {\r\n    rowHeight += rowPadding;\r\n    const exceptionsLookup = {\r\n        keys: () => [].values(),\r\n        get: () => rowHeight,\r\n        has: () => false,\r\n        size: 0\r\n    };\r\n    return {\r\n        exceptions: [],\r\n        exceptionsLookup,\r\n        totalHeight: numberOfRows * rowHeight,\r\n        numberOfRows,\r\n        defaultRowHeight: rowHeight,\r\n        padding: () => rowPadding\r\n    };\r\n}\r\nfunction mostFrequentValue(values) {\r\n    const lookup = new Map();\r\n    values.forEach((value) => {\r\n        lookup.set(value, (lookup.get(value) || 0) + 1);\r\n    });\r\n    if (lookup.size === 0) {\r\n        return 20;\r\n    }\r\n    const sorted = Array.from(lookup).sort((a, b) => {\r\n        if (a[1] !== b[1]) {\r\n            return b[1] - a[1];\r\n        }\r\n        return a[0] - b[0];\r\n    });\r\n    const mostFrequent = sorted[0][0];\r\n    if (mostFrequent === 0) {\r\n        return sorted.length > 1 ? sorted[1][0] : 20;\r\n    }\r\n    return mostFrequent;\r\n}\r\nfunction nonUniformContext(rowHeights, defaultRowHeight = NaN, rowPadding = 0) {\r\n    const exceptionsLookup = new Map();\r\n    const exceptions = [];\r\n    const padding = typeof rowPadding === 'function' ? rowPadding : () => rowPadding;\r\n    if (isNaN(defaultRowHeight)) {\r\n        defaultRowHeight = mostFrequentValue(rowHeights);\r\n    }\r\n    defaultRowHeight += padding(-1);\r\n    let prev = -1, acc = 0, totalHeight = 0, numberOfRows = 0;\r\n    rowHeights.forEach((height, index) => {\r\n        height += padding(index);\r\n        totalHeight += height;\r\n        numberOfRows++;\r\n        if (height === defaultRowHeight) {\r\n            return;\r\n        }\r\n        exceptionsLookup.set(index, height);\r\n        const between = (index - prev - 1) * defaultRowHeight;\r\n        prev = index;\r\n        const y = acc + between;\r\n        acc = y + height;\r\n        exceptions.push(new RowHeightException(index, y, height));\r\n    });\r\n    return { exceptionsLookup, exceptions, totalHeight, defaultRowHeight, numberOfRows, padding };\r\n}\r\nfunction randomContext(numberOfRows, defaultRowHeight, minRowHeight = 2, maxRowHeight = defaultRowHeight * 10, ratio = 0.2, seed = Date.now()) {\r\n    let actSeed = seed;\r\n    const random = () => {\r\n        const x = Math.sin(actSeed++) * 10000;\r\n        return x - Math.floor(x);\r\n    };\r\n    const getter = () => {\r\n        const coin = random();\r\n        if (coin < ratio) {\r\n            return minRowHeight + Math.round(random() * (maxRowHeight - minRowHeight));\r\n        }\r\n        return defaultRowHeight;\r\n    };\r\n    const forEach = (callback) => {\r\n        for (let index = 0; index < numberOfRows; ++index) {\r\n            callback(getter(), index);\r\n        }\r\n    };\r\n    return nonUniformContext({ forEach }, defaultRowHeight);\r\n}\r\nfunction range(scrollTop, clientHeight, rowHeight, heightExceptions, numberOfRows) {\r\n    if (numberOfRows === 0) {\r\n        return { first: 0, last: -1, firstRowPos: 0, endPos: 0 };\r\n    }\r\n    if (numberOfRows === 1) {\r\n        return {\r\n            first: 0,\r\n            last: 0,\r\n            firstRowPos: 0,\r\n            endPos: heightExceptions.length === 0 ? rowHeight : heightExceptions[0].y2\r\n        };\r\n    }\r\n    const offset = scrollTop;\r\n    const offset2 = offset + clientHeight;\r\n    function indexOf(pos, indexShift) {\r\n        return Math.min(numberOfRows - 1, indexShift + Math.max(0, Math.floor(pos / rowHeight)));\r\n    }\r\n    function calc(offsetShift, indexShift, isGuess = false) {\r\n        const shifted = offset - offsetShift;\r\n        const shifted2 = offset2 - offsetShift;\r\n        const first = indexOf(shifted, indexShift);\r\n        const last = indexOf(shifted2, indexShift);\r\n        const firstRowPos = offsetShift + (first - indexShift) * rowHeight;\r\n        const endPos = offsetShift + (last + 1 - indexShift) * rowHeight;\r\n        console.assert(!isGuess || !(firstRowPos > offset || (endPos < offset2 && last < numberOfRows - 1)), 'error', isGuess, firstRowPos, endPos, offset, offset2, indexShift, offsetShift);\r\n        return { first, last, firstRowPos, endPos };\r\n    }\r\n    const r = calc(0, 0, true);\r\n    if (heightExceptions.length === 0) {\r\n        return r;\r\n    }\r\n    if (r.last < heightExceptions[0].index) {\r\n        return r;\r\n    }\r\n    if (r.last === heightExceptions[0].index && heightExceptions[0].height > rowHeight) {\r\n        return Object.assign(r, { endPos: heightExceptions[0].y2 });\r\n    }\r\n    const lastPos = heightExceptions[heightExceptions.length - 1];\r\n    if (offset >= lastPos.y) {\r\n        const rest = calc(lastPos.y2, lastPos.index + 1);\r\n        if (offset < lastPos.y2) {\r\n            return Object.assign(rest, { first: lastPos.index, firstRowPos: lastPos.y });\r\n        }\r\n        return rest;\r\n    }\r\n    const visible = [];\r\n    let closest = heightExceptions[0];\r\n    for (const item of heightExceptions) {\r\n        const { y, y2 } = item;\r\n        if (y >= offset2) {\r\n            break;\r\n        }\r\n        if (y2 <= offset) {\r\n            closest = item;\r\n            continue;\r\n        }\r\n        visible.push(item);\r\n    }\r\n    if (visible.length === 0) {\r\n        return calc(closest.y2, closest.index + 1);\r\n    }\r\n    {\r\n        const firstException = visible[0];\r\n        const lastException = visible[visible.length - 1];\r\n        const first = Math.max(0, firstException.index - Math.max(0, Math.ceil((firstException.y - offset) / rowHeight)));\r\n        let last = lastException.index;\r\n        if (offset2 >= lastException.y2) {\r\n            last = indexOf(offset2 - lastException.y2, lastException.index + 1);\r\n        }\r\n        const firstRowPos = firstException.y - (firstException.index - first) * rowHeight;\r\n        const endPos = lastException.y2 + (last - lastException.index) * rowHeight;\r\n        console.assert(firstRowPos <= offset && (endPos >= offset2 || last === numberOfRows - 1), 'error', firstRowPos, endPos, offset, offset2, firstException, lastException);\r\n        return { first, last, firstRowPos, endPos };\r\n    }\r\n}\r\nfunction frozenDelta(current, target) {\r\n    const clength = current.length;\r\n    const tlength = target.length;\r\n    if (clength === 0) {\r\n        return { added: target, removed: [], common: 0 };\r\n    }\r\n    if (tlength === 0) {\r\n        return { added: [], removed: current, common: 0 };\r\n    }\r\n    if (clength === tlength) {\r\n        return { added: [], removed: [], common: clength };\r\n    }\r\n    const removed = current.slice(Math.min(tlength, clength));\r\n    const added = target.slice(Math.min(tlength, clength));\r\n    return { added, removed, common: clength - removed.length };\r\n}\r\nfunction updateFrozen(old, columns, first) {\r\n    const oldLast = old.length === 0 ? 0 : old[old.length - 1] + 1;\r\n    const added = [];\r\n    const removed = [];\r\n    for (let i = old.length - 1; i >= 0; --i) {\r\n        const index = old[i];\r\n        if (index >= first) {\r\n            removed.push(old.pop());\r\n        }\r\n        else {\r\n            break;\r\n        }\r\n    }\r\n    for (let i = oldLast; i < first; ++i) {\r\n        if (columns[i].frozen) {\r\n            added.push(i);\r\n            old.push(i);\r\n        }\r\n    }\r\n    return { target: old, added, removed };\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n");

/***/ }),
/* 1 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__IMixin__ = __webpack_require__(6);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__IMixin__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__PrefetchMixin__ = __webpack_require__(13);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_1__PrefetchMixin__[\"a\"]; });\n\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvbWl4aW4vaW5kZXgudHM/ODJlNiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge0lNaXhpbiwgSU1peGluQWRhcHRlciwgSU1peGluQ2xhc3MsIEVTY3JvbGxSZXN1bHR9IGZyb20gJy4vSU1peGluJztcbmV4cG9ydCB7ZGVmYXVsdCBhcyBQcmVmZXRjaE1peGlufSBmcm9tICcuL1ByZWZldGNoTWl4aW4nO1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHNyYy9taXhpbi9pbmRleC50cyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1\n");

/***/ }),
/* 2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__abortAble__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__animation__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__animation_KeyFinder__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__logic__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__mixin__ = __webpack_require__(1);\n\r\n\r\n\r\n\r\n\r\nclass ARowRenderer {\r\n    constructor(body, options = {}) {\r\n        this.body = body;\r\n        this.pool = [];\r\n        this.loadingPool = [];\r\n        this.loading = new Map();\r\n        this.visible = {\r\n            first: 0,\r\n            forcedFirst: 0,\r\n            last: -1,\r\n            forcedLast: -1\r\n        };\r\n        this.visibleFirstRowPos = 0;\r\n        this.abortAnimation = () => undefined;\r\n        this.options = {\r\n            async: Boolean(window.chrome) ? 'animation' : 'immediate',\r\n            minScrollDelta: 3,\r\n            mixins: [],\r\n            scrollingHint: false\r\n        };\r\n        this.adapter = this.createAdapter();\r\n        Object.assign(this.options, options);\r\n        this.mixins = this.options.mixins.map((mixinClass) => new mixinClass(this.adapter));\r\n        this.fragment = body.ownerDocument.createDocumentFragment();\r\n    }\r\n    addMixin(mixinClass, options) {\r\n        this.mixins.push(new mixinClass(this.adapter, options));\r\n    }\r\n    createAdapter() {\r\n        const r = {\r\n            visible: this.visible,\r\n            addAtBeginning: this.addAtBeginning.bind(this),\r\n            addAtBottom: this.addAtBottom.bind(this),\r\n            removeFromBeginning: this.removeFromBeginning.bind(this),\r\n            removeFromBottom: this.removeFromBottom.bind(this),\r\n            updateOffset: this.updateOffset.bind(this),\r\n            scroller: this.bodyScroller\r\n        };\r\n        Object.defineProperties(r, {\r\n            visibleFirstRowPos: {\r\n                get: () => this.visibleFirstRowPos,\r\n                enumerable: true\r\n            },\r\n            context: {\r\n                get: () => this.context,\r\n                enumerable: true\r\n            }\r\n        });\r\n        return r;\r\n    }\r\n    get bodyScroller() {\r\n        return this.body.parentElement;\r\n    }\r\n    init() {\r\n        const scroller = this.bodyScroller;\r\n        let oldTop = scroller.scrollTop;\r\n        const handler = () => {\r\n            const top = scroller.scrollTop;\r\n            if (Math.abs(oldTop - top) < this.options.minScrollDelta) {\r\n                return;\r\n            }\r\n            const isGoingDown = top > oldTop;\r\n            oldTop = top;\r\n            this.onScrolledVertically(top, scroller.clientHeight, isGoingDown);\r\n            if (this.options.scrollingHint) {\r\n                scroller.classList.remove('le-scrolling');\r\n            }\r\n        };\r\n        this.scrollListener = this.createDelayedHandler(handler, () => {\r\n            if (this.options.scrollingHint) {\r\n                scroller.classList.add('le-scrolling');\r\n            }\r\n        });\r\n        scroller.addEventListener('scroll', this.scrollListener);\r\n        this.recreate();\r\n    }\r\n    createDelayedHandler(delayedHandler, immediateCallback) {\r\n        const hasImmediate = typeof (window.setImmediate) === 'function';\r\n        let delayer;\r\n        if (this.options.async === 'immediate' && hasImmediate) {\r\n            delayer = setImmediate;\r\n        }\r\n        else if (this.options.async === 'animation' || this.options.async === 'immediate') {\r\n            delayer = requestAnimationFrame;\r\n        }\r\n        else if (typeof this.options.async === 'number') {\r\n            delayer = (c) => self.setTimeout(c, this.options.async);\r\n        }\r\n        else {\r\n            delayer = (c) => {\r\n                c();\r\n                return -1;\r\n            };\r\n        }\r\n        let timeOut = -1;\r\n        const wrapper = () => {\r\n            timeOut = -1;\r\n            delayedHandler();\r\n        };\r\n        return () => {\r\n            if (immediateCallback) {\r\n                immediateCallback();\r\n            }\r\n            if (timeOut > -1) {\r\n                return;\r\n            }\r\n            timeOut = delayer(wrapper);\r\n        };\r\n    }\r\n    destroy() {\r\n        this.bodyScroller.removeEventListener('scroll', this.scrollListener);\r\n        this.body.remove();\r\n    }\r\n    static cleanUp(item) {\r\n        if (item.style.height) {\r\n            item.style.height = null;\r\n        }\r\n    }\r\n    select(index) {\r\n        let item;\r\n        let result;\r\n        if (this.pool.length > 0) {\r\n            item = this.pool.pop();\r\n            result = this.updateRow(item, index);\r\n        }\r\n        else if (this.loadingPool.length > 0) {\r\n            item = this.loadingPool.pop();\r\n            item.classList.remove('loading');\r\n            result = this.createRow(item, index);\r\n        }\r\n        else {\r\n            item = this.body.ownerDocument.createElement('div');\r\n            result = this.createRow(item, index);\r\n        }\r\n        item.dataset.index = String(index);\r\n        return { item, result };\r\n    }\r\n    selectProxy() {\r\n        let proxy;\r\n        if (this.loadingPool.length > 0) {\r\n            proxy = this.loadingPool.pop();\r\n        }\r\n        else {\r\n            proxy = this.body.ownerDocument.createElement('div');\r\n            proxy.classList.add('loading');\r\n        }\r\n        return proxy;\r\n    }\r\n    recycle(item) {\r\n        ARowRenderer.cleanUp(item);\r\n        if (this.loading.has(item)) {\r\n            const abort = this.loading.get(item);\r\n            abort.abort();\r\n        }\r\n        else {\r\n            this.pool.push(item);\r\n        }\r\n    }\r\n    proxy(item, result) {\r\n        if (!Object(__WEBPACK_IMPORTED_MODULE_0__abortAble__[\"b\" /* isAbortAble */])(result)) {\r\n            return item;\r\n        }\r\n        const abort = result;\r\n        const real = item;\r\n        const proxy = this.selectProxy();\r\n        proxy.dataset.index = real.dataset.index;\r\n        proxy.style.height = real.style.height;\r\n        this.loading.set(proxy, abort);\r\n        abort.then((result) => {\r\n            if (result === __WEBPACK_IMPORTED_MODULE_0__abortAble__[\"a\" /* ABORTED */]) {\r\n                ARowRenderer.cleanUp(real);\r\n                this.pool.push(real);\r\n            }\r\n            else {\r\n                this.body.replaceChild(real, proxy);\r\n            }\r\n            this.loading.delete(proxy);\r\n            ARowRenderer.cleanUp(proxy);\r\n            this.loadingPool.push(proxy);\r\n        });\r\n        return proxy;\r\n    }\r\n    create(index) {\r\n        const { item, result } = this.select(index);\r\n        const { exceptionsLookup: ex, padding } = this.context;\r\n        if (ex.has(index)) {\r\n            item.style.height = `${ex.get(index) - padding(index)}px`;\r\n        }\r\n        return this.proxy(item, result);\r\n    }\r\n    removeAll() {\r\n        const arr = Array.from(this.body.children);\r\n        this.body.innerHTML = '';\r\n        arr.forEach((item) => {\r\n            this.recycle(item);\r\n        });\r\n    }\r\n    update() {\r\n        const first = this.visible.first;\r\n        const fragment = this.fragment;\r\n        const items = Array.from(this.body.children);\r\n        this.body.innerHTML = '';\r\n        items.forEach((item, i) => {\r\n            if (this.loading.has(item)) {\r\n                return;\r\n            }\r\n            const abort = this.updateRow(item, i + first);\r\n            fragment.appendChild(this.proxy(item, abort));\r\n        });\r\n        this.body.appendChild(fragment);\r\n    }\r\n    forEachRow(callback, inplace = false) {\r\n        const rows = Array.from(this.body.children);\r\n        const fragment = this.fragment;\r\n        if (!inplace) {\r\n            this.body.innerHTML = '';\r\n        }\r\n        rows.forEach((row, index) => {\r\n            if (!row.classList.contains('loading') && row.dataset.animation !== 'update_remove' && row.dataset.animation !== 'hide') {\r\n                callback(row, index + this.visible.first);\r\n            }\r\n            if (!inplace) {\r\n                fragment.appendChild(row);\r\n            }\r\n        });\r\n        if (!inplace) {\r\n            this.body.appendChild(fragment);\r\n        }\r\n    }\r\n    removeFromBeginning(from, to) {\r\n        return this.remove(from, to, true);\r\n    }\r\n    removeFromBottom(from, to) {\r\n        return this.remove(from, to, false);\r\n    }\r\n    remove(from, to, fromBeginning) {\r\n        for (let i = from; i <= to; ++i) {\r\n            const item = (fromBeginning ? this.body.firstChild : this.body.lastChild);\r\n            item.remove();\r\n            this.recycle(item);\r\n        }\r\n    }\r\n    addAtBeginning(from, to) {\r\n        if (from === to) {\r\n            this.body.insertBefore(this.create(from), this.body.firstChild);\r\n            return;\r\n        }\r\n        const fragment = this.fragment;\r\n        for (let i = from; i <= to; ++i) {\r\n            fragment.appendChild(this.create(i));\r\n        }\r\n        this.body.insertBefore(fragment, this.body.firstChild);\r\n    }\r\n    addAtBottom(from, to) {\r\n        if (from === to) {\r\n            this.body.appendChild(this.create(from));\r\n            return;\r\n        }\r\n        const fragment = this.fragment;\r\n        for (let i = from; i <= to; ++i) {\r\n            fragment.appendChild(this.create(i));\r\n        }\r\n        this.body.appendChild(fragment);\r\n    }\r\n    updateOffset(firstRowPos) {\r\n        const { totalHeight } = this.context;\r\n        this.visibleFirstRowPos = firstRowPos;\r\n        this.body.classList.toggle('odd', this.visible.first % 2 === 1);\r\n        this.body.style.transform = `translate(0, ${firstRowPos.toFixed(0)}px)`;\r\n        this.body.style.height = `${Math.max(1, totalHeight - firstRowPos).toFixed(0)}px`;\r\n    }\r\n    recreate(ctx) {\r\n        this.abortAnimation();\r\n        if (ctx) {\r\n            return this.recreateAnimated(ctx);\r\n        }\r\n        return this.recreatePure();\r\n    }\r\n    recreatePure() {\r\n        const context = this.context;\r\n        const scroller = this.bodyScroller;\r\n        this.updateOffset(0);\r\n        this.removeAll();\r\n        this.clearPool();\r\n        const { first, last, firstRowPos } = Object(__WEBPACK_IMPORTED_MODULE_3__logic__[\"d\" /* range */])(scroller.scrollTop, scroller.clientHeight, context.defaultRowHeight, context.exceptions, context.numberOfRows);\r\n        this.visible.first = this.visible.forcedFirst = first;\r\n        this.visible.last = this.visible.forcedLast = last;\r\n        if (first < 0) {\r\n            this.updateOffset(0);\r\n            return;\r\n        }\r\n        this.addAtBottom(first, last);\r\n        this.updateOffset(firstRowPos);\r\n    }\r\n    recreateAnimated(ctx) {\r\n        const lookup = new Map();\r\n        const prev = new __WEBPACK_IMPORTED_MODULE_2__animation_KeyFinder__[\"a\" /* default */](ctx.previous, ctx.previousKey);\r\n        const cur = new __WEBPACK_IMPORTED_MODULE_2__animation_KeyFinder__[\"a\" /* default */](this.context, ctx.currentKey);\r\n        const next = Object(__WEBPACK_IMPORTED_MODULE_3__logic__[\"d\" /* range */])(this.bodyScroller.scrollTop, this.bodyScroller.clientHeight, cur.context.defaultRowHeight, cur.context.exceptions, cur.context.numberOfRows);\r\n        {\r\n            const rows = Array.from(this.body.children);\r\n            const old = Object.assign({}, this.visible);\r\n            prev.positions(old.first, Math.min(old.last, old.first + rows.length), this.visibleFirstRowPos, (i, key, pos) => {\r\n                const n = rows[i];\r\n                if (n) {\r\n                    lookup.set(key, { n, pos, i });\r\n                }\r\n            });\r\n            this.body.innerHTML = ``;\r\n        }\r\n        this.visible.first = this.visible.forcedFirst = next.first;\r\n        this.visible.last = this.visible.forcedLast = next.last;\r\n        const fragment = this.fragment;\r\n        const animation = [];\r\n        let nodeY = next.firstRowPos;\r\n        cur.positions(next.first, next.last, next.firstRowPos, (i, key, pos) => {\r\n            let node;\r\n            let mode = __WEBPACK_IMPORTED_MODULE_1__animation__[\"a\" /* EAnimationMode */].UPDATE;\r\n            let previous;\r\n            if (lookup.has(key)) {\r\n                const item = lookup.get(key);\r\n                lookup.delete(key);\r\n                item.n.dataset.index = String(i);\r\n                node = this.proxy(item.n, this.updateRow(item.n, i));\r\n                previous = {\r\n                    index: item.i,\r\n                    y: item.pos,\r\n                    height: prev.exceptionHeightOf(item.i, true)\r\n                };\r\n            }\r\n            else {\r\n                const old = prev.posByKey(key);\r\n                node = this.create(i);\r\n                mode = old.index < 0 ? __WEBPACK_IMPORTED_MODULE_1__animation__[\"a\" /* EAnimationMode */].SHOW : __WEBPACK_IMPORTED_MODULE_1__animation__[\"a\" /* EAnimationMode */].UPDATE_CREATE;\r\n                previous = {\r\n                    index: old.index,\r\n                    y: old.pos >= 0 ? old.pos : pos,\r\n                    height: old.index < 0 ? cur.exceptionHeightOf(i, true) : prev.exceptionHeightOf(old.index, true)\r\n                };\r\n            }\r\n            animation.push({\r\n                node,\r\n                key,\r\n                mode,\r\n                previous,\r\n                nodeY,\r\n                nodeYCurrentHeight: pos,\r\n                current: {\r\n                    index: i,\r\n                    y: pos,\r\n                    height: cur.exceptionHeightOf(i)\r\n                }\r\n            });\r\n            node.style.transform = `translate(0, ${nodeY - pos}px)`;\r\n            nodeY += previous.height + (previous.index < 0 ? cur.padding(i) : prev.padding(previous.index));\r\n            fragment.appendChild(node);\r\n        });\r\n        let nodeYCurrentHeight = next.endPos;\r\n        lookup.forEach((item, key) => {\r\n            const r = cur.posByKey(key);\r\n            const nextPos = r.pos >= 0 ? r.pos : item.pos;\r\n            const node = item.n;\r\n            node.style.transform = `translate(0, ${item.pos - nodeY}px)`;\r\n            fragment.appendChild(node);\r\n            const prevHeight = prev.exceptionHeightOf(item.i, true);\r\n            animation.push({\r\n                node: item.n,\r\n                key,\r\n                mode: r.index < 0 ? __WEBPACK_IMPORTED_MODULE_1__animation__[\"a\" /* EAnimationMode */].HIDE : __WEBPACK_IMPORTED_MODULE_1__animation__[\"a\" /* EAnimationMode */].UPDATE_REMOVE,\r\n                previous: {\r\n                    index: item.i,\r\n                    y: item.pos,\r\n                    height: prevHeight\r\n                },\r\n                nodeY,\r\n                nodeYCurrentHeight,\r\n                current: {\r\n                    index: r.index,\r\n                    y: nextPos,\r\n                    height: r.index < 0 ? null : cur.exceptionHeightOf(r.index)\r\n                }\r\n            });\r\n            nodeYCurrentHeight += r.index < 0 ? cur.context.defaultRowHeight : (cur.exceptionHeightOf(r.index, true) + cur.padding(r.index));\r\n            nodeY += prevHeight + prev.padding(item.i);\r\n        });\r\n        this.updateOffset(next.firstRowPos);\r\n        this.animate(animation, ctx.phases || __WEBPACK_IMPORTED_MODULE_1__animation__[\"b\" /* defaultPhases */], prev, cur, fragment);\r\n    }\r\n    animate(animation, phases, previousFinder, currentFinder, fragment) {\r\n        if (animation.length <= 0) {\r\n            this.body.appendChild(fragment);\r\n            return;\r\n        }\r\n        let currentTimer = -1;\r\n        let actPhase = 0;\r\n        const executePhase = (phase, items = animation) => {\r\n            items.forEach((anim) => phase.apply(anim, previousFinder, currentFinder));\r\n        };\r\n        const run = () => {\r\n            console.assert(animation[0].node.offsetTop >= 0, 'dummy log for forcing dom update');\r\n            executePhase(phases[actPhase++]);\r\n            if (actPhase < phases.length) {\r\n                const next = phases[actPhase];\r\n                currentTimer = setTimeout(run, next.delay);\r\n                return;\r\n            }\r\n            const body = this.body.classList;\r\n            Array.from(body).forEach((v) => {\r\n                if (v.startsWith('le-') && v.endsWith('-animation')) {\r\n                    body.remove(v);\r\n                }\r\n            });\r\n            animation.forEach(({ node, mode }) => {\r\n                if (mode !== __WEBPACK_IMPORTED_MODULE_1__animation__[\"a\" /* EAnimationMode */].UPDATE_REMOVE && mode !== __WEBPACK_IMPORTED_MODULE_1__animation__[\"a\" /* EAnimationMode */].HIDE) {\r\n                    return;\r\n                }\r\n                node.remove();\r\n                node.style.transform = null;\r\n                this.recycle(node);\r\n            });\r\n            this.abortAnimation = () => undefined;\r\n            currentTimer = -1;\r\n        };\r\n        while (phases[actPhase].delay === 0) {\r\n            executePhase(phases[actPhase++]);\r\n        }\r\n        const body = this.body;\r\n        this.body.appendChild(fragment);\r\n        const dummyAnimation = [];\r\n        animation = animation.filter((d) => {\r\n            if (Object(__WEBPACK_IMPORTED_MODULE_1__animation__[\"c\" /* noAnimationChange */])(d, previousFinder.context.defaultRowHeight, currentFinder.context.defaultRowHeight)) {\r\n                dummyAnimation.push(d);\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n        if (dummyAnimation.length > 0) {\r\n            phases.slice(actPhase).forEach((phase) => executePhase(phase, dummyAnimation));\r\n        }\r\n        if (animation.length === 0) {\r\n            return;\r\n        }\r\n        body.classList.add('le-row-animation');\r\n        (new Set(animation.map((d) => d.mode))).forEach((mode) => {\r\n            body.classList.add(`le-${__WEBPACK_IMPORTED_MODULE_1__animation__[\"a\" /* EAnimationMode */][mode].toLowerCase().split('_')[0]}-animation`);\r\n        });\r\n        this.abortAnimation = () => {\r\n            if (currentTimer <= 0) {\r\n                return;\r\n            }\r\n            clearTimeout(currentTimer);\r\n            currentTimer = -1;\r\n            actPhase = phases.length - 1;\r\n            run();\r\n        };\r\n        currentTimer = setTimeout(run, phases[actPhase].delay);\r\n    }\r\n    clearPool() {\r\n        this.pool.splice(0, this.pool.length);\r\n    }\r\n    revalidate() {\r\n        const scroller = this.bodyScroller;\r\n        this.onScrolledVertically(scroller.scrollTop, scroller.clientHeight, true);\r\n        this.updateOffset(this.visibleFirstRowPos);\r\n    }\r\n    onScrolledVertically(scrollTop, clientHeight, isGoingDown) {\r\n        const scrollResult = this.onScrolledImpl(scrollTop, clientHeight);\r\n        this.mixins.forEach((mixin) => mixin.onScrolled(isGoingDown, scrollResult));\r\n        return scrollResult;\r\n    }\r\n    onScrolledImpl(scrollTop, clientHeight) {\r\n        const context = this.context;\r\n        const { first, last, firstRowPos } = Object(__WEBPACK_IMPORTED_MODULE_3__logic__[\"d\" /* range */])(scrollTop, clientHeight, context.defaultRowHeight, context.exceptions, context.numberOfRows);\r\n        const visible = this.visible;\r\n        visible.forcedFirst = first;\r\n        visible.forcedLast = last;\r\n        if ((first - visible.first) >= 0 && (last - visible.last) <= 0) {\r\n            return __WEBPACK_IMPORTED_MODULE_4__mixin__[\"a\" /* EScrollResult */].NONE;\r\n        }\r\n        let r = __WEBPACK_IMPORTED_MODULE_4__mixin__[\"a\" /* EScrollResult */].PARTIAL;\r\n        if (first > visible.last || last < visible.first) {\r\n            this.removeAll();\r\n            this.addAtBottom(first, last);\r\n            r = __WEBPACK_IMPORTED_MODULE_4__mixin__[\"a\" /* EScrollResult */].ALL;\r\n        }\r\n        else if (first < visible.first) {\r\n            this.removeFromBottom(last + 1, visible.last);\r\n            this.addAtBeginning(first, visible.first - 1);\r\n        }\r\n        else {\r\n            this.removeFromBeginning(visible.first, first - 1);\r\n            this.addAtBottom(visible.last + 1, last);\r\n        }\r\n        visible.first = first;\r\n        visible.last = last;\r\n        this.updateOffset(firstRowPos);\r\n        return r;\r\n    }\r\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = ARowRenderer;\n\r\n/* harmony default export */ __webpack_exports__[\"b\"] = (ARowRenderer);\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2\n");

/***/ }),
/* 3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__GridStyleManager__ = __webpack_require__(7);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__GridStyleManager__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return __WEBPACK_IMPORTED_MODULE_0__GridStyleManager__[\"c\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return __WEBPACK_IMPORTED_MODULE_0__GridStyleManager__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return __WEBPACK_IMPORTED_MODULE_0__GridStyleManager__[\"d\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__StyleManager__ = __webpack_require__(8);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_1__StyleManager__[\"a\"]; });\n\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvc3R5bGUvaW5kZXgudHM/MDY4NiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge0lDb2x1bW59IGZyb20gJy4vSUNvbHVtbic7XG5leHBvcnQge2RlZmF1bHQgYXMgR3JpZFN0eWxlTWFuYWdlciwgc2V0Q29sdW1uLCBURU1QTEFURSwgc2V0VGVtcGxhdGV9IGZyb20gJy4vR3JpZFN0eWxlTWFuYWdlcic7XG5leHBvcnQge2RlZmF1bHQgYXMgU3R5bGVNYW5hZ2VyfSBmcm9tICcuL1N0eWxlTWFuYWdlcic7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL3N0eWxlL2luZGV4LnRzIl0sIm1hcHBpbmdzIjoiQUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///3\n");

/***/ }),
/* 4 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* unused harmony export default */\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = isAbortAble;\nconst ABORTED = Symbol('aborted');\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = ABORTED;\n\r\nfunction abortAble(loader) {\r\n    return {\r\n        then(onfulfilled) {\r\n            let aborted = null;\r\n            const isAborted = () => aborted === null;\r\n            const aborter = new Promise((resolve) => aborted = resolve);\r\n            const fullfiller = loader.then((r) => {\r\n                if (isAborted()) {\r\n                    return ABORTED;\r\n                }\r\n                return Promise.resolve(onfulfilled(r)).then((r) => isAborted() ? ABORTED : r);\r\n            });\r\n            const p = Promise.race([aborter, fullfiller]);\r\n            return {\r\n                abort: () => {\r\n                    if (aborted !== null) {\r\n                        aborted(ABORTED);\r\n                        aborted = null;\r\n                    }\r\n                },\r\n                then: p.then.bind(p),\r\n                catch: p.catch.bind(p),\r\n                [Symbol.toStringTag]: p[Symbol.toStringTag]\r\n            };\r\n        }\r\n    };\r\n}\r\nfunction isAbortAble(abortAble) {\r\n    return abortAble !== undefined && abortAble !== null && abortAble && typeof abortAble.then === 'function' && typeof abortAble.abort === 'function';\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvYWJvcnRBYmxlLnRzP2IyYmEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGludGVyZmFjZSBJQWJvcnRBYmxlUHJvbWlzZTxUPiBleHRlbmRzIFByb21pc2U8VCB8IHN5bWJvbD4ge1xuICBhYm9ydCgpOiB2b2lkO1xufVxuXG5leHBvcnQgY29uc3QgQUJPUlRFRCA9IFN5bWJvbCgnYWJvcnRlZCcpO1xuXG4vKipcbiAqIGFib3J0IGFibGUgUHJvbWlzZSB3cmFwcGVyLCByZXR1cm5zIGEgcHJvbWlzZSB3aGljaCBjYW4gYmUgYWJvcnRlZCwgYW5kIHRyeWluZyB0byBhdm9pZCBleGVjdXRpbmcgdGhlcmVmb3JlIHRoZSB3cmFwcGVkIHByb21pc2VcbiAqIEBwYXJhbSB7UHJvbWlzZTxUPn0gbG9hZGVyXG4gKiBAcmV0dXJucyB7YW55fVxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBhYm9ydEFibGU8VD4obG9hZGVyOiBQcm9taXNlPFQ+KSB7XG4gIHJldHVybiB7XG4gICAgdGhlbjxUUmVzdWx0MT4ob25mdWxmaWxsZWQ6ICgodmFsdWU6IFQpID0+IFRSZXN1bHQxIHwgUHJvbWlzZUxpa2U8VFJlc3VsdDE+KSk6IElBYm9ydEFibGVQcm9taXNlPFRSZXN1bHQxPiB7XG4gICAgICBsZXQgYWJvcnRlZDogKCh2OiBzeW1ib2wpID0+IHZvaWQpIHwgbnVsbCA9IG51bGw7XG4gICAgICBjb25zdCBpc0Fib3J0ZWQgPSAoKSA9PiBhYm9ydGVkID09PSBudWxsO1xuICAgICAgY29uc3QgYWJvcnRlciA9IG5ldyBQcm9taXNlPHN5bWJvbD4oKHJlc29sdmUpID0+IGFib3J0ZWQgPSByZXNvbHZlKTtcbiAgICAgIGNvbnN0IGZ1bGxmaWxsZXIgPSBsb2FkZXIudGhlbigocikgPT4ge1xuICAgICAgICBpZiAoaXNBYm9ydGVkKCkpIHtcbiAgICAgICAgICByZXR1cm4gQUJPUlRFRDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKG9uZnVsZmlsbGVkKHIpKS50aGVuKChyKSA9PiBpc0Fib3J0ZWQoKSA/IEFCT1JURUQgOiByKTtcbiAgICAgIH0pO1xuICAgICAgY29uc3QgcCA9IFByb21pc2UucmFjZTxUUmVzdWx0MSB8IHN5bWJvbD4oW2Fib3J0ZXIsIGZ1bGxmaWxsZXJdKTtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGFib3J0OiAoKTogdm9pZCA9PiB7XG4gICAgICAgICAgaWYgKGFib3J0ZWQgIT09IG51bGwpIHtcbiAgICAgICAgICAgIGFib3J0ZWQoQUJPUlRFRCk7XG4gICAgICAgICAgICBhYm9ydGVkID0gbnVsbDtcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHRoZW46IHAudGhlbi5iaW5kKHApLFxuICAgICAgICBjYXRjaDogcC5jYXRjaC5iaW5kKHApLFxuICAgICAgICBbU3ltYm9sLnRvU3RyaW5nVGFnXTogcFtTeW1ib2wudG9TdHJpbmdUYWddXG4gICAgICB9O1xuICAgIH1cbiAgfTtcbn1cblxuLyoqXG4gKiBjaGVja2VkIHdoZXRoZXIgdGhlIGdpdmVuIGFyZ3VtZW50IGlzIGFuIGFib3J0YWJsZSBQcm9taXNlXG4gKiBAcGFyYW0ge0lBYm9ydEFibGVQcm9taXNlPGFueT4gfCB2b2lkIHwgbnVsbCB8IHVuZGVmaW5lZH0gYWJvcnRBYmxlXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzQWJvcnRBYmxlKGFib3J0QWJsZTogSUFib3J0QWJsZVByb21pc2U8YW55PiB8IHZvaWQgfCB1bmRlZmluZWQgfCBudWxsKTogYWJvcnRBYmxlIGlzIElBYm9ydEFibGVQcm9taXNlPGFueT4ge1xuICByZXR1cm4gYWJvcnRBYmxlICE9PSB1bmRlZmluZWQgJiYgYWJvcnRBYmxlICE9PSBudWxsICYmIGFib3J0QWJsZSAmJiB0eXBlb2YgYWJvcnRBYmxlLnRoZW4gPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIGFib3J0QWJsZS5hYm9ydCA9PT0gJ2Z1bmN0aW9uJztcbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBzcmMvYWJvcnRBYmxlLnRzIl0sIm1hcHBpbmdzIjoiQUFJQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBT0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBT0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///4\n");

/***/ }),
/* 5 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("class KeyFinder {\r\n    constructor(context, key) {\r\n        this.context = context;\r\n        this.key = key;\r\n        this.cache = [];\r\n        this.lastFilled = 0;\r\n        this.key2index = new Map();\r\n        this.context.exceptions.forEach((e) => {\r\n            this.cache[e.index] = e.y;\r\n            this.key2index.set(key(e.index), e.index);\r\n        });\r\n    }\r\n    findValidStart(before) {\r\n        for (let i = before - 1; i >= 0; --i) {\r\n            if (this.cache[i] !== undefined) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n    posByKey(key) {\r\n        if (this.key2index.has(key)) {\r\n            const index = this.key2index.get(key);\r\n            return { index, pos: this.pos(index) };\r\n        }\r\n        return this.fillCacheTillKey(key);\r\n    }\r\n    pos(index) {\r\n        if (this.context.exceptions.length === 0) {\r\n            return index * this.context.defaultRowHeight;\r\n        }\r\n        const cached = this.cache[index];\r\n        if (cached !== undefined) {\r\n            return cached;\r\n        }\r\n        const start = this.findValidStart(index);\r\n        if (start < 0) {\r\n            this.fillCache(0, index, 0);\r\n        }\r\n        else {\r\n            this.fillCache(start + 1, index, this.cache[start] + this.heightOf(start));\r\n        }\r\n        return this.cache[index];\r\n    }\r\n    fillCache(first, last, offset, callback) {\r\n        if (last <= this.lastFilled) {\r\n            if (!callback) {\r\n                return;\r\n            }\r\n            for (let i = first; i <= last; ++i) {\r\n                callback(i, this.key(i), this.cache[i]);\r\n            }\r\n            return;\r\n        }\r\n        let pos = offset;\r\n        for (let i = first; i <= last; ++i) {\r\n            this.cache[i] = pos;\r\n            const key = this.key(i);\r\n            this.key2index.set(key, i);\r\n            if (callback) {\r\n                callback(i, key, pos);\r\n            }\r\n            pos += this.heightOf(i);\r\n        }\r\n    }\r\n    heightOf(index) {\r\n        const lookup = this.context.exceptionsLookup;\r\n        return lookup.has(index) ? lookup.get(index) : this.context.defaultRowHeight;\r\n    }\r\n    exceptionHeightOf(index, returnDefault = false) {\r\n        const padding = this.context.padding(index);\r\n        const lookup = this.context.exceptionsLookup;\r\n        if (lookup.has(index)) {\r\n            return lookup.get(index) - padding;\r\n        }\r\n        return returnDefault ? this.context.defaultRowHeight - padding : null;\r\n    }\r\n    padding(index) {\r\n        return this.context.padding(index);\r\n    }\r\n    fillCacheTillKey(target) {\r\n        let pos = 0;\r\n        for (let i = this.lastFilled; i < this.context.numberOfRows; ++i, ++this.lastFilled) {\r\n            const c = this.cache[i];\r\n            if (c !== undefined) {\r\n                pos = c + this.heightOf(i);\r\n                continue;\r\n            }\r\n            const key = this.key(i);\r\n            this.cache[i] = pos;\r\n            this.key2index.set(key, i);\r\n            if (key === target) {\r\n                return { index: i, pos };\r\n            }\r\n            pos += this.heightOf(i);\r\n        }\r\n        return { index: -1, pos: -1 };\r\n    }\r\n    positions(first, last, offset, callback) {\r\n        this.fillCache(first, last, offset, callback);\r\n    }\r\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = KeyFinder;\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvYW5pbWF0aW9uL0tleUZpbmRlci50cz82YmUwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SUV4Y2VwdGlvbkNvbnRleHR9IGZyb20gJy4uL2xvZ2ljJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgS2V5RmluZGVyIHtcbiAgcHJpdmF0ZSByZWFkb25seSBjYWNoZTogbnVtYmVyW10gPSBbXTtcbiAgcHJpdmF0ZSBsYXN0RmlsbGVkID0gMDtcbiAgcHJpdmF0ZSByZWFkb25seSBrZXkyaW5kZXggPSBuZXcgTWFwPHN0cmluZywgbnVtYmVyPigpO1xuXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyByZWFkb25seSBjb250ZXh0OiBJRXhjZXB0aW9uQ29udGV4dCwgcHVibGljIHJlYWRvbmx5IGtleTogKHJvd0luZGV4OiBudW1iZXIpID0+IHN0cmluZykge1xuICAgIHRoaXMuY29udGV4dC5leGNlcHRpb25zLmZvckVhY2goKGUpID0+IHtcbiAgICAgIHRoaXMuY2FjaGVbZS5pbmRleF0gPSBlLnk7XG4gICAgICB0aGlzLmtleTJpbmRleC5zZXQoa2V5KGUuaW5kZXgpLCBlLmluZGV4KTtcbiAgICB9KTtcbiAgfVxuXG4gIHByaXZhdGUgZmluZFZhbGlkU3RhcnQoYmVmb3JlOiBudW1iZXIpIHtcbiAgICBmb3IgKGxldCBpID0gYmVmb3JlIC0gMTsgaSA+PSAwOyAtLWkpIHtcbiAgICAgIGlmICh0aGlzLmNhY2hlW2ldICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIGk7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiAtMTtcbiAgfVxuXG4gIC8qKlxuICAgKlxuICAgKiBAcGFyYW0ge3N0cmluZ30ga2V5XG4gICAqIEByZXR1cm4ge251bWJlcn0gLTEgaWYgbm90IGZvdW5kXG4gICAqL1xuICBwb3NCeUtleShrZXk6IHN0cmluZykge1xuICAgIGlmICh0aGlzLmtleTJpbmRleC5oYXMoa2V5KSkge1xuICAgICAgY29uc3QgaW5kZXggPSB0aGlzLmtleTJpbmRleC5nZXQoa2V5KSE7XG4gICAgICByZXR1cm4ge2luZGV4LCBwb3M6IHRoaXMucG9zKGluZGV4KX07XG4gICAgfVxuICAgIHJldHVybiB0aGlzLmZpbGxDYWNoZVRpbGxLZXkoa2V5KTtcbiAgfVxuXG4gIHBvcyhpbmRleDogbnVtYmVyKSB7XG4gICAgaWYgKHRoaXMuY29udGV4dC5leGNlcHRpb25zLmxlbmd0aCA9PT0gMCkge1xuICAgICAgLy8gZmFzdCBwYXNzXG4gICAgICByZXR1cm4gaW5kZXggKiB0aGlzLmNvbnRleHQuZGVmYXVsdFJvd0hlaWdodDtcbiAgICB9XG4gICAgY29uc3QgY2FjaGVkID0gdGhpcy5jYWNoZVtpbmRleF07XG4gICAgaWYgKGNhY2hlZCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICByZXR1cm4gY2FjaGVkO1xuICAgIH1cbiAgICAvL25lZWQgdG8gY29tcHV0ZSBpdFxuICAgIC8vIGZpbmQgdGhlIHN0YXJ0aW5nIHBvaW50IHdoZXJlIHRvIHN0YXJ0IGNvdW50aW5nXG4gICAgY29uc3Qgc3RhcnQgPSB0aGlzLmZpbmRWYWxpZFN0YXJ0KGluZGV4KTtcbiAgICBpZiAoc3RhcnQgPCAwKSB7XG4gICAgICB0aGlzLmZpbGxDYWNoZSgwLCBpbmRleCwgMCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuZmlsbENhY2hlKHN0YXJ0ICsgMSwgaW5kZXgsIHRoaXMuY2FjaGVbc3RhcnRdICsgdGhpcy5oZWlnaHRPZihzdGFydCkpO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcy5jYWNoZVtpbmRleF0hO1xuICB9XG5cbiAgcHJpdmF0ZSBmaWxsQ2FjaGUoZmlyc3Q6IG51bWJlciwgbGFzdDogbnVtYmVyLCBvZmZzZXQ6IG51bWJlciwgY2FsbGJhY2s/OiAoaW5kZXg6IG51bWJlciwga2V5OiBzdHJpbmcsIHBvczogbnVtYmVyKSA9PiB2b2lkKSB7XG4gICAgaWYgKGxhc3QgPD0gdGhpcy5sYXN0RmlsbGVkKSB7XG4gICAgICAvL2V2ZXJ5dGhpbmcgYWxyZWFkeSB0aGVyZVxuICAgICAgaWYgKCFjYWxsYmFjaykge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBmb3IgKGxldCBpID0gZmlyc3Q7IGkgPD0gbGFzdDsgKytpKSB7XG4gICAgICAgIGNhbGxiYWNrKGksIHRoaXMua2V5KGkpLCB0aGlzLmNhY2hlW2ldKTtcbiAgICAgIH1cbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgbGV0IHBvcyA9IG9mZnNldDtcbiAgICBmb3IgKGxldCBpID0gZmlyc3Q7IGkgPD0gbGFzdDsgKytpKSB7XG4gICAgICB0aGlzLmNhY2hlW2ldID0gcG9zO1xuICAgICAgY29uc3Qga2V5ID0gdGhpcy5rZXkoaSk7XG4gICAgICB0aGlzLmtleTJpbmRleC5zZXQoa2V5LCBpKTtcbiAgICAgIGlmIChjYWxsYmFjaykge1xuICAgICAgICBjYWxsYmFjayhpLCBrZXksIHBvcyk7XG4gICAgICB9XG4gICAgICBwb3MgKz0gdGhpcy5oZWlnaHRPZihpKTtcbiAgICB9XG4gIH1cblxuICBoZWlnaHRPZihpbmRleDogbnVtYmVyKSB7XG4gICAgY29uc3QgbG9va3VwID0gdGhpcy5jb250ZXh0LmV4Y2VwdGlvbnNMb29rdXA7XG4gICAgcmV0dXJuIGxvb2t1cC5oYXMoaW5kZXgpID8gbG9va3VwLmdldChpbmRleCkhIDogdGhpcy5jb250ZXh0LmRlZmF1bHRSb3dIZWlnaHQ7XG4gIH1cblxuICBleGNlcHRpb25IZWlnaHRPZihpbmRleDogbnVtYmVyLCByZXR1cm5EZWZhdWx0OiBib29sZWFuID0gZmFsc2UpIHtcbiAgICBjb25zdCBwYWRkaW5nID0gdGhpcy5jb250ZXh0LnBhZGRpbmcoaW5kZXgpO1xuICAgIGNvbnN0IGxvb2t1cCA9IHRoaXMuY29udGV4dC5leGNlcHRpb25zTG9va3VwO1xuICAgIGlmIChsb29rdXAuaGFzKGluZGV4KSkge1xuICAgICAgcmV0dXJuIGxvb2t1cC5nZXQoaW5kZXgpISAtIHBhZGRpbmc7XG4gICAgfVxuICAgIHJldHVybiByZXR1cm5EZWZhdWx0ID8gdGhpcy5jb250ZXh0LmRlZmF1bHRSb3dIZWlnaHQgLSBwYWRkaW5nIDogbnVsbDtcbiAgfVxuXG4gIHBhZGRpbmcoaW5kZXg6IG51bWJlcikge1xuICAgIHJldHVybiB0aGlzLmNvbnRleHQucGFkZGluZyhpbmRleCk7XG4gIH1cblxuICBwcml2YXRlIGZpbGxDYWNoZVRpbGxLZXkodGFyZ2V0OiBzdHJpbmcpIHtcbiAgICBsZXQgcG9zID0gMDtcbiAgICBmb3IgKGxldCBpID0gdGhpcy5sYXN0RmlsbGVkOyBpIDwgdGhpcy5jb250ZXh0Lm51bWJlck9mUm93czsgKytpLCArK3RoaXMubGFzdEZpbGxlZCkge1xuICAgICAgY29uc3QgYyA9IHRoaXMuY2FjaGVbaV07XG4gICAgICBpZiAoYyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHBvcyA9IGMgKyB0aGlzLmhlaWdodE9mKGkpO1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIC8vIG5ldyBvbmUgZmlsbCB1cFxuICAgICAgY29uc3Qga2V5ID0gdGhpcy5rZXkoaSk7XG4gICAgICB0aGlzLmNhY2hlW2ldID0gcG9zO1xuICAgICAgdGhpcy5rZXkyaW5kZXguc2V0KGtleSwgaSk7XG4gICAgICBpZiAoa2V5ID09PSB0YXJnZXQpIHtcbiAgICAgICAgcmV0dXJuIHtpbmRleDogaSwgcG9zfTtcbiAgICAgIH1cbiAgICAgIHBvcyArPSB0aGlzLmhlaWdodE9mKGkpO1xuICAgIH1cbiAgICByZXR1cm4ge2luZGV4OiAtMSwgcG9zOiAtMX07XG4gIH1cblxuICBwb3NpdGlvbnMoZmlyc3Q6IG51bWJlciwgbGFzdDogbnVtYmVyLCBvZmZzZXQ6IG51bWJlciwgY2FsbGJhY2s/OiAoaW5kZXg6IG51bWJlciwga2V5OiBzdHJpbmcsIHBvczogbnVtYmVyKSA9PiB2b2lkKSB7XG4gICAgdGhpcy5maWxsQ2FjaGUoZmlyc3QsIGxhc3QsIG9mZnNldCwgY2FsbGJhY2spO1xuICB9XG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL2FuaW1hdGlvbi9LZXlGaW5kZXIudHMiXSwibWFwcGluZ3MiOiJBQUVBO0FBS0E7QUFBQTtBQUFBO0FBSkE7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFPQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///5\n");

/***/ }),
/* 6 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return EScrollResult; });\nvar EScrollResult;\r\n(function (EScrollResult) {\r\n    EScrollResult[EScrollResult[\"NONE\"] = 0] = \"NONE\";\r\n    EScrollResult[EScrollResult[\"ALL\"] = 1] = \"ALL\";\r\n    EScrollResult[EScrollResult[\"PARTIAL\"] = 2] = \"PARTIAL\";\r\n})(EScrollResult || (EScrollResult = {}));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvbWl4aW4vSU1peGluLnRzP2Y5YzMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJRXhjZXB0aW9uQ29udGV4dH0gZnJvbSAnLi4vbG9naWMnO1xuXG4vKipcbiAqIHNjcm9sbGluZyByZXN1bHRcbiAqL1xuZXhwb3J0IGVudW0gRVNjcm9sbFJlc3VsdCB7XG4gIC8qKlxuICAgKiBub3RoaW5nIGhhcyBjaGFuZ2VkXG4gICAqL1xuICBOT05FLFxuICAvKipcbiAgICogYWxsIHJvd3MgbmVlZGVkIHRvIGJlIHJlY3JlYXRlZFxuICAgKi9cbiAgQUxMLFxuICAvKipcbiAgICogcGFydGlhbCByb3dzIG5lZWQgdG8gYmUgY3JlYXRlZFxuICAgKi9cbiAgUEFSVElBTFxufVxuXG4vKipcbiAqIGFkYXB0ZXIgY29udGV4dCBmb3IgbWl4aW5zIHRvIGF2b2lkIHB1YmxpYyBmaWVsZHNcbiAqL1xuZXhwb3J0IGludGVyZmFjZSBJTWl4aW5BZGFwdGVyIHtcbiAgcmVhZG9ubHkgdmlzaWJsZToge1xuICAgIC8vd3JpdGFibGVcbiAgICBmaXJzdDogbnVtYmVyO1xuICAgIGxhc3Q6IG51bWJlcjtcbiAgICBmb3JjZWRGaXJzdDogbnVtYmVyO1xuICAgIGZvcmNlZExhc3Q6IG51bWJlcjtcbiAgfTtcbiAgcmVhZG9ubHkgdmlzaWJsZUZpcnN0Um93UG9zOiBudW1iZXI7XG5cbiAgcmVhZG9ubHkgY29udGV4dDogSUV4Y2VwdGlvbkNvbnRleHQ7XG4gIHJlYWRvbmx5IHNjcm9sbGVyOiBIVE1MRWxlbWVudDtcblxuICBhZGRBdEJlZ2lubmluZyhmcm9tOiBudW1iZXIsIHRvOiBudW1iZXIsIGZyb3plblNoaWZ0OiBudW1iZXIpOiB2b2lkO1xuXG4gIGFkZEF0Qm90dG9tKGZyb206IG51bWJlciwgdG86IG51bWJlcik6IHZvaWQ7XG5cbiAgcmVtb3ZlRnJvbUJlZ2lubmluZyhmcm9tOiBudW1iZXIsIHRvOiBudW1iZXIsIGZyb3plblNoaWZ0OiBudW1iZXIpOiB2b2lkO1xuXG4gIHJlbW92ZUZyb21Cb3R0b20oZnJvbTogbnVtYmVyLCB0bzogbnVtYmVyKTogdm9pZDtcblxuICB1cGRhdGVPZmZzZXQoZmlyc3RSb3dQb3M6IG51bWJlcik6IHZvaWQ7XG5cbiAgLyoqXG4gICAqIHRyaWdnZXJzIHRvIHN5bmMgZnJvemVuIGl0ZW1zXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBmaXJzdFxuICAgKiBAcmV0dXJuIHtudW1iZXJ9IGZyb3plblNoaWZ0XG4gICAqL1xuICBzeW5jRnJvemVuPyhmaXJzdDogbnVtYmVyKTogbnVtYmVyO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIElNaXhpbiB7XG4gIG9uU2Nyb2xsZWQoaXNHb2luZ0Rvd246IGJvb2xlYW4sIHNjcm9sbFJlc3VsdDogRVNjcm9sbFJlc3VsdCk6IHZvaWQ7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSU1peGluQ2xhc3Mge1xuICBuZXcoYWRhcHRlcjogSU1peGluQWRhcHRlciwgb3B0aW9ucz86IGFueSk6IElNaXhpbjtcbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBzcmMvbWl4aW4vSU1peGluLnRzIl0sIm1hcHBpbmdzIjoiQUFLQTtBQUFBO0FBQUE7QUFJQTtBQUlBO0FBSUE7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///6\n");

/***/ }),
/* 7 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"d\"] = setTemplate;\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = setColumn;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__StyleManager__ = __webpack_require__(8);\n\r\nconst TEMPLATE = `\n  <header>\n    <article></article>\n  </header>\n  <main>\n    <article></article>\n  </main>`;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = TEMPLATE;\n\r\nfunction setTemplate(root) {\r\n    root.innerHTML = TEMPLATE;\r\n    return root;\r\n}\r\nfunction setColumn(node, column) {\r\n    node.style.gridColumnStart = column.id;\r\n    node.dataset.id = column.id;\r\n}\r\nclass GridStyleManager extends __WEBPACK_IMPORTED_MODULE_0__StyleManager__[\"a\" /* default */] {\r\n    constructor(root, id) {\r\n        super(root);\r\n        this.id = id;\r\n        const headerScroller = root.querySelector('header');\r\n        const bodyScroller = root.querySelector('main');\r\n        bodyScroller.addEventListener('scroll', () => {\r\n            headerScroller.scrollLeft = bodyScroller.scrollLeft;\r\n        });\r\n    }\r\n    static columnWidths(columns, unit = 'px') {\r\n        function repeatStandard(count, width) {\r\n            return `repeat(${count}, ${width})`;\r\n        }\r\n        const repeat = repeatStandard;\r\n        let lastWidth = 0;\r\n        let count = 0;\r\n        let r = '';\r\n        columns.forEach(({ width }) => {\r\n            if (lastWidth === width) {\r\n                count++;\r\n                return;\r\n            }\r\n            if (count > 0) {\r\n                r += count === 1 ? `${lastWidth}${unit} ` : `${repeat(count, `${lastWidth}${unit}`)} `;\r\n            }\r\n            count = 1;\r\n            lastWidth = width;\r\n        });\r\n        if (count > 0) {\r\n            r += count === 1 ? `${lastWidth}${unit}` : `${repeat(count, `${lastWidth}${unit}`)}`;\r\n        }\r\n        return r;\r\n    }\r\n    static gridColumn(columns, unit = 'px') {\r\n        const widths = GridStyleManager.columnWidths(columns, unit);\r\n        return `grid-template-columns: ${widths};\n      grid-template-areas: \"${columns.map((c) => c.id).join(' ')}\";`;\r\n    }\r\n    update(defaultRowHeight, columns, padding, tableId, unit = 'px') {\r\n        const selectors = tableId !== undefined ? this.tableIds(tableId, true) : {\r\n            header: `${this.id} > header > article`,\r\n            body: `${this.id} > main > article`\r\n        };\r\n        this.updateRule(`__heightsRule${selectors.body}`, `${selectors.body} > div {\n      height: ${defaultRowHeight}px;\n    }`);\r\n        if (columns.length === 0) {\r\n            this.deleteRule(`__widthRule${selectors.body}`);\r\n            return;\r\n        }\r\n        const content = GridStyleManager.gridColumn(columns, unit);\r\n        this.updateRule(`__widthRule${selectors.body}`, `${selectors.body} > div, ${selectors.header} { ${content} }`);\r\n        this.updateFrozen(columns, selectors, padding, unit);\r\n    }\r\n    remove(tableId) {\r\n        const selectors = this.tableIds(tableId, true);\r\n        this.deleteRule(`__heightsRule${selectors.body}`);\r\n        this.deleteRule(`__widthRule${selectors.body}`);\r\n        const prefix = `__frozen${selectors.body}_`;\r\n        const rules = this.ruleNames.reduce((a, b) => a + (b.startsWith(prefix) ? 1 : 0), 0);\r\n        for (let i = 0; i < rules; ++i) {\r\n            this.deleteRule(`${prefix}${i}`);\r\n        }\r\n    }\r\n    tableIds(tableId, asSelector = false) {\r\n        const cleanId = this.id.startsWith('#') ? this.id.slice(1) : this.id;\r\n        return {\r\n            header: `${asSelector ? '#' : ''}${cleanId}_H${tableId}`,\r\n            body: `${asSelector ? '#' : ''}${cleanId}_B${tableId}`\r\n        };\r\n    }\r\n    updateFrozen(columns, selectors, _padding, unit) {\r\n        const prefix = `__frozen${selectors.body}_`;\r\n        const rules = this.ruleNames.reduce((a, b) => a + (b.startsWith(prefix) ? 1 : 0), 0);\r\n        const frozen = columns.filter((c) => c.frozen);\r\n        if (frozen.length <= 0) {\r\n            for (let i = 0; i < rules; ++i) {\r\n                this.deleteRule(`${prefix}${i}`);\r\n            }\r\n            return;\r\n        }\r\n        let offset = frozen[0].width;\r\n        frozen.slice(1).forEach((c, i) => {\r\n            const rule = `${selectors.body} > div > .frozen[data-id=\"${c.id}\"], ${selectors.header} .frozen[data-id=\"${c.id}\"] {\n        left: ${offset}${unit};\n      }`;\r\n            offset += c.width;\r\n            this.updateRule(`${prefix}${i}`, rule);\r\n        });\r\n        for (let i = frozen.length - 1; i < rules; ++i) {\r\n            this.deleteRule(`${prefix}${i}`);\r\n        }\r\n    }\r\n}\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = GridStyleManager;\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///7\n");

/***/ }),
/* 8 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("class StyleManager {\r\n    constructor(root) {\r\n        this.rules = new Map();\r\n        this.node = root.ownerDocument.createElement('style');\r\n        root.appendChild(this.node);\r\n    }\r\n    destroy() {\r\n        this.node.remove();\r\n    }\r\n    recreate() {\r\n        this.node.innerHTML = Array.from(this.rules.values()).join('\\n');\r\n    }\r\n    addRule(id, rule) {\r\n        this.rules.set(id, rule);\r\n        this.recreate();\r\n        return id;\r\n    }\r\n    updateRule(id, rule) {\r\n        this.rules.set(id, rule);\r\n        this.recreate();\r\n        return id;\r\n    }\r\n    deleteRule(id) {\r\n        const r = this.rules.get(id);\r\n        if (!r) {\r\n            return;\r\n        }\r\n        this.rules.delete(id);\r\n        this.recreate();\r\n    }\r\n    get ruleNames() {\r\n        return Array.from(this.rules.keys());\r\n    }\r\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = StyleManager;\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvc3R5bGUvU3R5bGVNYW5hZ2VyLnRzPzIzNTQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gaW1wb3J0IG1hbnVhbGx5IGltcG9ydCAnLi9zdHlsZS5zY3NzJztcblxuLyoqXG4gKiB1dGlsaXR5IGZvciBjdXN0b20gZ2VuZXJhdGVkIENTUyBydWxlc1xuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTdHlsZU1hbmFnZXIge1xuICBwcml2YXRlIHJlYWRvbmx5IHJ1bGVzID0gbmV3IE1hcDxzdHJpbmcsIHN0cmluZz4oKTtcbiAgcHJpdmF0ZSByZWFkb25seSBub2RlOiBIVE1MU3R5bGVFbGVtZW50O1xuXG4gIC8qKlxuICAgKiB0aGUgcGFyZW50IGVsZW1lbnQgdG8gYXBwZW5kIHRoaXMgbWFuYWdlZCBzdHlsZVxuICAgKiBAcGFyYW0ge0hUTUxFbGVtZW50fSByb290XG4gICAqL1xuICBjb25zdHJ1Y3Rvcihyb290OiBIVE1MRWxlbWVudCkge1xuICAgIHRoaXMubm9kZSA9IHJvb3Qub3duZXJEb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xuICAgIHJvb3QuYXBwZW5kQ2hpbGQodGhpcy5ub2RlKTtcbiAgfVxuXG4gIGRlc3Ryb3koKSB7XG4gICAgdGhpcy5ub2RlLnJlbW92ZSgpO1xuICB9XG5cbiAgcHJpdmF0ZSByZWNyZWF0ZSgpIHtcbiAgICB0aGlzLm5vZGUuaW5uZXJIVE1MID0gQXJyYXkuZnJvbSh0aGlzLnJ1bGVzLnZhbHVlcygpKS5qb2luKCdcXG4nKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBhZGQgYSBjdXN0b20gY3NzIHJ1bGVcbiAgICogQHBhcmFtIHtzdHJpbmd9IGlkIHVuaXF1ZSBpZCBvZiB0aGUgcnVsZSBmb3IgbGF0ZXIgaWRlbnRpZmljYXRpb25cbiAgICogQHBhcmFtIHtzdHJpbmd9IHJ1bGUgdGhlIGNzcyBydWxlIGl0c2VsZlxuICAgKiBAcmV0dXJucyB7c3RyaW5nfSB0aGUgaWQgYWdhaW5cbiAgICovXG4gIGFkZFJ1bGUoaWQ6IHN0cmluZywgcnVsZTogc3RyaW5nKSB7XG4gICAgLy8gYXBwZW5kXG4gICAgdGhpcy5ydWxlcy5zZXQoaWQsIHJ1bGUpO1xuICAgIHRoaXMucmVjcmVhdGUoKTtcbiAgICByZXR1cm4gaWQ7XG4gIH1cblxuICAvKipcbiAgICogdXBkYXRlcyBvciBhZGQgYSBydWxlLCBzZWUgQGFkZFJ1bGVcbiAgICogQHBhcmFtIHtzdHJpbmd9IGlkIHVuaXF1ZSBpZCBvZiB0aGUgcnVsZSBmb3IgbGF0ZXIgaWRlbnRpZmljYXRpb25cbiAgICogQHBhcmFtIHtzdHJpbmd9IHJ1bGUgdGhlIGNzcyBydWxlIGl0c2VsZlxuICAgKiBAcmV0dXJucyB7c3RyaW5nfSB0aGUgaWQgYWdhaW5cbiAgICovXG4gIHVwZGF0ZVJ1bGUoaWQ6IHN0cmluZywgcnVsZTogc3RyaW5nKSB7XG4gICAgdGhpcy5ydWxlcy5zZXQoaWQsIHJ1bGUpO1xuICAgIHRoaXMucmVjcmVhdGUoKTtcbiAgICByZXR1cm4gaWQ7XG4gIH1cblxuICAvKipcbiAgICogZGVsZXRlcyB0aGUgZ2l2ZW4gcnVsZSBieSBpZFxuICAgKiBAcGFyYW0ge3N0cmluZ30gaWQgdGhlIHJ1bGUgdG8gZGVsZXRlXG4gICAqL1xuICBkZWxldGVSdWxlKGlkOiBzdHJpbmcpIHtcbiAgICBjb25zdCByID0gdGhpcy5ydWxlcy5nZXQoaWQpO1xuICAgIGlmICghcikge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0aGlzLnJ1bGVzLmRlbGV0ZShpZCk7XG4gICAgdGhpcy5yZWNyZWF0ZSgpO1xuICB9XG5cbiAgLyoqXG4gICAqIGdldCBhIGxpc3Qgb2YgYWxsIHJlZ2lzdGVyZWQgcnVsZSBpZHNcbiAgICogQHJldHVybnMge3N0cmluZ1tdfVxuICAgKi9cbiAgcHJvdGVjdGVkIGdldCBydWxlTmFtZXMoKSB7XG4gICAgcmV0dXJuIEFycmF5LmZyb20odGhpcy5ydWxlcy5rZXlzKCkpO1xuICB9XG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL3N0eWxlL1N0eWxlTWFuYWdlci50cyJdLCJtYXBwaW5ncyI6IkFBS0E7QUFRQTtBQVBBO0FBUUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBUUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQVFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///8\n");

/***/ }),
/* 9 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__logic__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixin__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__style_GridStyleManager__ = __webpack_require__(7);\n\r\n\r\n\r\nconst debug = false;\r\nclass ACellAdapter {\r\n    constructor(header, style, tableId, ...mixinClasses) {\r\n        this.header = header;\r\n        this.style = style;\r\n        this.tableId = tableId;\r\n        this.cellPool = [];\r\n        this.visibleColumns = {\r\n            frozen: [],\r\n            first: 0,\r\n            forcedFirst: 0,\r\n            last: -1,\r\n            forcedLast: -1\r\n        };\r\n        this.visibleFirstColumnPos = 0;\r\n        this.columnAdapter = this.createColumnAdapter();\r\n        this.columnMixins = mixinClasses.map((mixinClass) => new mixinClass(this.columnAdapter));\r\n        this.columnFragment = header.ownerDocument.createDocumentFragment();\r\n    }\r\n    get headerScroller() {\r\n        return this.header.parentElement;\r\n    }\r\n    addColumnMixin(mixinClass, options) {\r\n        this.columnMixins.push(new mixinClass(this.columnAdapter, options));\r\n    }\r\n    createColumnAdapter() {\r\n        const r = {\r\n            visible: this.visibleColumns,\r\n            addAtBeginning: this.addColumnAtStart.bind(this),\r\n            addAtBottom: this.addColumnAtEnd.bind(this),\r\n            removeFromBeginning: this.removeColumnFromStart.bind(this),\r\n            removeFromBottom: this.removeColumnFromEnd.bind(this),\r\n            updateOffset: this.updateColumnOffset.bind(this),\r\n            scroller: this.headerScroller,\r\n            syncFrozen: this.syncFrozen.bind(this)\r\n        };\r\n        Object.defineProperties(r, {\r\n            visibleFirstRowPos: {\r\n                get: () => this.visibleFirstColumnPos,\r\n                enumerable: true\r\n            },\r\n            context: {\r\n                get: () => this.context.column,\r\n                enumerable: true\r\n            },\r\n        });\r\n        return r;\r\n    }\r\n    init() {\r\n        const context = this.context;\r\n        this.style.update(context.defaultRowHeight - context.padding(-1), context.columns, context.column.padding, this.tableId);\r\n        context.columns.forEach(() => {\r\n            this.cellPool.push([]);\r\n        });\r\n    }\r\n    onScrolledHorizontally(scrollLeft, clientWidth, isGoingRight) {\r\n        const scrollResult = this.onScrolledHorizontallyImpl(scrollLeft, clientWidth);\r\n        this.columnMixins.forEach((mixin) => mixin.onScrolled(isGoingRight, scrollResult));\r\n        return scrollResult;\r\n    }\r\n    removeColumnFromStart(from, to, frozenShift = this.visibleColumns.frozen.length) {\r\n        this.forEachRow((row) => {\r\n            this.removeCellFromStart(row, from, to, frozenShift);\r\n        });\r\n        if (debug) {\r\n            this.verifyRows();\r\n        }\r\n    }\r\n    removeCellFromStart(row, from, to, frozenShift) {\r\n        for (let i = from; i <= to; ++i) {\r\n            const node = (frozenShift === 0 ? row.firstElementChild : row.children[frozenShift]);\r\n            node.remove();\r\n            this.recycleCell(node, i);\r\n        }\r\n        if (debug) {\r\n            verifyRow(row, -1, this.context.columns);\r\n        }\r\n    }\r\n    removeColumnFromEnd(from, to) {\r\n        this.forEachRow((row) => {\r\n            this.removeCellFromEnd(row, from, to);\r\n        });\r\n        if (debug) {\r\n            this.verifyRows();\r\n        }\r\n    }\r\n    removeCellFromEnd(row, from, to) {\r\n        for (let i = to; i >= from; --i) {\r\n            const node = row.lastElementChild;\r\n            node.remove();\r\n            this.recycleCell(node, i);\r\n        }\r\n        if (debug) {\r\n            verifyRow(row, -1, this.context.columns);\r\n        }\r\n    }\r\n    removeFrozenCells(row, columnIndices, shift) {\r\n        for (const columnIndex of columnIndices) {\r\n            const node = row.children[shift];\r\n            node.remove();\r\n            this.recycleCell(node, columnIndex);\r\n        }\r\n        if (debug) {\r\n            verifyRow(row, -1, this.context.columns);\r\n        }\r\n    }\r\n    removeFrozenColumns(columnIndices, shift) {\r\n        this.forEachRow((row) => {\r\n            this.removeFrozenCells(row, columnIndices, shift);\r\n        });\r\n        if (debug) {\r\n            this.verifyRows();\r\n        }\r\n    }\r\n    removeAllColumns(includingFrozen) {\r\n        this.forEachRow((row) => {\r\n            this.removeAllCells(row, includingFrozen);\r\n        });\r\n        if (debug) {\r\n            this.verifyRows();\r\n        }\r\n    }\r\n    removeAllCells(row, includingFrozen, shift = this.visibleColumns.first) {\r\n        const arr = Array.from(row.children);\r\n        const frozen = this.visibleColumns.frozen;\r\n        row.innerHTML = '';\r\n        if (includingFrozen || frozen.length === 0) {\r\n            for (const i of frozen) {\r\n                this.recycleCell(arr.shift(), i);\r\n            }\r\n        }\r\n        else {\r\n            for (const _ of frozen) {\r\n                row.appendChild(arr.shift());\r\n            }\r\n        }\r\n        arr.forEach((item, i) => {\r\n            this.recycleCell(item, i + shift);\r\n        });\r\n        if (debug) {\r\n            verifyRow(row, -1, this.context.columns);\r\n        }\r\n    }\r\n    selectCell(row, column, columns) {\r\n        const pool = this.cellPool[column];\r\n        const columnObj = columns[column];\r\n        if (pool.length > 0) {\r\n            const item = pool.pop();\r\n            const r = this.updateCell(item, row, columnObj);\r\n            if (r && r !== item) {\r\n                Object(__WEBPACK_IMPORTED_MODULE_2__style_GridStyleManager__[\"c\" /* setColumn */])(r, columnObj);\r\n            }\r\n            return r ? r : item;\r\n        }\r\n        const r = this.createCell(this.header.ownerDocument, row, columnObj);\r\n        Object(__WEBPACK_IMPORTED_MODULE_2__style_GridStyleManager__[\"c\" /* setColumn */])(r, columnObj);\r\n        return r;\r\n    }\r\n    recycleCell(item, column) {\r\n        this.cellPool[column].push(item);\r\n    }\r\n    addColumnAtStart(from, to, frozenShift = this.visibleColumns.frozen.length) {\r\n        const { columns } = this.context;\r\n        this.forEachRow((row, rowIndex) => {\r\n            this.addCellAtStart(row, rowIndex, from, to, frozenShift, columns);\r\n        });\r\n        if (debug) {\r\n            this.verifyRows();\r\n        }\r\n    }\r\n    addCellAtStart(row, rowIndex, from, to, frozenShift, columns) {\r\n        if (debug) {\r\n            verifyRow(row, rowIndex, this.context.columns);\r\n        }\r\n        for (let i = to; i >= from; --i) {\r\n            const cell = this.selectCell(rowIndex, i, columns);\r\n            row.insertBefore(cell, frozenShift > 0 ? row.children[frozenShift] : row.firstChild);\r\n        }\r\n        if (debug) {\r\n            verifyRow(row, rowIndex, this.context.columns);\r\n        }\r\n    }\r\n    insertFrozenCells(row, rowIndex, columnIndices, shift, columns) {\r\n        const before = row.children[shift];\r\n        for (const i of columnIndices) {\r\n            const cell = this.selectCell(rowIndex, i, columns);\r\n            if (before) {\r\n                row.insertBefore(cell, before);\r\n            }\r\n            else {\r\n                row.appendChild(cell);\r\n            }\r\n        }\r\n    }\r\n    insertFrozenColumns(columnIndices, shift) {\r\n        const { columns } = this.context;\r\n        this.forEachRow((row, rowIndex) => {\r\n            this.insertFrozenCells(row, rowIndex, columnIndices, shift, columns);\r\n        });\r\n    }\r\n    addColumnAtEnd(from, to) {\r\n        const { columns } = this.context;\r\n        this.forEachRow((row, rowIndex) => {\r\n            this.addCellAtEnd(row, rowIndex, from, to, columns);\r\n        });\r\n        if (debug) {\r\n            this.verifyRows();\r\n        }\r\n    }\r\n    verifyRows() {\r\n        const { columns } = this.context;\r\n        this.forEachRow((row, rowIndex) => verifyRow(row, rowIndex, columns));\r\n    }\r\n    addCellAtEnd(row, rowIndex, from, to, columns) {\r\n        for (let i = from; i <= to; ++i) {\r\n            const cell = this.selectCell(rowIndex, i, columns);\r\n            row.appendChild(cell);\r\n        }\r\n        if (debug) {\r\n            verifyRow(row, rowIndex, this.context.columns);\r\n        }\r\n    }\r\n    updateHeaders() {\r\n        const { columns } = this.context;\r\n        Array.from(this.header.children).forEach((node, i) => {\r\n            this.updateHeader(node, columns[i]);\r\n        });\r\n    }\r\n    recreate(left, width) {\r\n        const context = this.context;\r\n        if (context.hasFrozenColumns === undefined) {\r\n            context.hasFrozenColumns = context.columns.some((c) => c.frozen);\r\n        }\r\n        this.style.update(context.defaultRowHeight - context.padding(-1), context.columns, context.column.padding, this.tableId);\r\n        this.clearPool();\r\n        for (let i = this.cellPool.length; i < context.columns.length; ++i) {\r\n            this.cellPool.push([]);\r\n        }\r\n        {\r\n            const fragment = this.columnFragment;\r\n            const document = fragment.ownerDocument;\r\n            this.header.innerHTML = '';\r\n            context.columns.forEach((col) => {\r\n                const n = this.createHeader(document, col);\r\n                Object(__WEBPACK_IMPORTED_MODULE_2__style_GridStyleManager__[\"c\" /* setColumn */])(n, col);\r\n                fragment.appendChild(n);\r\n            });\r\n            this.header.appendChild(fragment);\r\n        }\r\n        const { first, last, firstRowPos } = Object(__WEBPACK_IMPORTED_MODULE_0__logic__[\"d\" /* range */])(left, width, context.column.defaultRowHeight, context.column.exceptions, context.column.numberOfRows);\r\n        this.visibleColumns.first = this.visibleColumns.forcedFirst = first;\r\n        this.visibleColumns.last = this.visibleColumns.forcedLast = last;\r\n        if (context.hasFrozenColumns) {\r\n            const { target } = Object(__WEBPACK_IMPORTED_MODULE_0__logic__[\"f\" /* updateFrozen */])([], context.columns, first);\r\n            this.visibleColumns.frozen = target;\r\n        }\r\n        this.updateColumnOffset(firstRowPos);\r\n    }\r\n    clearPool() {\r\n        this.cellPool.forEach((p) => p.splice(0, p.length));\r\n    }\r\n    updateColumnOffset(firstColumnPos) {\r\n        this.visibleFirstColumnPos = firstColumnPos;\r\n    }\r\n    createRow(node, rowIndex) {\r\n        const { columns, hasFrozenColumns } = this.context;\r\n        const visible = this.visibleColumns;\r\n        if (hasFrozenColumns) {\r\n            for (const i of visible.frozen) {\r\n                const cell = this.selectCell(rowIndex, i, columns);\r\n                node.appendChild(cell);\r\n            }\r\n        }\r\n        for (let i = visible.first; i <= visible.last; ++i) {\r\n            const cell = this.selectCell(rowIndex, i, columns);\r\n            node.appendChild(cell);\r\n        }\r\n    }\r\n    updateRow(node, rowIndex) {\r\n        const { columns, hasFrozenColumns } = this.context;\r\n        const visible = this.visibleColumns;\r\n        const existing = Array.from(node.children);\r\n        switch (existing.length) {\r\n            case 0:\r\n                if (hasFrozenColumns) {\r\n                    this.insertFrozenCells(node, rowIndex, visible.frozen, 0, columns);\r\n                }\r\n                this.addCellAtEnd(node, rowIndex, visible.first, visible.last, columns);\r\n                break;\r\n            case 1:\r\n                const old = existing[0];\r\n                const id = old.dataset.id;\r\n                const columnIndex = columns.findIndex((c) => c.id === id);\r\n                node.removeChild(old);\r\n                this.recycleCell(old, columnIndex);\r\n                if (hasFrozenColumns) {\r\n                    this.insertFrozenCells(node, rowIndex, visible.frozen, 0, columns);\r\n                }\r\n                this.addCellAtEnd(node, rowIndex, visible.first, visible.last, columns);\r\n                break;\r\n            default:\r\n                if (hasFrozenColumns) {\r\n                    const currentFrozen = [];\r\n                    for (const node of existing) {\r\n                        const id = node.dataset.id;\r\n                        const col = columns.findIndex((c) => c.id === id);\r\n                        if (columns[col].frozen) {\r\n                            currentFrozen.push(col);\r\n                        }\r\n                        else {\r\n                            break;\r\n                        }\r\n                    }\r\n                    const { common, removed, added } = Object(__WEBPACK_IMPORTED_MODULE_0__logic__[\"a\" /* frozenDelta */])(currentFrozen, visible.frozen);\r\n                    existing.slice(0, common).forEach((child, i) => {\r\n                        const col = columns[currentFrozen[i]];\r\n                        const cell = this.updateCell(child, rowIndex, col);\r\n                        if (cell && cell !== child) {\r\n                            Object(__WEBPACK_IMPORTED_MODULE_2__style_GridStyleManager__[\"c\" /* setColumn */])(cell, col);\r\n                            node.replaceChild(cell, child);\r\n                        }\r\n                    });\r\n                    this.removeFrozenCells(node, removed, common);\r\n                    this.insertFrozenCells(node, rowIndex, added, common, columns);\r\n                    existing.splice(0, currentFrozen.length);\r\n                }\r\n                if (existing.length === 0) {\r\n                    break;\r\n                }\r\n                const firstId = existing[0].dataset.id;\r\n                const lastId = existing[existing.length - 1].dataset.id;\r\n                const firstIndex = columns.findIndex((c) => c.id === firstId);\r\n                const lastIndex = columns.findIndex((c) => c.id === lastId);\r\n                const frozenShift = visible.frozen.length;\r\n                if (firstIndex === visible.first && lastIndex === visible.last) {\r\n                    existing.forEach((child, i) => {\r\n                        const col = columns[i + visible.first];\r\n                        const cell = this.updateCell(child, rowIndex, col);\r\n                        if (cell && cell !== child) {\r\n                            Object(__WEBPACK_IMPORTED_MODULE_2__style_GridStyleManager__[\"c\" /* setColumn */])(cell, col);\r\n                            node.replaceChild(cell, child);\r\n                        }\r\n                    });\r\n                }\r\n                else if (visible.last > firstIndex || visible.first < lastIndex) {\r\n                    this.removeAllCells(node, false, firstIndex);\r\n                    this.addCellAtStart(node, rowIndex, visible.first, visible.last, frozenShift, columns);\r\n                }\r\n                else if (visible.first < firstIndex) {\r\n                    this.removeCellFromEnd(node, visible.last + 1, firstIndex);\r\n                    this.addCellAtStart(node, rowIndex, visible.first, firstIndex - 1, frozenShift, columns);\r\n                }\r\n                else {\r\n                    this.removeCellFromStart(node, firstIndex, visible.first - 1, frozenShift);\r\n                    this.addCellAtEnd(node, rowIndex, lastIndex + 1, visible.last, columns);\r\n                }\r\n        }\r\n    }\r\n    syncFrozen(first) {\r\n        const { columns, hasFrozenColumns } = this.context;\r\n        const visible = this.visibleColumns;\r\n        if (!hasFrozenColumns) {\r\n            return 0;\r\n        }\r\n        if (first === 0) {\r\n            if (visible.frozen.length > 0) {\r\n                this.removeFrozenColumns(visible.frozen, 0);\r\n                visible.frozen = [];\r\n            }\r\n            return 0;\r\n        }\r\n        const old = visible.frozen.length;\r\n        const { target, added, removed } = Object(__WEBPACK_IMPORTED_MODULE_0__logic__[\"f\" /* updateFrozen */])(visible.frozen, columns, first);\r\n        if (removed.length > 0) {\r\n            this.removeFrozenColumns(removed, old - removed.length);\r\n        }\r\n        if (added.length > 0) {\r\n            this.insertFrozenColumns(added, old - removed.length);\r\n        }\r\n        visible.frozen = target;\r\n        return target.length;\r\n    }\r\n    onScrolledHorizontallyImpl(scrollLeft, clientWidth) {\r\n        const { column } = this.context;\r\n        const { first, last, firstRowPos } = Object(__WEBPACK_IMPORTED_MODULE_0__logic__[\"d\" /* range */])(scrollLeft, clientWidth, column.defaultRowHeight, column.exceptions, column.numberOfRows);\r\n        const visible = this.visibleColumns;\r\n        visible.forcedFirst = first;\r\n        visible.forcedLast = last;\r\n        if ((first - visible.first) >= 0 && (last - visible.last) <= 0) {\r\n            return __WEBPACK_IMPORTED_MODULE_1__mixin__[\"a\" /* EScrollResult */].NONE;\r\n        }\r\n        let r = __WEBPACK_IMPORTED_MODULE_1__mixin__[\"a\" /* EScrollResult */].PARTIAL;\r\n        const frozenShift = this.syncFrozen(first);\r\n        if (first > visible.last || last < visible.first) {\r\n            this.removeAllColumns(false);\r\n            this.addColumnAtEnd(first, last);\r\n            r = __WEBPACK_IMPORTED_MODULE_1__mixin__[\"a\" /* EScrollResult */].ALL;\r\n        }\r\n        else if (first < visible.first) {\r\n            this.removeColumnFromEnd(last + 1, visible.last);\r\n            this.addColumnAtStart(first, visible.first - 1, frozenShift);\r\n        }\r\n        else {\r\n            this.removeColumnFromStart(visible.first, first - 1, frozenShift);\r\n            this.addColumnAtEnd(visible.last + 1, last);\r\n        }\r\n        visible.first = first;\r\n        visible.last = last;\r\n        this.updateColumnOffset(firstRowPos);\r\n        return r;\r\n    }\r\n}\n/* unused harmony export ACellAdapter */\n\r\n/* harmony default export */ __webpack_exports__[\"a\"] = (ACellAdapter);\r\nfunction verifyRow(row, index, columns) {\r\n    const cols = Array.from(row.children);\r\n    if (cols.length <= 1) {\r\n        return;\r\n    }\r\n    const colObjs = cols.map((c) => columns.find((d) => d.id === c.dataset.id));\r\n    console.assert(colObjs.every((d) => Boolean(d)), 'all columns must exist', index);\r\n    console.assert(colObjs.every((d, i) => i === 0 || d.index >= colObjs[i - 1].index), 'all columns in ascending order', index);\r\n    console.assert((new Set(colObjs)).size === colObjs.length, 'unique columns', colObjs);\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///9\n");

/***/ }),
/* 10 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ACellRenderer__ = __webpack_require__(11);\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"ACellRenderer\", function() { return __WEBPACK_IMPORTED_MODULE_0__ACellRenderer__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__ARowRenderer__ = __webpack_require__(2);\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"ARowRenderer\", function() { return __WEBPACK_IMPORTED_MODULE_1__ARowRenderer__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__logic__ = __webpack_require__(0);\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"uniformContext\", function() { return __WEBPACK_IMPORTED_MODULE_2__logic__[\"e\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"nonUniformContext\", function() { return __WEBPACK_IMPORTED_MODULE_2__logic__[\"b\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"randomContext\", function() { return __WEBPACK_IMPORTED_MODULE_2__logic__[\"c\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"range\", function() { return __WEBPACK_IMPORTED_MODULE_2__logic__[\"d\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"frozenDelta\", function() { return __WEBPACK_IMPORTED_MODULE_2__logic__[\"a\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"updateFrozen\", function() { return __WEBPACK_IMPORTED_MODULE_2__logic__[\"f\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__abortAble__ = __webpack_require__(4);\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"ABORTED\", function() { return __WEBPACK_IMPORTED_MODULE_3__abortAble__[\"a\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"isAbortAble\", function() { return __WEBPACK_IMPORTED_MODULE_3__abortAble__[\"b\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__style__ = __webpack_require__(3);\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"GridStyleManager\", function() { return __WEBPACK_IMPORTED_MODULE_4__style__[\"a\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"setColumn\", function() { return __WEBPACK_IMPORTED_MODULE_4__style__[\"d\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"TEMPLATE\", function() { return __WEBPACK_IMPORTED_MODULE_4__style__[\"c\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"setTemplate\", function() { return __WEBPACK_IMPORTED_MODULE_4__style__[\"e\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"StyleManager\", function() { return __WEBPACK_IMPORTED_MODULE_4__style__[\"b\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__mixin__ = __webpack_require__(1);\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"EScrollResult\", function() { return __WEBPACK_IMPORTED_MODULE_5__mixin__[\"a\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"PrefetchMixin\", function() { return __WEBPACK_IMPORTED_MODULE_5__mixin__[\"b\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__table__ = __webpack_require__(14);\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"ACellTableSection\", function() { return __WEBPACK_IMPORTED_MODULE_6__table__[\"a\"]; });\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst version = \"1.0.0-20180108-082103\";\n/* harmony export (immutable) */ __webpack_exports__[\"version\"] = version;\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2luZGV4LnRzP2Y0MWUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSAnLi9BQ2VsbFJlbmRlcmVyJztcbmV4cG9ydCAqIGZyb20gJy4vQVJvd1JlbmRlcmVyJztcbmV4cG9ydCAqIGZyb20gJy4vbG9naWMnO1xuZXhwb3J0ICogZnJvbSAnLi9hYm9ydEFibGUnO1xuZXhwb3J0ICogZnJvbSAnLi9zdHlsZSc7XG5leHBvcnQgKiBmcm9tICcuL21peGluJztcbmV4cG9ydCAqIGZyb20gJy4vdGFibGUnO1xuXG5kZWNsYXJlIGNvbnN0IF9fVkVSU0lPTl9fOiBzdHJpbmc7XG5leHBvcnQgY29uc3QgdmVyc2lvbiA9IF9fVkVSU0lPTl9fO1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHNyYy9pbmRleC50cyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFBQTtBQUFBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///10\n");

/***/ }),
/* 11 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ARowRenderer__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__style__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__table_internal_ACellAdapter__ = __webpack_require__(9);\n\r\n\r\n\r\nclass ACellRenderer extends __WEBPACK_IMPORTED_MODULE_0__ARowRenderer__[\"a\" /* ARowRenderer */] {\r\n    constructor(root, htmlId, options = {}) {\r\n        super(Object(__WEBPACK_IMPORTED_MODULE_1__style__[\"e\" /* setTemplate */])(root).querySelector('main > article'), options);\r\n        this.root = root;\r\n        root.classList.add('lineup-engine');\r\n        this.style = new __WEBPACK_IMPORTED_MODULE_1__style__[\"a\" /* GridStyleManager */](this.root, htmlId);\r\n        const that = this;\r\n        class LocalCell extends __WEBPACK_IMPORTED_MODULE_2__table_internal_ACellAdapter__[\"a\" /* default */] {\r\n            get context() {\r\n                return that.context;\r\n            }\r\n            createHeader(document, column) {\r\n                return that.createHeader(document, column);\r\n            }\r\n            updateHeader(node, column) {\r\n                return that.updateHeader(node, column);\r\n            }\r\n            createCell(document, index, column) {\r\n                return that.createCell(document, index, column);\r\n            }\r\n            updateCell(node, index, column) {\r\n                return that.updateCell(node, index, column);\r\n            }\r\n            forEachRow(callback) {\r\n                return that.forEachRow(callback);\r\n            }\r\n        }\r\n        this.cell = new LocalCell(this.header, this.style, undefined, ...(options.mixins || []));\r\n    }\r\n    get header() {\r\n        return this.root.querySelector('header > article');\r\n    }\r\n    get headerScroller() {\r\n        return this.root.querySelector('header');\r\n    }\r\n    addColumnMixin(mixinClass, options) {\r\n        this.cell.addColumnMixin(mixinClass, options);\r\n    }\r\n    init() {\r\n        this.cell.init();\r\n        const scroller = this.body.parentElement;\r\n        let oldLeft = scroller.scrollLeft;\r\n        const handler = () => {\r\n            const left = scroller.scrollLeft;\r\n            if (Math.abs(oldLeft - left) < this.options.minScrollDelta) {\r\n                return;\r\n            }\r\n            const isGoingRight = left > oldLeft;\r\n            oldLeft = left;\r\n            this.onScrolledHorizontally(left, scroller.clientWidth, isGoingRight);\r\n        };\r\n        scroller.addEventListener('scroll', this.createDelayedHandler(handler));\r\n        super.init();\r\n    }\r\n    destroy() {\r\n        super.destroy();\r\n        this.root.remove();\r\n    }\r\n    onScrolledHorizontally(scrollLeft, clientWidth, isGoingRight) {\r\n        return this.cell.onScrolledHorizontally(scrollLeft, clientWidth, isGoingRight);\r\n    }\r\n    updateHeaders() {\r\n        this.cell.updateHeaders();\r\n    }\r\n    updateColumnWidths() {\r\n        const context = this.context;\r\n        this.style.update(context.defaultRowHeight - context.padding(-1), context.columns, context.column.padding);\r\n    }\r\n    recreate(ctx) {\r\n        const scroller = this.bodyScroller;\r\n        const oldLeft = scroller.scrollLeft;\r\n        this.cell.recreate(oldLeft, scroller.clientWidth);\r\n        super.recreate(ctx);\r\n        scroller.scrollLeft = oldLeft;\r\n    }\r\n    clearPool() {\r\n        super.clearPool();\r\n        this.cell.clearPool();\r\n    }\r\n    createRow(node, rowIndex) {\r\n        this.cell.createRow(node, rowIndex);\r\n    }\r\n    updateRow(node, rowIndex) {\r\n        this.cell.updateRow(node, rowIndex);\r\n    }\r\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = ACellRenderer;\n\r\n/* unused harmony default export */ var _unused_webpack_default_export = (ACellRenderer);\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///11\n");

/***/ }),
/* 12 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return EAnimationMode; });\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = noAnimationChange;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__KeyFinder__ = __webpack_require__(5);\n/* unused harmony reexport KeyFinder */\n\r\nvar EAnimationMode;\r\n(function (EAnimationMode) {\r\n    EAnimationMode[EAnimationMode[\"UPDATE\"] = 0] = \"UPDATE\";\r\n    EAnimationMode[EAnimationMode[\"UPDATE_CREATE\"] = 1] = \"UPDATE_CREATE\";\r\n    EAnimationMode[EAnimationMode[\"UPDATE_REMOVE\"] = 2] = \"UPDATE_REMOVE\";\r\n    EAnimationMode[EAnimationMode[\"SHOW\"] = 3] = \"SHOW\";\r\n    EAnimationMode[EAnimationMode[\"HIDE\"] = 4] = \"HIDE\";\r\n})(EAnimationMode || (EAnimationMode = {}));\r\nconst NO_CHANGE_DELTA = 1;\r\nfunction noAnimationChange({ previous, mode, nodeY, current }, previousHeight, currentHeight) {\r\n    const prev = previous.height == null ? previousHeight : previous.height;\r\n    const curr = current.height == null ? currentHeight : current.height;\r\n    return mode === EAnimationMode.UPDATE && (Math.abs(previous.y - nodeY) <= NO_CHANGE_DELTA) && (Math.abs(prev - curr) <= NO_CHANGE_DELTA);\r\n}\r\nconst MAX_ANIMATION_TIME = 1100;\r\nconst defaultPhases = [\r\n    {\r\n        delay: 0,\r\n        apply({ mode, previous, nodeY, current, node }) {\r\n            node.dataset.animation = EAnimationMode[mode].toLowerCase();\r\n            node.style.transform = `translate(0, ${previous.y - nodeY}px)`;\r\n            if (mode === EAnimationMode.SHOW) {\r\n                node.style.height = current.height !== null ? `${current.height}px` : null;\r\n            }\r\n            else {\r\n                node.style.height = `${previous.height}px`;\r\n            }\r\n            node.style.opacity = mode === EAnimationMode.SHOW ? '0' : (mode === EAnimationMode.HIDE ? '1' : null);\r\n        }\r\n    },\r\n    {\r\n        delay: 10,\r\n        apply({ mode, current, nodeY, node }) {\r\n            node.style.transform = (mode === EAnimationMode.HIDE || mode === EAnimationMode.UPDATE_REMOVE) ? `translate(0, ${current.y - nodeY}px)` : null;\r\n            if (mode !== EAnimationMode.HIDE) {\r\n                node.style.height = current.height !== null ? `${current.height}px` : null;\r\n            }\r\n            node.style.opacity = mode === EAnimationMode.SHOW ? '1' : (mode === EAnimationMode.HIDE ? '0' : null);\r\n        }\r\n    },\r\n    {\r\n        delay: MAX_ANIMATION_TIME,\r\n        apply({ node }) {\r\n            delete node.dataset.animation;\r\n            node.style.opacity = null;\r\n            node.style.transform = null;\r\n        }\r\n    }\r\n];\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = defaultPhases;\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2FuaW1hdGlvbi9pbmRleC50cz80M2IwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SUV4Y2VwdGlvbkNvbnRleHR9IGZyb20gJy4uL2xvZ2ljJztcbmltcG9ydCBLZXlGaW5kZXIgZnJvbSAnLi9LZXlGaW5kZXInO1xuXG5leHBvcnQge2RlZmF1bHQgYXMgS2V5RmluZGVyfSBmcm9tICcuL0tleUZpbmRlcic7XG5cbmV4cG9ydCBlbnVtIEVBbmltYXRpb25Nb2RlIHtcbiAgVVBEQVRFLFxuICBVUERBVEVfQ1JFQVRFLFxuICBVUERBVEVfUkVNT1ZFLFxuICBTSE9XLFxuICBISURFXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSUFuaW1hdGlvbkl0ZW0ge1xuICBtb2RlOiBFQW5pbWF0aW9uTW9kZTtcbiAgbm9kZTogSFRNTEVsZW1lbnQ7XG4gIGtleTogc3RyaW5nO1xuXG4gIHByZXZpb3VzOiB7XG4gICAgaW5kZXg6IG51bWJlciB8IC0xO1xuICAgIHk6IG51bWJlcjtcbiAgICBoZWlnaHQ6IG51bWJlciB8IG51bGw7XG4gIH07XG5cbiAgLyoqXG4gICAqIHBvc2l0aW9uIG9mIHRoZSBhZGRlZCBub2RlIGNvbnNpZGVyaW5nIHRoZSBwcmV2aW91cyBoZWlnaHRcbiAgICovXG4gIG5vZGVZOiBudW1iZXI7XG4gIC8qKlxuICAgKiBwb3NpdGlvbiBvZiB0aGUgYWRkZWQgbm9kZSBjb25zaWRlcmluZyB0aGUgY3VycmVudCBoZWlnaHRcbiAgICovXG4gIG5vZGVZQ3VycmVudEhlaWdodDogbnVtYmVyO1xuXG4gIGN1cnJlbnQ6IHtcbiAgICBpbmRleDogbnVtYmVyIHwgLTE7XG4gICAgeTogbnVtYmVyO1xuICAgIGhlaWdodDogbnVtYmVyIHwgbnVsbDtcbiAgfTtcbn1cblxuY29uc3QgTk9fQ0hBTkdFX0RFTFRBID0gMTtcblxuZXhwb3J0IGZ1bmN0aW9uIG5vQW5pbWF0aW9uQ2hhbmdlKHtwcmV2aW91cywgbW9kZSwgbm9kZVksIGN1cnJlbnR9OiBJQW5pbWF0aW9uSXRlbSwgcHJldmlvdXNIZWlnaHQ6IG51bWJlciwgY3VycmVudEhlaWdodDogbnVtYmVyKSB7XG4gIC8vIHNvdW5kcyBsaWtlIHRoZSBzYW1lXG4gIGNvbnN0IHByZXYgPSBwcmV2aW91cy5oZWlnaHQgPT0gbnVsbCA/IHByZXZpb3VzSGVpZ2h0IDogcHJldmlvdXMuaGVpZ2h0O1xuICBjb25zdCBjdXJyID0gY3VycmVudC5oZWlnaHQgPT0gbnVsbCA/IGN1cnJlbnRIZWlnaHQgOiBjdXJyZW50LmhlaWdodDtcbiAgcmV0dXJuIG1vZGUgPT09IEVBbmltYXRpb25Nb2RlLlVQREFURSAmJiAoTWF0aC5hYnMocHJldmlvdXMueSAtIG5vZGVZKSA8PSBOT19DSEFOR0VfREVMVEEpICYmIChNYXRoLmFicyhwcmV2IC0gY3VycikgPD0gTk9fQ0hBTkdFX0RFTFRBKTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBJUGhhc2Uge1xuICByZWFkb25seSBkZWxheTogbnVtYmVyO1xuXG4gIGFwcGx5KGl0ZW06IFJlYWRvbmx5PElBbmltYXRpb25JdGVtPiwgcHJldmlvdXNGaW5kZXI6IEtleUZpbmRlciwgY3VycmVudEZpbmRlcjogS2V5RmluZGVyKTogdm9pZDtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBJQW5pbWF0aW9uQ29udGV4dCB7XG4gIHJlYWRvbmx5IHByZXZpb3VzOiBJRXhjZXB0aW9uQ29udGV4dDtcblxuICBwcmV2aW91c0tleShwcmV2aW91c1Jvd0luZGV4OiBudW1iZXIpOiBzdHJpbmc7XG5cbiAgY3VycmVudEtleShjdXJyZW50Um93SW5kZXg6IG51bWJlcik6IHN0cmluZztcblxuICBwaGFzZXM/OiBJUGhhc2VbXTtcbn1cblxuLyoqXG4gKiBtYXhpbWFsIGR1cmF0aW9uIG9mIGFsbCBhbmltYXRpb25zICsgZXh0cmEgd2FpdGluZyBiZWZvcmUgZS5nLiByb3dzIGFyZSByZWFsbHkgcmVtb3ZlZFxuICogQHR5cGUge251bWJlcn1cbiAqL1xuY29uc3QgTUFYX0FOSU1BVElPTl9USU1FID0gMTEwMDtcblxuZXhwb3J0IGNvbnN0IGRlZmF1bHRQaGFzZXMgPSBbXG4gIHtcbiAgICBkZWxheTogMCwgLy8gYmVmb3JlXG4gICAgYXBwbHkoe21vZGUsIHByZXZpb3VzLCBub2RlWSwgY3VycmVudCwgbm9kZX06IFJlYWRvbmx5PElBbmltYXRpb25JdGVtPikge1xuICAgICAgbm9kZS5kYXRhc2V0LmFuaW1hdGlvbiA9IEVBbmltYXRpb25Nb2RlW21vZGVdLnRvTG93ZXJDYXNlKCk7XG4gICAgICBub2RlLnN0eWxlLnRyYW5zZm9ybSA9IGB0cmFuc2xhdGUoMCwgJHtwcmV2aW91cy55IC0gbm9kZVl9cHgpYDtcbiAgICAgIGlmIChtb2RlID09PSBFQW5pbWF0aW9uTW9kZS5TSE9XKSB7XG4gICAgICAgIC8vIGFscmVhZHkgdGFyZ2V0IGhlaWdodFxuICAgICAgICBub2RlLnN0eWxlLmhlaWdodCA9IGN1cnJlbnQuaGVpZ2h0ICE9PSBudWxsID8gYCR7Y3VycmVudC5oZWlnaHR9cHhgIDogbnVsbDtcbiAgICAgIH0gZWxzZSB7IC8vIGFsd2F5cyBzZXQgcHJldmlvdXMgaGVpZ2h0IGZvciBkZWZhdWx0IGhlaWdodCBjaGFuZ2VzXG4gICAgICAgIG5vZGUuc3R5bGUuaGVpZ2h0ID0gYCR7cHJldmlvdXMuaGVpZ2h0fXB4YDtcbiAgICAgIH1cbiAgICAgIG5vZGUuc3R5bGUub3BhY2l0eSA9IG1vZGUgPT09IEVBbmltYXRpb25Nb2RlLlNIT1cgPyAnMCcgOiAobW9kZSA9PT0gRUFuaW1hdGlvbk1vZGUuSElERSA/ICcxJyA6IG51bGwpO1xuICAgIH1cbiAgfSxcbiAge1xuICAgIGRlbGF5OiAxMCwgLy8gYWZ0ZXIgc29tZSBkZWxheSBmb3IgdGhlIGJlZm9yZSBwaGFzZSBoYXZlIGJlZW4gYXBwbGllZCB2aXN1YWxseVxuICAgIGFwcGx5KHttb2RlLCBjdXJyZW50LCBub2RlWSwgbm9kZX06IFJlYWRvbmx5PElBbmltYXRpb25JdGVtPikge1xuICAgICAgLy8gbnVsbCBmb3IgYWRkZWQvdXBkYXRlIHNpbmNlIGFscmVhZHkgYXQgdGhlIHJpZ2h0IHBvc2l0aW9uXG4gICAgICBub2RlLnN0eWxlLnRyYW5zZm9ybSA9IChtb2RlID09PSBFQW5pbWF0aW9uTW9kZS5ISURFIHx8IG1vZGUgPT09IEVBbmltYXRpb25Nb2RlLlVQREFURV9SRU1PVkUpID8gYHRyYW5zbGF0ZSgwLCAke2N1cnJlbnQueSAtIG5vZGVZfXB4KWAgOiBudWxsO1xuICAgICAgaWYgKG1vZGUgIT09IEVBbmltYXRpb25Nb2RlLkhJREUpIHsgLy8ga2VlcCBoZWlnaHQgZm9yIHJlbW92YWxcbiAgICAgICAgbm9kZS5zdHlsZS5oZWlnaHQgPSBjdXJyZW50LmhlaWdodCAhPT0gbnVsbCA/IGAke2N1cnJlbnQuaGVpZ2h0fXB4YCA6IG51bGw7XG4gICAgICB9XG4gICAgICBub2RlLnN0eWxlLm9wYWNpdHkgPSBtb2RlID09PSBFQW5pbWF0aW9uTW9kZS5TSE9XID8gJzEnIDogKG1vZGUgPT09IEVBbmltYXRpb25Nb2RlLkhJREUgPyAnMCcgOiBudWxsKTtcbiAgICB9XG4gIH0sXG4gIHtcbiAgICBkZWxheTogTUFYX0FOSU1BVElPTl9USU1FLCAvLyBjbGVhbnVwXG4gICAgYXBwbHkoe25vZGV9OiBSZWFkb25seTxJQW5pbWF0aW9uSXRlbT4pIHtcbiAgICAgIGRlbGV0ZSBub2RlLmRhdGFzZXQuYW5pbWF0aW9uO1xuICAgICAgbm9kZS5zdHlsZS5vcGFjaXR5ID0gbnVsbDtcbiAgICAgIG5vZGUuc3R5bGUudHJhbnNmb3JtID0gbnVsbDtcbiAgICB9XG4gIH1cbl07XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL2FuaW1hdGlvbi9pbmRleC50cyJdLCJtYXBwaW5ncyI6IkFBR0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUVBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUE2QkE7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBc0JBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///12\n");

/***/ }),
/* 13 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__logic__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__IMixin__ = __webpack_require__(6);\n\r\n\r\nclass PrefetchMixin {\r\n    constructor(adapter, options) {\r\n        this.adapter = adapter;\r\n        this.prefetchTimeout = -1;\r\n        this.options = {\r\n            prefetchRows: 20,\r\n            cleanUpRows: 3,\r\n            delay: 50\r\n        };\r\n        Object.assign(this.options, options);\r\n        return this;\r\n    }\r\n    prefetchDown() {\r\n        this.prefetchTimeout = -1;\r\n        const context = this.adapter.context;\r\n        const nextLast = Math.min(this.adapter.visible.last + this.options.prefetchRows, context.numberOfRows - 1);\r\n        if (this.adapter.visible.last === nextLast && this.adapter.visible.last >= (this.adapter.visible.forcedLast + this.options.prefetchRows)) {\r\n            return;\r\n        }\r\n        this.adapter.addAtBottom(this.adapter.visible.last + 1, nextLast);\r\n        this.adapter.visible.last = nextLast;\r\n    }\r\n    prefetchUp() {\r\n        this.prefetchTimeout = -1;\r\n        if (this.adapter.visible.first <= (this.adapter.visible.forcedFirst - this.options.prefetchRows)) {\r\n            return;\r\n        }\r\n        const context = this.adapter.context;\r\n        const scroller = this.adapter.scroller;\r\n        const fakeOffset = Math.max(scroller.scrollTop - this.options.prefetchRows * context.defaultRowHeight, 0);\r\n        const height = scroller.clientHeight;\r\n        const { first, firstRowPos } = Object(__WEBPACK_IMPORTED_MODULE_0__logic__[\"d\" /* range */])(fakeOffset, height, context.defaultRowHeight, context.exceptions, context.numberOfRows);\r\n        if (first === this.adapter.visible.first) {\r\n            return;\r\n        }\r\n        const frozenShift = this.adapter.syncFrozen ? this.adapter.syncFrozen(first) : 0;\r\n        this.adapter.addAtBeginning(first, this.adapter.visible.first - 1, frozenShift);\r\n        this.adapter.visible.first = first;\r\n        this.adapter.updateOffset(firstRowPos);\r\n    }\r\n    triggerPrefetch(isGoingDown) {\r\n        if (this.prefetchTimeout >= 0) {\r\n            clearTimeout(this.prefetchTimeout);\r\n        }\r\n        const prefetchDownPossible = this.adapter.visible.last < (this.adapter.visible.forcedLast + this.options.prefetchRows);\r\n        const prefetchUpPossible = this.adapter.visible.first > (this.adapter.visible.forcedFirst - this.options.prefetchRows);\r\n        const isLast = this.adapter.visible.last === this.adapter.context.numberOfRows;\r\n        const isFirst = this.adapter.visible.first === 0;\r\n        if ((isGoingDown && !prefetchDownPossible && !isLast) || (!isGoingDown && !prefetchUpPossible && !isFirst)) {\r\n            return;\r\n        }\r\n        const op = (isGoingDown || isFirst) ? this.prefetchDown.bind(this) : this.prefetchUp.bind(this);\r\n        this.prefetchTimeout = setTimeout(op, this.options.delay);\r\n    }\r\n    cleanUpTop(first) {\r\n        this.prefetchTimeout = -1;\r\n        const newFirst = Math.max(0, first - this.options.cleanUpRows);\r\n        if (newFirst <= this.adapter.visible.first) {\r\n            return;\r\n        }\r\n        const frozenShift = this.adapter.syncFrozen ? this.adapter.syncFrozen(newFirst) : 0;\r\n        this.adapter.removeFromBeginning(this.adapter.visible.first, newFirst - 1, frozenShift);\r\n        const context = this.adapter.context;\r\n        let shift = (newFirst - this.adapter.visible.first) * context.defaultRowHeight;\r\n        if (context.exceptions.length > 0) {\r\n            for (let i = this.adapter.visible.first; i < newFirst; ++i) {\r\n                if (context.exceptionsLookup.has(i)) {\r\n                    shift += context.exceptionsLookup.get(i) - context.defaultRowHeight;\r\n                }\r\n            }\r\n        }\r\n        this.adapter.visible.first = newFirst;\r\n        this.adapter.updateOffset(this.adapter.visibleFirstRowPos + shift);\r\n        this.prefetchDown();\r\n    }\r\n    cleanUpBottom(last) {\r\n        this.prefetchTimeout = -1;\r\n        const newLast = last + this.options.cleanUpRows;\r\n        if (this.adapter.visible.last <= newLast) {\r\n            return;\r\n        }\r\n        this.adapter.removeFromBottom(newLast + 1, this.adapter.visible.last);\r\n        this.adapter.visible.last = newLast;\r\n        this.prefetchUp();\r\n    }\r\n    triggerCleanUp(first, last, isGoingDown) {\r\n        if (this.prefetchTimeout >= 0) {\r\n            clearTimeout(this.prefetchTimeout);\r\n        }\r\n        if ((isGoingDown && (first - this.options.cleanUpRows) <= this.adapter.visible.first) || (!isGoingDown && this.adapter.visible.last <= (last + this.options.cleanUpRows))) {\r\n            return;\r\n        }\r\n        this.prefetchTimeout = setTimeout(isGoingDown ? this.cleanUpTop.bind(this) : this.cleanUpBottom.bind(this), this.options.delay, isGoingDown ? first : last);\r\n    }\r\n    onScrolled(isGoingDown, scrollResult) {\r\n        if (scrollResult === __WEBPACK_IMPORTED_MODULE_1__IMixin__[\"a\" /* EScrollResult */].NONE) {\r\n            if (this.options.cleanUpRows > 0) {\r\n                this.triggerCleanUp(this.adapter.visible.forcedFirst, this.adapter.visible.forcedLast, isGoingDown);\r\n            }\r\n        }\r\n        else if (this.options.prefetchRows > 0) {\r\n            this.triggerPrefetch(isGoingDown);\r\n        }\r\n    }\r\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = PrefetchMixin;\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///13\n");

/***/ }),
/* 14 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ACellTableSection__ = __webpack_require__(15);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__ACellTableSection__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__MultiTableRowRenderer__ = __webpack_require__(16);\n/* unused harmony reexport default */\n\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL3RhYmxlL2luZGV4LnRzP2QwYzYiXSwic291cmNlc0NvbnRlbnQiOlsiXG5leHBvcnQge0lDZWxsUmVuZGVyQ29udGV4dCBhcyBJVGFibGVDZWxsUmVuZGVyQ29udGV4dCwgQUNlbGxUYWJsZVNlY3Rpb259IGZyb20gJy4vQUNlbGxUYWJsZVNlY3Rpb24nO1xuZXhwb3J0IHtJTXVsdGlUYWJsZVJvd1JlbmRlcmVyT3B0aW9ucywgSVNlcGFyYXRvckZhY3RvcnksIElUYWJsZUZhY3RvcnksIElUYWJsZVNlY3Rpb24sIGRlZmF1bHR9IGZyb20gJy4vTXVsdGlUYWJsZVJvd1JlbmRlcmVyJztcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBzcmMvdGFibGUvaW5kZXgudHMiXSwibWFwcGluZ3MiOiJBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///14\n");

/***/ }),
/* 15 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ARowRenderer__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixin__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__internal_ACellAdapter__ = __webpack_require__(9);\n\r\n\r\n\r\nclass ACellTableSection extends __WEBPACK_IMPORTED_MODULE_0__ARowRenderer__[\"b\" /* default */] {\r\n    constructor(header, body, tableId, style, options = {}) {\r\n        super(body, options);\r\n        this.header = header;\r\n        this.tableId = tableId;\r\n        this.style = style;\r\n        const that = this;\r\n        class LocalCell extends __WEBPACK_IMPORTED_MODULE_2__internal_ACellAdapter__[\"a\" /* default */] {\r\n            get context() {\r\n                return that.context;\r\n            }\r\n            createHeader(document, column) {\r\n                return that.createHeader(document, column);\r\n            }\r\n            updateHeader(node, column) {\r\n                return that.updateHeader(node, column);\r\n            }\r\n            createCell(document, index, column) {\r\n                return that.createCell(document, index, column);\r\n            }\r\n            updateCell(node, index, column) {\r\n                return that.updateCell(node, index, column);\r\n            }\r\n            forEachRow(callback) {\r\n                return that.forEachRow(callback);\r\n            }\r\n        }\r\n        this.cell = new LocalCell(this.header, this.style, tableId, ...(options.mixins || []));\r\n    }\r\n    addColumnMixin(mixinClass, options) {\r\n        this.cell.addColumnMixin(mixinClass, options);\r\n    }\r\n    get width() {\r\n        return this.context.column.totalHeight;\r\n    }\r\n    get hidden() {\r\n        return this.header.classList.contains('loading');\r\n    }\r\n    set hidden(value) {\r\n        const old = this.hidden;\r\n        if (old === value) {\r\n            return;\r\n        }\r\n        this.header.classList.toggle('loading', value);\r\n        this.body.classList.toggle('loading', value);\r\n        this.onVisibilityChanged(!value);\r\n    }\r\n    onVisibilityChanged(_visible) {\r\n    }\r\n    hide() {\r\n        this.hidden = true;\r\n    }\r\n    show(scrollLeft, clientWidth, isGoingRight) {\r\n        this.hidden = false;\r\n        this.cell.onScrolledHorizontally(scrollLeft, clientWidth, isGoingRight);\r\n    }\r\n    init() {\r\n        this.hide();\r\n        this.cell.init();\r\n        super.init();\r\n    }\r\n    destroy() {\r\n        super.destroy();\r\n        this.header.remove();\r\n        this.style.remove(this.tableId);\r\n    }\r\n    onScrolledVertically(scrollTop, clientHeight, isGoingDown) {\r\n        if (this.hidden) {\r\n            return __WEBPACK_IMPORTED_MODULE_1__mixin__[\"a\" /* EScrollResult */].NONE;\r\n        }\r\n        return super.onScrolledVertically(scrollTop, clientHeight, isGoingDown);\r\n    }\r\n    onScrolledHorizontally(scrollLeft, clientWidth, isGoingRight) {\r\n        return this.cell.onScrolledHorizontally(scrollLeft, clientWidth, isGoingRight);\r\n    }\r\n    updateHeaders() {\r\n        this.cell.updateHeaders();\r\n    }\r\n    updateColumnWidths() {\r\n        const context = this.context;\r\n        this.style.update(context.defaultRowHeight - context.padding(-1), context.columns, context.column.padding, this.tableId);\r\n    }\r\n    recreate(ctx) {\r\n        const scroller = this.bodyScroller;\r\n        const oldLeft = scroller.scrollLeft;\r\n        this.cell.recreate(oldLeft, scroller.clientWidth);\r\n        super.recreate(ctx);\r\n        scroller.scrollLeft = oldLeft;\r\n    }\r\n    clearPool() {\r\n        super.clearPool();\r\n        this.cell.clearPool();\r\n    }\r\n    createRow(node, rowIndex) {\r\n        this.cell.createRow(node, rowIndex);\r\n    }\r\n    updateRow(node, rowIndex) {\r\n        this.cell.updateRow(node, rowIndex);\r\n    }\r\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = ACellTableSection;\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///15\n");

/***/ }),
/* 16 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__logic__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixin__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__style_index__ = __webpack_require__(3);\n\r\n\r\n\r\nclass MultiTableRowRenderer {\r\n    constructor(node, htmlId, options = {}) {\r\n        this.node = node;\r\n        this.tableId = 0;\r\n        this.sections = [];\r\n        this.visible = {\r\n            first: 0,\r\n            forcedFirst: 0,\r\n            last: 0,\r\n            forcedLast: 0\r\n        };\r\n        this.options = {\r\n            columnPadding: 0\r\n        };\r\n        this.context = Object(__WEBPACK_IMPORTED_MODULE_0__logic__[\"e\" /* uniformContext */])(0, 500);\r\n        Object.assign(this.options, options);\r\n        node.innerHTML = `<header></header><main></main>`;\r\n        node.classList.add('lineup-engine', 'lineup-multi-engine');\r\n        this.style = new __WEBPACK_IMPORTED_MODULE_2__style_index__[\"a\" /* GridStyleManager */](this.node, htmlId);\r\n        const main = this.main;\r\n        let oldLeft = main.scrollLeft;\r\n        main.addEventListener('scroll', () => {\r\n            const left = main.scrollLeft;\r\n            if (left === oldLeft) {\r\n                return;\r\n            }\r\n            const isGoingRight = left > oldLeft;\r\n            oldLeft = left;\r\n            this.onScrolledHorizontally(left, main.clientWidth, isGoingRight);\r\n        });\r\n    }\r\n    update() {\r\n        this.context = Object(__WEBPACK_IMPORTED_MODULE_0__logic__[\"b\" /* nonUniformContext */])(this.sections.map((d) => d.width), NaN, this.options.columnPadding);\r\n        this.updateGrid();\r\n        this.onScrolledHorizontally(this.main.scrollLeft, this.main.clientWidth, false);\r\n    }\r\n    updateGrid() {\r\n        const content = __WEBPACK_IMPORTED_MODULE_2__style_index__[\"a\" /* GridStyleManager */].gridColumn(this.sections);\r\n        this.style.updateRule(`multiTableRule`, `${this.style.id} > header, ${this.style.id} > main { ${content} }`);\r\n    }\r\n    onScrolledHorizontally(scrollLeft, clientWidth, isGoingRight) {\r\n        const { first, last } = Object(__WEBPACK_IMPORTED_MODULE_0__logic__[\"d\" /* range */])(scrollLeft, clientWidth, this.context.defaultRowHeight, this.context.exceptions, this.context.numberOfRows);\r\n        const visible = this.visible;\r\n        visible.forcedFirst = first;\r\n        visible.forcedLast = last;\r\n        let offset = 0;\r\n        this.sections.forEach((s, i) => {\r\n            if (i >= first && i <= last) {\r\n                s.show(Math.max(0, scrollLeft - offset), Math.min(scrollLeft + clientWidth - offset, s.width), isGoingRight);\r\n            }\r\n            else {\r\n                s.hide();\r\n            }\r\n            offset += s.width;\r\n        });\r\n        visible.first = first;\r\n        visible.last = last;\r\n        return __WEBPACK_IMPORTED_MODULE_1__mixin__[\"a\" /* EScrollResult */].PARTIAL;\r\n    }\r\n    destroy() {\r\n        this.sections.forEach((d) => d.destroy());\r\n        this.node.remove();\r\n    }\r\n    get doc() {\r\n        return this.node.ownerDocument;\r\n    }\r\n    get header() {\r\n        return this.node.querySelector('header');\r\n    }\r\n    get main() {\r\n        return this.node.querySelector('main');\r\n    }\r\n    pushTable(factory, ...extras) {\r\n        const header = this.doc.createElement('article');\r\n        const body = this.doc.createElement('article');\r\n        const tableId = `T${this.tableId++}`;\r\n        const ids = this.style.tableIds(tableId);\r\n        header.id = ids.header;\r\n        body.id = ids.body;\r\n        this.header.appendChild(header);\r\n        this.main.appendChild(body);\r\n        const table = factory(header, body, tableId, this.style, ...extras);\r\n        table.init();\r\n        this.sections.push(table);\r\n        this.update();\r\n        return table;\r\n    }\r\n    pushSeparator(factory, ...extras) {\r\n        const header = this.doc.createElement('section');\r\n        const body = this.doc.createElement('section');\r\n        this.header.appendChild(header);\r\n        this.main.appendChild(body);\r\n        const separator = factory(header, body, this.style, ...extras);\r\n        separator.init();\r\n        this.sections.push(separator);\r\n        this.update();\r\n        return separator;\r\n    }\r\n    remove(section) {\r\n        const index = this.sections.indexOf(section);\r\n        if (index < 0) {\r\n            return false;\r\n        }\r\n        this.sections.splice(index, 1);\r\n        section.destroy();\r\n        this.update();\r\n        return true;\r\n    }\r\n    widthChanged() {\r\n        this.update();\r\n    }\r\n}\n/* unused harmony export default */\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///16\n");

/***/ })
/******/ ]);
});